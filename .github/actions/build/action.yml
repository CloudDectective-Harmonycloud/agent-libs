name: Driver build
description: "action for driver build"
inputs:
  ssh_key:
    description: ssh key
    required: true
  hosts:
    description: hosts
    required: true
  host_key_one:
    description: host key one
    required: true
  host_key_two:
    description: host key two
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ inputs.ssh_key }}

    - name: Build and Package
      shell: bash
      env:
        HOSTS: ${{ inputs.hosts }}
      run: |
        # Add the host key
        echo ${{ inputs.host_key_one }} >> ~/.ssh/known_hosts
        echo ${{ inputs.host_key_two }} >> ~/.ssh/known_hosts
        
        # Build
        wget https://github.com/KindlingProject/agent-libs/archive/${GITHUB_SHA}.tar.gz -O /tmp/agent-libs-${GITHUB_SHA}.tar.gz
        for HOST in $HOSTS; do
        {
          echo "scp agent-libs.tar.gz"
          scp /tmp/agent-libs-${GITHUB_SHA}.tar.gz $HOST:/tmp
          ssh "$HOST" << EOF
          cd /tmp
          echo "unzip agent-libs..."
          tar -zvxf agent-libs-${GITHUB_SHA}.tar.gz
          sed -i 's/\/lib\/modules\/\$version\/build/\/usr\/src\/kernels\/\$version/g' /tmp/agent-libs-${GITHUB_SHA}/compile-probe.sh
          sed -i 's/\/lib\/modules/\/usr\/src\/kernels/g' /tmp/agent-libs-${GITHUB_SHA}/compile-probe.sh
          echo "Compile kindling-drivers..."
          docker run --rm -v /usr:/host/usr -v /lib/modules:/host/lib/modules -v /tmp/agent-libs-${GITHUB_SHA}:/source kindlingproject/kernel-builder:latest
        EOF
        }&
        done
        wait
        
        # Copy and package
        rm -rf /tmp/kindling-falcolib-probe && mkdir /tmp/kindling-falcolib-probe
        for HOST in $HOSTS; do
          scp -i /root/.ssh/github_public_id_rsa $HOST:/tmp/agent-libs-${GITHUB_SHA}/kindling-falcolib-probe/* /tmp/kindling-falcolib-probe/
        done

        tar -cvzf /tmp/kindling-falcolib-probe.tar.gz /tmp/kindling-falcolib-probe/

        # Check version
        ls -a /tmp/kindling-falcolib-probe/
        
        # Clean up on remote
        for HOST in $HOSTS; do
          ssh "$HOST" << EOF
          rm -rf /tmp/agent-libs-${GITHUB_SHA}*
        EOF
        done