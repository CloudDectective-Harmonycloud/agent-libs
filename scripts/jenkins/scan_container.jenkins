/* vim:expandtab:sw=4:ts=4:sts=4
*/

pipeline {
    agent { label 'agent-docker-builder' }
    parameters {
        string(name: 'CONTAINER_NAME', defaultValue: '', trim: true, description: 'the container. can come from quay or docker.')
    }
    environment {
        CONTAINER_NAME="${params.CONTAINER_NAME}"
    }
    stages {

    stage('Pull Container') {
        steps {
            withCredentials([usernamePassword(credentialsId: 'docker-hub', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME'), usernamePassword(credentialsId: 'QUAY', passwordVariable: 'QUAY_PASSWORD', usernameVariable: 'QUAY_USERNAME')]) {
                script {
                    docker.withRegistry("https://docker.internal.sysdig.com", 'jenkins-artifactory') {

                        sh label: '', script: '''
                            echo "$DOCKER_PASSWORD" | docker login docker.io -u="$DOCKER_USERNAME" --password-stdin
                            echo "$QUAY_PASSWORD" | docker login quay.io -u="$QUAY_USERNAME" --password-stdin
                            docker pull $CONTAINER_NAME
                            echo $CONTAINER_NAME > file_with_name_of_container
                        '''
                    }
                }
            }
        }
    }
    stage('Scan Container') {
        steps {
            sysdig engineurl: 'https://prodmon.app.sysdig.com/api/scanning/v1/anchore', engineCredentialsId: 'prodmon-secure-scanning', engineRetries: '10000', name: 'file_with_name_of_container'
        }
    }

    }

    post {
        always {
            sh label: '', script: """
                docker rmi ${params.CONTAINER_NAME}
                sudo rm -rf * .[!.]*
            """
            cleanWs()
        }
    }
}
