/* vim:expandtab:sw=4:ts=4:sts=4
*/

pipeline {
    agent { label 'agent-docker-builder' }
    parameters {
        string(name: 'AGENT_BRANCH', defaultValue: 'dev', trim: true)
        string(name: 'SYSDIG_BRANCH', defaultValue: 'dev', trim: true)
        string(name: 'FALCO_BRANCH', defaultValue: 'master-sync', trim: true)
        string(name: 'PROTOREPO_BRANCH', defaultValue: 'master', trim: true)
        string(name: 'PROMETHEUS_BRANCH', defaultValue: 'master', trim: true)
        booleanParam(name: 'TAG_LATEST', defaultValue: false, description: 'set this to tag the build with latest instead of with the branch name')
        string(name: 'CONTAINER_NAME', defaultValue: '$AGENT_BRANCH')
    }
    stages {
        stage('Check out dependencies') {
            steps {
                dir('agent') {
                    checkout scm
                }
            }
        }

        stage('Tag Prev') {
            when {
                expression { params.TAG_LATEST == true }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'QUAY', passwordVariable: 'QUAY_PASSWORD', usernameVariable: 'QUAY_USERNAME')]) {
                    sh label: '', script: '''
                        echo "$QUAY_PASSWORD" | docker login quay.io -u="$QUAY_USERNAME" --password-stdin
                        docker pull quay.io/sysdig/agent-builder:latest
                        docker tag quay.io/sysdig/agent-builder:latest quay.io/sysdig/agent-builder:prev_latest
                        docker pull quay.io/sysdig/agent-builder:latest-centos
                        docker tag quay.io/sysdig/agent-builder:latest-centos quay.io/sysdig/agent-builder:prev_latest-centos
                    '''
                }
            }
        }

        stage('Build') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'QUAY', passwordVariable: 'QUAY_PASSWORD', usernameVariable: 'QUAY_USERNAME')]) {
                    sh label: '', script: '''
                        echo "$QUAY_PASSWORD" | docker login quay.io -u="$QUAY_USERNAME" --password-stdin
                        docker pull quay.io/sysdig/agent-builder:latest
                        docker pull quay.io/sysdig/agent-builder:${AGENT_BRANCH} || echo "agent-builder:${AGENT_BRANCH} not found"
                        docker build --build-arg max_parallelism=$(nproc) -t quay.io/sysdig/agent-builder:$AGENT_BRANCH -f agent/docker/builder/Dockerfile --pull agent/docker/builder

                        docker pull quay.io/sysdig/agent-builder:latest-centos
                        docker pull quay.io/sysdig/agent-builder:${AGENT_BRANCH}-centos || echo "agent-builder:${AGENT_BRANCH}-centos not found"
                        MAKE_JOBS=${nproc} IMAGE_NAME=quay.io/sysdig/agent-builder:$AGENT_BRANCH-centos agent/docker/centos-builder/build-container.sh
                    '''
                }
            }
        }

        stage('Upload') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'QUAY', passwordVariable: 'QUAY_PASSWORD', usernameVariable: 'QUAY_USERNAME')]) {
                    sh label: '', script: """
                        CONTAINER_NAME=${params.CONTAINER_NAME}
                    """ +
                    '''
                        echo "$QUAY_PASSWORD" | docker login quay.io -u="$QUAY_USERNAME" --password-stdin
                        docker push quay.io/sysdig/agent-builder:$AGENT_BRANCH
                        docker tag quay.io/sysdig/agent-builder:$AGENT_BRANCH quay.io/sysdig/agent-builder:$CONTAINER_NAME
                        docker push quay.io/sysdig/agent-builder:$CONTAINER_NAME

                        docker push quay.io/sysdig/agent-builder:$AGENT_BRANCH-centos
                        docker tag quay.io/sysdig/agent-builder:$AGENT_BRANCH-centos quay.io/sysdig/agent-builder:$CONTAINER_NAME-centos
                        docker push quay.io/sysdig/agent-builder:$CONTAINER_NAME-centos
                    '''
                }
            }
        }

        stage('Upload Latest') {
            when {
                expression { params.TAG_LATEST == true }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'QUAY', passwordVariable: 'QUAY_PASSWORD', usernameVariable: 'QUAY_USERNAME')]) {
                    sh label: '', script: '''
                        docker tag quay.io/sysdig/agent-builder:$AGENT_BRANCH quay.io/sysdig/agent-builder:latest
                        LATEST_ID=`docker images --format '{{.ID}}' quay.io/sysdig/agent-builder:latest`
                        PREV_ID=`docker images --format '{{.ID}}' quay.io/sysdig/agent-builder:prev_latest`
                        if [ -n "$LATEST_ID" -a "$LATEST_ID" != "$PREV_ID" ]; then
                            echo "$QUAY_PASSWORD" | docker login quay.io -u="$QUAY_USERNAME" --password-stdin
                            docker push quay.io/sysdig/agent-builder:prev_latest
                            docker push quay.io/sysdig/agent-builder:latest
                        fi

                        docker tag quay.io/sysdig/agent-builder:$AGENT_BRANCH-centos quay.io/sysdig/agent-builder:latest-centos
                        LATEST_ID=`docker images --format '{{.ID}}' quay.io/sysdig/agent-builder:latest-centos`
                        PREV_ID=`docker images --format '{{.ID}}' quay.io/sysdig/agent-builder:prev_latest-centos`
                        if [ -n "$LATEST_ID" -a "$LATEST_ID" != "$PREV_ID" ]; then
                            echo "$QUAY_PASSWORD" | docker login quay.io -u="$QUAY_USERNAME" --password-stdin
                            docker push quay.io/sysdig/agent-builder:prev_latest-centos
                            docker push quay.io/sysdig/agent-builder:latest-centos
                        fi
                    '''
                }
            }
        }
    }

    post {
        always {
            sh label: '', script: '''
                docker rmi -f quay.io/sysdig/agent-builder:$AGENT_BRANCH || echo "no branch to delete"
                docker rmi -f quay.io/sysdig/agent-builder:prev_latest || echo "no branch to delete"
                docker rmi -f quay.io/sysdig/agent-builder:$AGENT_BRANCH-centos || echo "no branch to delete"
                docker rmi -f quay.io/sysdig/agent-builder:prev_latest-centos || echo "no branch to delete"
                docker rmi -f $(docker images | grep -vE 'quay.io/sysdig/agent-builder.*latest-(alpine|centos)' | awk 'NR>1 {print $3}') || echo "no containers to remove"
                docker images -q -f 'dangling=true' | xargs --no-run-if-empty docker rmi -f || echo "something failed"
                sudo rm -rf * .[!.]*
            '''
            cleanWs()
        }
    }
}
