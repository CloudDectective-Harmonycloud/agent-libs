#!/bin/bash

SCRIPTS_DIR=$(dirname $(readlink -f $0))
if [ -z "$WORKSPACE" ]
then
	WORKSPACE=$SCRIPTS_DIR/../../../..
fi

SOURCE=$WORKSPACE
INSTALL_DIR=$WORKSPACE/install
OUT=$WORKSPACE/out
BUILD=$WORKSPACE/build

sudo rm -rf $INSTALL_DIR
mkdir -p $INSTALL_DIR
sudo rm -rf $OUT
mkdir -p $OUT
sudo rm -rf $BUILD
mkdir -p $BUILD

docker pull quay.io/sysdig/agent-builder
docker images -q -f 'dangling=true' | xargs --no-run-if-empty docker rmi -f

# Build the release-internal variant of the container
docker run -i --rm -e MAKE_JOBS=$(nproc) -v $SOURCE:/draios:ro -v $INSTALL_DIR:/opt/draios -v $OUT:/out -v /var/run/docker.sock:/var/run/docker.sock -v $BUILD:/code/agent/build quay.io/sysdig/agent-builder container release-internal
rc=$?; if [[ $rc != 0 ]]; then echo "FAILED! Postsubmit build unsuccessful!";exit $rc; fi

# Push to artifactory
docker tag agent:latest docker.internal.sysdig.com/agent-internal:dev
docker push docker.internal.sysdig.com/agent-internal:dev

# Don't cleanup after the build so the other jobs can use the same artifacts
