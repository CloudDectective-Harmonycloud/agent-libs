#!/bin/bash
set -exuo pipefail

if [ $# -eq 2 ]
then
	REPOSITORY_BASENAME=$1
	BINARIES_DIR=$2
	IMAGE=""
elif [ $# -eq 3 ]
then
	REPOSITORY_BASENAME=$1
	BINARIES_DIR=$2
	IMAGE=$3
else
    echo "Usage: $0 repo-name bin-dir [image]" >&2
    exit 1
fi

DOCKERFILES_ROOT_DIR="${BINARIES_DIR}/tmp/dockerfiles"
IMAGES=("agent" "agent-slim" "agent-slim-v2" "agentone" "agent-kmodule" "agent-kmodule-thin")
mkdir -p ${DOCKERFILES_ROOT_DIR}
tar -C "${DOCKERFILES_ROOT_DIR}" -zxvf "${BINARIES_DIR}"/release/draios-*-dockerfiles.tar.gz

function build_image {
	pushd "${DOCKERFILES_ROOT_DIR}/opt/draios/docker/${IMAGE}/${REPOSITORY_BASENAME}"

	# We have some pre-work for agent-slim-v2
	# 1. Copy the agent-slim.tar.gz that was generated to the local docker directory
	# 2. Extract the tar ball and strip the agent binaries of debug symbols
	# 3. Manipulate the image tags to read as "agent-slim" instead of agent-slim-v2
	if [[ "${IMAGE}" == "agent-slim-v2" ]]; then
		echo "Extracting agent-slim.tar.gz for 'agent-slim-v2'"
		cp "${BINARIES_DIR}"/release/*agent-slim.tar.gz .
		rm -rf ./opt/draios
		tar -xzf *agent-slim.tar.gz
		find ./opt/draios/bin -type f | xargs file | awk '/ELF/ { sub(/:$/, "", $1); print $1 }' | xargs strip -g
		rm -rf ./opt/draios/lib/python-deps2.6/
		# Blow away some python related unnecessary files
		find ./opt/draios/lib -name '*psycopg2*' -exec rm -rf {} + 2>/dev/null
		find ./opt/draios/lib -type d -name "enum*" -exec rm -r {} + 2>/dev/null

	fi

	docker build -t "${IMAGE}" .

	popd
}

if [ -z $IMAGE ]
then
	for IMAGE in "${IMAGES[@]}"
	do
		build_image
	done
else
	build_image
fi
