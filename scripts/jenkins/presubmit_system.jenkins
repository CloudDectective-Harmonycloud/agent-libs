pipeline {
	agent { label 'agent-docker-builder' }
	stages {
		stage('Check out dependencies') {
			steps {
				dir('agent') {
					checkout scm
				}
				dir('oss-falco') {
					checkout([$class: 'GitSCM', branches: [[name: 'master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github-jenkins-user-token', url: 'https://github.com/draios/oss-falco']]])
					sh "git checkout ${params.FALCO_BRANCH}"
				}
				dir('sysdig') {
					checkout([$class: 'GitSCM', branches: [[name: 'dev']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github-jenkins-user-token', url: 'https://github.com/draios/sysdig']]])
					sh "git checkout ${params.SYSDIG_BRANCH}"
				}
			}
		}
		stage('Build') {
			steps {
				withCredentials([usernamePassword(credentialsId: 'QUAY', passwordVariable: 'QUAY_PASSWORD', usernameVariable: 'QUAY_USERNAME')]) {
					sh label: '', script: '''
						docker login -u="$QUAY_USERNAME" -p="$QUAY_PASSWORD"  quay.io
						docker pull quay.io/sysdig/agent-builder:$BUILDER_VERSION
						mkdir install || echo "installdir already exists"
						docker run -i --rm -e MAKE_JOBS=$(nproc) -v $PWD/install:/opt/draios -v $PWD:/draios:ro quay.io/sysdig/agent-builder:$BUILDER_VERSION install-test
					'''
				}
			}
		}
		stage('Insert Module') {
			steps {
				sh label: '', script: '''
					sudo rmmod sysdigcloud-probe || echo "not currently loaded"
					docker pull sysdig/agent-kmodule:dev
					docker run -i --privileged --rm --name sysdig-agent-kmodule -v /usr:/host/usr:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro sysdig/agent-kmodule:dev
				'''
			}
		}
		stage('Run tests') {
			steps {
				sh label: '', script: '''
					sudo ./agent/scripts/jenkins/run-tests ./install
				'''
			}
		}
	}
	post {
		always {
			sh label: '', script: '''
				sudo rmmod sysdigcloud-probe || echo "not currently loaded"
			'''
			cleanWs deleteDirs: true, notFailBuild: true
		}
	}
}
