/* vim:expandtab:sw=4:ts=4:sts=4
*/

pipeline {
    agent { label 'agent-docker-builder' }
    stages {
        stage('Check out dependencies') {
            steps {
                dir('agent') {
                    checkout scm
                }
                dir('oss-falco') {
                    checkout([$class: 'GitSCM', branches: [[name: 'master-sync']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github-jenkins-user-token', url: 'https://github.com/draios/oss-falco']]])
                    sh "git checkout ${params.FALCO_BRANCH}"
                }
                dir('libsinsp') {
                    checkout([$class: 'GitSCM', branches: [[name: 'dev']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github-jenkins-user-token', url: 'https://github.com/draios/libsinsp']]])
                    sh "git checkout ${params.LIBSINSP_BRANCH}"
                }
                dir('libscap') {
                    checkout([$class: 'GitSCM', branches: [[name: 'dev']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github-jenkins-user-token', url: 'https://github.com/draios/libscap']]])
                    sh "git checkout ${params.LIBSCAP_BRANCH}"
                }
                dir('protorepo') {
                    checkout([$class: 'GitSCM', branches: [[name: 'master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github-jenkins-user-token', url: 'https://github.com/draios/protorepo']]])
                    sh "git checkout ${params.PROTOREPO_BRANCH}"
                }
                dir('agent-libs') {
                    checkout([$class: 'GitSCM', branches: [[name: 'dev']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github-jenkins-user-token', url: 'https://github.com/draios/agent-libs']]])
                    sh "git checkout ${params.LIBS_BRANCH}"
                }
            }
        }
        stage('Build') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'QUAY', passwordVariable: 'QUAY_PASSWORD', usernameVariable: 'QUAY_USERNAME')]) {
                    sh label: '', script: '''
                        echo "$QUAY_PASSWORD" | docker login quay.io -u="$QUAY_USERNAME" --password-stdin
                        docker pull quay.io/sysdig/agent-builder:$BUILDER_VERSION-centos
                        docker run -i --rm -e MAKE_JOBS=$(nproc) -e AGENT_IMAGE=agent-internal:$AGENT_BRANCH -v $PWD:/draios:ro -v /var/run/docker.sock:/var/run/docker.sock quay.io/sysdig/agent-builder:$BUILDER_VERSION-centos container
                        docker run -i --rm -e MAKE_JOBS=$(nproc) -e AGENT_IMAGE=agentone:$AGENT_BRANCH -v $PWD:/draios:ro -v /var/run/docker.sock:/var/run/docker.sock quay.io/sysdig/agent-builder:$BUILDER_VERSION-centos agentone
                    '''
                }
            }
        }
        stage('Upload') {
            steps {
                script {
                    docker.withRegistry("https://docker.internal.sysdig.com", 'jenkins-artifactory') {
                        sh label: '', script: '''
                            docker tag agent-internal:$AGENT_BRANCH  docker.internal.sysdig.com/agent-internal:$AGENT_BRANCH
                            docker push docker.internal.sysdig.com/agent-internal:$AGENT_BRANCH
                            docker tag agentone:$AGENT_BRANCH  docker.internal.sysdig.com/agentone:$AGENT_BRANCH
                            docker push docker.internal.sysdig.com/agentone:$AGENT_BRANCH
                        '''
                    }
                }
            }
        }
    }
    post {
        always {
            sh label: '', script: '''
                docker rmi -f agent-internal:$AGENT_BRANCH || echo "no image to remove"
                docker rmi -f $(docker images | grep -ve 'quay.io/sysdig/agent-builder.*latest'  | awk 'NR>1 {print $3}') || echo "no containers to remove"
                docker images -q -f 'dangling=true' | xargs --no-run-if-empty docker rmi -f || echo "nothing to remove"
                sudo rm -rf * .[!.]*
            '''
            cleanWs()
        }
    }
}
