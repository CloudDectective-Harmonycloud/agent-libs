#!/bin/sh
set -e

CONFIG_FILE=@CMAKE_INSTALL_PREFIX@/etc/dragent.yaml
OLD_CONFIG_FILE=@CMAKE_INSTALL_PREFIX@/bin/dragent.properties

if [ ! -e $CONFIG_FILE ]; then
	if grep -q ^customerid $OLD_CONFIG_FILE > /dev/null 2>&1; then
		CUSTOMERID=`grep ^customerid $OLD_CONFIG_FILE|tr -d ' '|cut -d'=' -f2`
		echo "customerid: $CUSTOMERID" >> $CONFIG_FILE
	fi
	if grep -q ^ui.tags $OLD_CONFIG_FILE > /dev/null 2>&1; then
		TAGS=`grep ^ui.tags $OLD_CONFIG_FILE|tr -d ' '|cut -d'=' -f2`
		echo "tags: $TAGS" >> $CONFIG_FILE
	fi
	if grep -q ^remotefs.enabled $OLD_CONFIG_FILE > /dev/null 2>&1; then
		REMOTEFS=`grep ^remotefs.enabled $OLD_CONFIG_FILE|tr -d ' '|cut -d'=' -f2`
		echo "remotefs: $REMOTEFS" >> $CONFIG_FILE
	fi
	if grep -q ^protocols.enabled $OLD_CONFIG_FILE > /dev/null 2>&1; then
		PROTOCOLS=`grep ^protocols.enabled $OLD_CONFIG_FILE|tr -d ' '|cut -d'=' -f2`
		echo "protocols: $PROTOCOLS" >> $CONFIG_FILE
	fi
fi

for SERVICE in $(dpkg -L draios-agent | sed '-nes@^/etc/init\.d/@@p')
do
	if [ -x "/etc/init.d/$SERVICE" ]; then
			update-rc.d $SERVICE defaults >/dev/null
	fi
done

DKMS_PACKAGE_NAME="@PACKAGE_NAME@"
DKMS_VERSION="@PROBE_VERSION@"

postinst_found=0

case "$1" in
	configure)
		if [ -x "`which dkms 2>/dev/null`" -a -d "/usr/src/$DKMS_PACKAGE_NAME-$DKMS_VERSION" ]; then
			for DKMS_POSTINST in /usr/lib/dkms/common.postinst /usr/share/$DKMS_PACKAGE_NAME/postinst; do
				if [ -f $DKMS_POSTINST ]; then
					$DKMS_POSTINST $DKMS_PACKAGE_NAME $DKMS_VERSION /usr/share/$DKMS_PACKAGE_NAME "" $2
					postinst_found=1
					break
				fi
			done
			if [ "$postinst_found" -eq 0 ]; then
				echo "ERROR: DKMS version is too old and $DKMS_PACKAGE_NAME was not"
				echo "built with legacy DKMS support."
				echo "You must either rebuild $DKMS_PACKAGE_NAME with legacy postinst"
				echo "support or upgrade DKMS to a more current version."
				exit 1
			fi
		fi
		;;
	*)
		postinst_found=1
		;;
esac

cacert=`find /usr/lib/python3*/*-packages/certifi -name cacert.pem 2> /dev/null | head -n 1`
if [ -e "$cacert" ]; then
	cp $cacert @CMAKE_INSTALL_PREFIX@/lib/python-deps/certifi/
else
	echo "WARNING: Could not find cacert.pem file for python3 certifi package."
	echo "         Some appchecks might not work correctly. To correct this,"
	echo "         run 'pip install certifi' and then re-run the installer."
fi

if [ -x "/etc/init.d/dragent" -a "$postinst_found" -eq 1 ]; then
        if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
                invoke-rc.d dragent start || exit $?
        else
                /etc/init.d/dragent start || exit $?
        fi
fi
