#!/bin/bash
set -exo pipefail

if [[ $(uname) == "Darwin" ]]; then
  SCRIPT=$(greadlink -f $0)
else
  SCRIPT=$(readlink -f $0)
fi

AGENT_SOURCEDIR=$(dirname $SCRIPT)

if [ -z "$WORKDIR" ]; then
	WORKDIR=$AGENT_SOURCEDIR/..
fi

DEPENDENCIES=$WORKDIR/agent/dependencies
DEPENDENCIES_URL="https://s3.amazonaws.com/download.draios.com/dependencies"

if [ ! -d "$DEPENDENCIES" ]; then
	mkdir -p $DEPENDENCIES
fi

ZLIB_DIR=$DEPENDENCIES/zlib-1.2.8
if [ ! -d "$ZLIB_DIR" ]; then
	cd $DEPENDENCIES
	wget $DEPENDENCIES_URL/zlib-1.2.8.tar.gz
	tar -xzf zlib-1.2.8.tar.gz
	cd $ZLIB_DIR
	./configure
	make
fi

PROTBUF_DIR=$DEPENDENCIES/protobuf-2.5.0
if [ ! -d "$PROTBUF_DIR" ]; then
	cd $DEPENDENCIES
	wget $DEPENDENCIES_URL/protobuf-2.5.0.tar.bz2
	tar -xjf protobuf-2.5.0.tar.bz2
	cd $PROTBUF_DIR
	CPPFLAGS=-I$ZLIB_DIR LDFLAGS=-L$ZLIB_DIR ./configure --with-zlib
	make
fi

OPENSSL_DIR=$DEPENDENCIES/openssl-1.0.1h
if [ ! -d "$OPENSSL_DIR" ]; then
	cd $DEPENDENCIES
	wget $DEPENDENCIES_URL/openssl-1.0.1h.tar.gz
	tar -xzf openssl-1.0.1h.tar.gz
	cd $OPENSSL_DIR
	./config --prefix=$OPENSSL_DIR/target
	make install
	cd ..
fi

POCO_DIR=$DEPENDENCIES/poco-1.4.6p4-all
if [ ! -d "$POCO_DIR" ]; then
	cd $DEPENDENCIES
	wget $DEPENDENCIES_URL/poco-1.4.6p4-all.tar.gz
	tar -xzf poco-1.4.6p4-all.tar.gz
	cd $POCO_DIR
	patch -p1 < $AGENT_SOURCEDIR/patches/poco_libc_canonname_bug.patch
	./configure --prefix=./target --static --no-samples --no-tests --omit=Data/MySQL,Data/ODBC --include-path=$OPENSSL_DIR/target/include
	make install
	cd ..
fi

GTEST_DIR=$DEPENDENCIES/gtest-1.7.0
if [ ! -d "$GTEST_DIR" ]; then
	cd $DEPENDENCIES
	wget $DEPENDENCIES_URL/gtest-1.7.0.zip
	unzip gtest-1.7.0.zip
	cd $GTEST_DIR
	g++ -Iinclude -c fused-src/gtest/gtest-all.cc -o gtest-all.o
	g++ -Iinclude -c fused-src/gtest/gtest_main.cc -o gtest_main.o
  	ar -rv libgtest.a gtest-all.o
  	ar -rv libgtest_main.a gtest_main.o
fi

if [ ! -d "$DEPENDENCIES/simpleopt" ]; then
	cd $DEPENDENCIES
	wget $DEPENDENCIES_URL/simpleopt-3.6.zip
	unzip simpleopt-3.6.zip
fi

CMAKE_DIR=$DEPENDENCIES/cmake-3.0.0
if [ ! -d "$CMAKE_DIR" ]; then
	cd $DEPENDENCIES
	wget $DEPENDENCIES_URL/cmake-3.0.0.tar.gz
	tar -xzf cmake-3.0.0.tar.gz
	cd $CMAKE_DIR
	./bootstrap
	make
fi

LIBSSH_DIR=$DEPENDENCIES/libssh-0.6.3
if [ ! -d "$LIBSSH_DIR" ]; then
	cd $DEPENDENCIES
	wget $DEPENDENCIES_URL/libssh-0.6.3.tar.xz
	tar -xf libssh-0.6.3.tar.xz
	cd $LIBSSH_DIR
	mkdir build
	cd build
	$CMAKE_DIR/bin/cmake -DCMAKE_INSTALL_PREFIX=$LIBSSH_DIR/target -DOPENSSL_LIBRARIES=$OPENSSL_DIR/target/lib -DOPENSSL_INCLUDE_DIRS=$OPENSSL_DIR/target/include -DZLIB_LIBRARY=$ZLIB_DIR -DZLIB_INCLUDE_DIR=$ZLIB_DIR -DWITH_STATIC_LIB=ON -DWITH_GSSAPI=OFF ..
	make -C src install
	make -C include install
fi

LUAJIT_DIR=$DEPENDENCIES/LuaJIT-2.0.3
if [ ! -d "$LUAJIT_DIR" ]; then
	cd $DEPENDENCIES
	wget $DEPENDENCIES_URL/LuaJIT-2.0.3.tar.gz
	tar -xzf LuaJIT-2.0.3.tar.gz
	cd $LUAJIT_DIR
	make
fi

JAVA_DIR=$DEPENDENCIES/jdk1.7.0_75
ARCH=$(uname -m)
if [ ! -d "$JAVA_DIR" ]; then
	cd $DEPENDENCIES
	if [[ $ARCH == "x86_64" ]]; then
		TARFILE=jdk-7u75-linux-x64.tar.bz2
	else
		TARFILE=jdk-7u75-linux-i586.tar.bz2
	fi
	wget $DEPENDENCIES_URL/$TARFILE
	tar -xjf $TARFILE
fi

MAVEN_DIR=$DEPENDENCIES/apache-maven-3.2.5
if [ ! -d "$MAVEN_DIR" ]; then
	cd $DEPENDENCIES
	wget $DEPENDENCIES_URL/apache-maven-3.2.5-bin.tar.gz
	tar -xzf apache-maven-3.2.5-bin.tar.gz
fi

BOOST_DIR=$DEPENDENCIES/boost_1_57_0
if [ ! -d "$BOOST_DIR" ]; then
	cd $DEPENDENCIES
	wget $DEPENDENCIES_URL/boost_1_57_0.tar.bz2
	tar xfj boost_1_57_0.tar.bz2
fi

YAMLCPP_DIR=$DEPENDENCIES/yaml-cpp-0.5.1
if [ ! -d "$YAMLCPP_DIR" ]; then
	cd $DEPENDENCIES
	wget $DEPENDENCIES_URL/yaml-cpp-0.5.1.tar.gz
	tar xfz yaml-cpp-0.5.1.tar.gz
	cd $YAMLCPP_DIR
	mkdir build
	cd build
	BOOST_ROOT=$BOOST_DIR $CMAKE_DIR/bin/cmake -DCMAKE_INSTALL_PREFIX=$YAMLCPP_DIR/target -DYAML_CPP_BUILD_CONTRIB=OFF ..
	make install
fi

if [ -z "$AGENT_VERSION" ]; then
	AGENT_VERSION="0.1.1-dev"
fi

if [ -z "$SYSDIG_MINIMUM_VERSION" ]; then
	SYSDIG_MINIMUM_VERSION="0.1.1-dev"
fi

AGENT_BUILD_DIR=$WORKDIR/agent/build
mkdir -p $AGENT_BUILD_DIR/debug
mkdir -p $AGENT_BUILD_DIR/release

cd $AGENT_BUILD_DIR/debug
$CMAKE_DIR/bin/cmake -DCMAKE_BUILD_TYPE=Debug -DDRAIOS_DEPENDENCIES_DIR=$DEPENDENCIES -DJAVA_HOME=$JAVA_DIR -DAGENT_VERSION=$AGENT_VERSION -DSYSDIG_MINIMUM_VERSION=$SYSDIG_MINIMUM_VERSION $AGENT_SOURCEDIR
cd $AGENT_BUILD_DIR/release
$CMAKE_DIR/bin/cmake -DCMAKE_BUILD_TYPE=Release -DDRAIOS_DEPENDENCIES_DIR=$DEPENDENCIES -DJAVA_HOME=$JAVA_DIR -DAGENT_VERSION=$AGENT_VERSION -DSYSDIG_MINIMUM_VERSION=$SYSDIG_MINIMUM_VERSION $AGENT_SOURCEDIR
