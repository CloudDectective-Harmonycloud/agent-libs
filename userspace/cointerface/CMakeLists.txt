set(GOPATH "${CMAKE_CURRENT_SOURCE_DIR}")

add_custom_target(cointerface ALL DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/cointerface)
add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/cointerface
        COMMAND env GOPATH=${GOPATH} go get cointerface
        COMMAND env GOPATH=${GOPATH} go fmt cointerface
        COMMAND env GOPATH=${GOPATH} go build -o "${CMAKE_CURRENT_BINARY_DIR}/cointerface" cointerface
        WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}
	DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/src/cointerface/cointerface.go
                ${CMAKE_CURRENT_SOURCE_DIR}/src/cointerface/server.go
                ${CMAKE_CURRENT_SOURCE_DIR}/src/sdc_internal/sdc_internal.pb.go
                ${CMAKE_CURRENT_SOURCE_DIR}/src/draiosproto/draios.pb.go)

add_custom_target(coclient ALL DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/coclient)
add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/coclient
        COMMAND env GOPATH=${GOPATH} go get coclient
        COMMAND env GOPATH=${GOPATH} go fmt coclient
        COMMAND env GOPATH=${GOPATH} go build -o "${CMAKE_CURRENT_BINARY_DIR}/coclient" coclient
        WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}
	DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/src/coclient/coclient.go
                ${CMAKE_CURRENT_SOURCE_DIR}/src/sdc_internal/sdc_internal.pb.go
                ${CMAKE_CURRENT_SOURCE_DIR}/src/draiosproto/draios.pb.go
		cointerface)

# This target runs protoc to create the autogenerated code
# src/cointerface/coproto/coproto.pb.go. It is excluded from the "all"
# target, so if you change the .proto file, you should run this target
# manually.

add_custom_target(go_get_proto
	COMMENT "Running go get -u github.com/gogo/protobuf/proto"
	COMMAND env GOPATH=${GOPATH} go get -u github.com/gogo/protobuf/proto)

add_custom_target(go_get_protoc-gen-gofast
	COMMENT "Running go get -u github.com/gogo/protobuf/protoc-gen-gofast"
	COMMAND env GOPATH=${GOPATH} go get -u github.com/gogo/protobuf/protoc-gen-gofast)

set(PROTOC_CMDLINE env PATH=${CMAKE_CURRENT_SOURCE_DIR}/bin:$$PATH
                   LD_LIBRARY_PATH=${DRAIOS_DEPENDENCIES_DIR}/protobuf-2.5.0/src/.libs
                   ${DRAIOS_DEPENDENCIES_DIR}/protobuf-2.5.0/src/.libs/protoc
                   -I ${PROJECT_SOURCE_DIR}/userspace/libsanalyzer)

add_custom_target(sdc_internal_proto
	DEPENDS go_get_proto go_get_protoc-gen-gofast
	COMMENT Building go sources from .proto files
	COMMAND ${PROTOC_CMDLINE}
	        --gofast_out=plugins=grpc,Mdraios.proto=draiosproto:./sdc_internal
		${PROJECT_SOURCE_DIR}/userspace/libsanalyzer/sdc_internal.proto
	COMMAND ${PROTOC_CMDLINE}
	        --gofast_out=plugins=grpc:./draiosproto
                ${PROJECT_SOURCE_DIR}/userspace/libsanalyzer/draios.proto
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/src)

# Note that we don't package the client. That's only for testing
# purposes.
install(DIRECTORY
	DESTINATION /opt/draios/run
	COMPONENT agent)

install(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/cointerface
	DESTINATION ${DRAIOS_BIN_PREFIX}/bin
	COMPONENT agent)


