syntax = "proto3";
package tap;

option optimize_for = SPEED;
option java_package = "com.sysdig.audit.common.protobuf";
option java_outer_classname = "ProcessAuditProtobuf";

message InOut32Counter {
    uint32 total = 1;
    uint32 in = 2;
    uint32 out = 3;
}

message InOut64Counter {
    uint64 total = 1;
    uint64 in = 2;
    uint64 out = 3;
}

message AuditLog {
    string hostName = 1;
    string hostMac = 2;
    uint64 timestamp = 3;
    repeated NewProcess newProcessEvents = 4;
    repeated ProcessExit processExitEvents = 5;
    repeated Connection connectionEvents = 6;
    repeated EnvironmentVariables environmentVariables = 7;
    ConnectionAudit connectionAudit = 8;
}

message NewProcess {
    uint32 pid = 1;
    string name = 2;
    repeated string commandLine = 3;
    bytes envVariablesHash = 4;
    uint32 userId = 5;
    string userName = 6;
    string containerId = 7;
    uint64 timestamp = 8;
    uint32 parentPid = 9;

    // Used to provide extra context to the event
    // adding a list of predefined labels
    map<string,string> event_labels = 10;

    NewProcess parent = 11;
}

message ProcessExit {
    uint32 pid = 1;
    uint64 timestamp = 2;
}

// valid state transitions:
// (nonexistent) -> PENDING, ESTABLISHED, FAILED
// PENDING -> ESTABLISHED, FAILED, CLOSED
// ESTABLISHED -> FAILED, CLOSED
// FAILED -> CLOSED
// (we skip ->PENDING events until explicitly requested)
enum ConnectionStatus {
    CLOSED = 0;
    PENDING = 1;
    ESTABLISHED = 2;
    FAILED = 3;
}

message Connection {
    fixed32 clientIpv4 = 1;
    uint32 clientPort = 2;
    uint32 clientPid = 3;
    fixed32 serverIpv4 = 4;
    uint32 serverPort = 5;
    uint32 serverPid = 6;
    ConnectionStatus status = 7;
    uint32 errorCode = 8;
    uint64 timestamp = 9;
    InOut32Counter requestCounts = 10;
    InOut64Counter byteCounts = 11;
    uint32 errorCount = 12;
}

message EnvironmentVariables {
    bytes hash = 1;
    repeated string variables = 2; // list of "NAME=value" strings
}

message ConnectionAudit {
    uint32 connectionCountTotal = 1;
    uint32 connectionCountIn = 2;
    uint32 connectionCountOut = 3;
    repeated Connection connections = 4;
}
