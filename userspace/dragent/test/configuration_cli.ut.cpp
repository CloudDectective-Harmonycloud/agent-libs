#include <gtest.h>
#include <common_logger.h>
#include <configuration_cli.h>

COMMON_LOGGER();

TEST(configuration_cli_test, remove_sensitive_configuration)
{

std::string json = 
R"(

metric:
  limit: 10000
customerid: 35da3ab0-0a8d-4673-b268-a60ced78a488
collector: collector-staging2.sysdigcloud.com

ssl_verify_certificate: false

command_line:
  enabled: true

#customerid: 20539c15-385e-4022-a0a1-0ed5248e36b2
#collector: collector-staging3.sysdigcloud.com

app_checks_enabled: false

#customerid: 8c3a3eef-5f95-4937-bc72-f2bb9a48556a
#collector: 10.103.14.6
#ssl: false

feature_flag_rest_server: true

watchdog:
  sinsp_worker_timeout_s: 300
  max_memory_usage_mb: 2048
  connection_manager_unacked_timeout_s: 4

log:
  console_priority: info

container_size_request:
#  interval_s: 10
#  first_request_delay_s: 5
  enabled: true

k8s_cluster_name: bryan

#jmx:
#  sampling: 7
#new_k8s: false

#metricsfile:
#  location: metrics
#  json: true

#security:
#  enabled: false

#dragent_cpu_profile_enabled: true
#cointerface_cpu_profile_enabled: true
#cointerface_mem_profile_enabled: true

#secure_audit_streams:
#  enabled: false

prometheus:
  enabled: true

statsd:
  enabled: true
  use_forwarder: false
#  limit: 3000

10s_flush_enable: true

statsite_check_format: true
container_memory_as_working_set: false

app_checks:
  - name: ceph
    interval: 30
    pattern:
      comm: ceph-mon
  - name: redis
    check_module: redisdb
    pattern: 
      comm: redis-server
    conf:
      host: 127.0.0.1
      port: "{port}"
  - name: mongodb
    check_module: mongo
    pattern: 
      comm: mongod
    conf:
      server: "mongodb://localhost:{port}/admin"
  - name: rabbitmq
    pattern:
      port: 15672
    conf:
      rabbitmq_api_url: "http://localhost:15672/api/"
      rabbitmq_user: guest
      rabbitmq_pass: guest
  - name: memcached
    check_module: mcache
    pattern:
      comm: memcached
    conf:
      url: localhost
      port: "{port}"
  - name: gearmand
    pattern:
      comm: gearmand
    conf:
      server: localhost
      port: "{port}"
  - name: lighttpd
    pattern:
      comm: lighttpd
    conf:
      lighttpd_status_url: "http://localhost:{port}/server-status?auto"
    log_errors: false
  - name: haproxy
    pattern:
      comm: haproxy
      port: 1936
    conf:
      username: stats
      password: stats
      url: http://localhost:1936/
      collect_aggregates_only: True
    log_errors: false
  - name: elasticsearch
    check_module: elastic
    pattern:
      port: 9200
      comm: java
    conf:
      url: http://localhost:9200
  - name: jenkins
    pattern:
      comm: java
      port: 50000
    conf:
      name: default
      jenkins_home: /var/lib/jenkins
  - name: nginx 
    check_module: nginx
    pattern:
      exe: "nginx: worker process" # nginx overwrites argv[0] that is parsed as exe on sysdig
    conf:
      nginx_status_url: "http://localhost:{port}/nginx_status/"
    log_errors: false
  - name: apache
    check_module: apache
    pattern: 
      comm: apache2
    conf:
      apache_status_url: "http://localhost:{port}/server-status?auto"
    log_errors: false
  - name: consul
    pattern:
      comm: consul
    conf:
      url: "http://localhost:8500"
      catalog_checks: yes
  - name: etcd
    pattern:
      comm: etcd
    conf:
      url: "http://localhost:2379"
    log_errors: false
  - name: couchdb
    check_module: couch
    pattern:
      comm: beam.smp
      arg: couch
      port: 5984
    conf:
      server: http://localhost:5984
  - name: couchbase
    pattern:
      comm: beam.smp
      arg: couchbase
      port: 8091
    conf:
      server: http://localhost:8091
  - name: fluentd
    pattern:
      comm: fluentd
    conf:
      monitor_agent_url: http://localhost:24220/api/plugins.json
  - name: kyototycoon
    pattern:
      comm: ktserver
    conf:
      report_url: "http://localhost:{port}/rpc/report"
  # In the urls for mesos-master and mesos-slave/agent,
  # {mesos_url} will be replaced with either the hostname of the
  # autodetected mesos master/slave/agent if autodetection is enabled,
  # or an explicit value from mesos_state_uri otherwise.
  #
  # In the urls for marathon, {marathon_url} will be replaced with the
  # hostname of the first configured/discovered marathon framework.
  #
  # For all mesos and marathon apps, {auth_token} will either
  # be blank or an autogenerated token obtained via the
  # /acs/api/v1/auth/login endpoint.
  - name: mesos-master
    check_module: mesos_master
    interval: 30
    pattern: 
      comm: mesos-master
    conf:
      url: "{mesos_url}:{port}"
      auth_token: "{auth_token}"
      mesos_creds: "{mesos_creds}"
  - name: mesos-slave
    check_module: mesos_slave
    pattern: 
      comm: mesos-slave
    interval: 30
    conf:
      url: "{mesos_url}:{port}"
      auth_token: "{auth_token}"
      mesos_creds: "{mesos_creds}"
      # Name of individual tasks to monitor, if needed
      # tasks:
        # - mongo
        # - cassandra
  - name: mesos-agent
    check_module: mesos_slave
    pattern:
      comm: mesos-agent
    interval: 30
    conf:
      url: "{mesos_url}:{port}"
      auth_token: "{auth_token}"
      mesos_creds: "{mesos_creds}"
      # Name of individual tasks to monitor, if needed
      # tasks:
        # - mongo
        # - cassandra
  - name: marathon
    check_module: marathon
    interval: 30
    pattern: 
      arg: mesosphere.marathon.Main
    conf:
      url: "{marathon_url}"
      auth_token: "{auth_token}"
      marathon_creds: "{marathon_creds}"
  - name: marathon-dcos
    check_module: marathon
    interval: 30
    pattern:
      arg: marathon.jar
    conf:
      url: "{marathon_url}"
      auth_token: "{auth_token}"
      marathon_creds: "{marathon_creds}"
  - name: postgres
    pattern:
      comm: postgres
      port: 5432
    conf:
      unix_sock: "/var/run/postgresql"
      username: postgres
  - name: postfix
    interval: 15
    pattern:
      comm: postfix
    conf:
      directory: /var/spool/postfix
      queues:
        - incoming
        - active
        - deferred
  - name: riak
    pattern:
      comm: beam.smp
      port: 8098
    conf:
      url: http://127.0.0.1:8098/stats
  - name: php-fpm
    check_module: php_fpm
    retry: false
    pattern:
      exe: "php-fpm: master process"
  - name: varnish
    interval: 15
    pattern:
      comm: varnishd
    conf:
      varnishstat: /usr/bin/varnishstat
  - name: voltdb
    pattern:
      comm: java
      arg: org.voltdb.VoltDB
    conf:
      port: 21212


)";



	std::string expected = 
R"(10s_flush_enable: true
app_checks:
  - interval: 30
    name: ceph
    pattern:
      comm: ceph-mon
  - check_module: redisdb
    conf:
      host: "********"
      port: "********"
    name: redis
    pattern:
      comm: redis-server
  - check_module: mongo
    conf:
      server: "********"
    name: mongodb
    pattern:
      comm: mongod
  - conf:
      rabbitmq_api_url: "********"
      rabbitmq_pass: "********"
      rabbitmq_user: "********"
    name: rabbitmq
    pattern:
      port: 15672
  - check_module: mcache
    conf:
      port: "********"
      url: "********"
    name: memcached
    pattern:
      comm: memcached
  - conf:
      port: "********"
      server: "********"
    name: gearmand
    pattern:
      comm: gearmand
  - conf:
      lighttpd_status_url: "********"
    log_errors: false
    name: lighttpd
    pattern:
      comm: lighttpd
  - conf:
      collect_aggregates_only: "********"
      password: "********"
      url: "********"
      username: "********"
    log_errors: false
    name: haproxy
    pattern:
      comm: haproxy
      port: 1936
  - check_module: elastic
    conf:
      url: "********"
    name: elasticsearch
    pattern:
      comm: java
      port: 9200
  - conf:
      jenkins_home: "********"
      name: "********"
    name: jenkins
    pattern:
      comm: java
      port: 50000
  - check_module: nginx
    conf:
      nginx_status_url: "********"
    log_errors: false
    name: nginx
    pattern:
      exe: !<!> "nginx: worker process"
  - check_module: apache
    conf:
      apache_status_url: "********"
    log_errors: false
    name: apache
    pattern:
      comm: apache2
  - conf:
      catalog_checks: "********"
      url: "********"
    name: consul
    pattern:
      comm: consul
  - conf:
      url: "********"
    log_errors: false
    name: etcd
    pattern:
      comm: etcd
  - check_module: couch
    conf:
      server: "********"
    name: couchdb
    pattern:
      arg: couch
      comm: beam.smp
      port: 5984
  - conf:
      server: "********"
    name: couchbase
    pattern:
      arg: couchbase
      comm: beam.smp
      port: 8091
  - conf:
      monitor_agent_url: "********"
    name: fluentd
    pattern:
      comm: fluentd
  - conf:
      report_url: "********"
    name: kyototycoon
    pattern:
      comm: ktserver
  - check_module: mesos_master
    conf:
      auth_token: "********"
      mesos_creds: "********"
      url: "********"
    interval: 30
    name: mesos-master
    pattern:
      comm: mesos-master
  - check_module: mesos_slave
    conf:
      auth_token: "********"
      mesos_creds: "********"
      url: "********"
    interval: 30
    name: mesos-slave
    pattern:
      comm: mesos-slave
  - check_module: mesos_slave
    conf:
      auth_token: "********"
      mesos_creds: "********"
      url: "********"
    interval: 30
    name: mesos-agent
    pattern:
      comm: mesos-agent
  - check_module: marathon
    conf:
      auth_token: "********"
      marathon_creds: "********"
      url: "********"
    interval: 30
    name: marathon
    pattern:
      arg: mesosphere.marathon.Main
  - check_module: marathon
    conf:
      auth_token: "********"
      marathon_creds: "********"
      url: "********"
    interval: 30
    name: marathon-dcos
    pattern:
      arg: marathon.jar
  - conf:
      unix_sock: "********"
      username: "********"
    name: postgres
    pattern:
      comm: postgres
      port: 5432
  - conf:
      directory: "********"
      queues:
        - "********"
        - "********"
        - "********"
    interval: 15
    name: postfix
    pattern:
      comm: postfix
  - conf:
      url: "********"
    name: riak
    pattern:
      comm: beam.smp
      port: 8098
  - check_module: php_fpm
    name: php-fpm
    pattern:
      exe: !<!> "php-fpm: master process"
    retry: false
  - conf:
      varnishstat: "********"
    interval: 15
    name: varnish
    pattern:
      comm: varnishd
  - conf:
      port: "********"
    name: voltdb
    pattern:
      arg: org.voltdb.VoltDB
      comm: java
app_checks_enabled: false
collector: collector-staging2.sysdigcloud.com
command_line:
  enabled: true
container_memory_as_working_set: false
container_size_request:
  enabled: true
customerid: "********"
feature_flag_rest_server: true
k8s_cluster_name: bryan
log:
  console_priority: info
metric:
  limit: 10000
prometheus:
  enabled: true
ssl_verify_certificate: false
statsd:
  enabled: true
  use_forwarder: false
statsite_check_format: true
watchdog:
  connection_manager_unacked_timeout_s: 4
  max_memory_usage_mb: 2048
  sinsp_worker_timeout_s: 300)";


	auto result = configuration_cli::remove_sensitive_configuration(json);
	LOG_INFO(result);
	ASSERT_EQ(expected, result);	

}
