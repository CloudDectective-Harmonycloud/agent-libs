policy_list {
  id: 1
  name: "CIS benchmarks"
  type: POLICY_FALCO
  falco_details {
    rule_filter {
      tags: "cis"
    }
  }
  # Empty list of actions. Means do nothing and prevent other policies from doing anything
  enabled: 1
}
policy_list {
  id: 2
  name: "Suspicious DB activity"
  type: POLICY_FALCO
  falco_details {
    rule_filter {
      name: "DB program.*"
    }
  }
  actions {
    type: 2
    pause {
      msg: "Pausing DB container due to falco rule"
    }
  }
  enabled: 1
}
policy_list {
  id: 3
  name: "Suspicious filesystem/software mgmt activity"
  type: POLICY_FALCO
  falco_details {
    rule_filter {
      tags: "filesystem"
      tags: "software_mgmt"
    }
  }
  actions {
    type: 1
    stop {
      msg: "Stopping container due to falco rule"
    }
  }
  enabled: 1
}
policy_list {
  id: 4
  name: "Suspicious process/user behavior"
  type: POLICY_FALCO
  falco_details {
    rule_filter {
      tags: "process"
      tags: "user"
    }
  }
  actions {
    type: 3
    capture {
      before_event_ns: 1000000000
      after_event_ns: 5000000000
      filter: ""
    }
  }
  enabled: 1
}
policy_list {
  id: 5
  name: "Suspicious network behavior"
  type: POLICY_FALCO
  falco_details {
    rule_filter {
      tags: "network"
    }
  }
  actions {
    type: 1
    pause {
      msg: "Pausing container due to falco rule"
    }
  }
  enabled: 1
}
policy_list {
  id: 6
  name: "Unexpected spawned shells"
  type: POLICY_FALCO
  falco_details {
    rule_filter {
      tags: "shell"
    }
  }
  actions {
    type: 3
    capture {
      before_event_ns: 1000000000
      after_event_ns: 30000000000
      filter: "proc.pname in (sh, bash, csh)"
    }
  }
  enabled: 1
}
falco_rules {
  contents: "#############\n# Definitions\n#############\n\n# File actions\n\n\n# Currently disabled as read/write are ignored syscalls. The nearly\n# similar open_write/open_read check for files being opened for\n# reading/writing.\n# - macro: write\n#   condition: (syscall.type=write and fd.type in (file, directory))\n# - macro: read\n#   condition: (syscall.type=read and evt.dir=> and fd.type in (file, directory))\n\n- macro: open_write\n  condition: (evt.type=open or evt.type=openat) and evt.is_open_write=true and fd.typechar='f'\n\n- macro: open_read\n  condition: (evt.type=open or evt.type=openat) and evt.is_open_read=true and fd.typechar='f'\n\n- macro: rename\n  condition: evt.type = rename\n- macro: mkdir\n  condition: evt.type = mkdir\n- macro: remove\n  condition: evt.type in (rmdir, unlink, unlinkat)\n\n- macro: modify\n  condition: rename or remove\n\n- macro: spawned_process\n  condition: evt.type = execve and evt.dir=<\n\n# File categories\n- macro: terminal_file_fd\n  condition: fd.name=/dev/ptmx or fd.name startswith /dev/pts\n\n- macro: bin_dir\n  condition: fd.directory in (/bin, /sbin, /usr/bin, /usr/sbin)\n\n- macro: bin_dir_mkdir\n  condition: evt.arg[0] startswith /bin/ or evt.arg[0] startswith /sbin/ or evt.arg[0] startswith /usr/bin/ or evt.arg[0] startswith /usr/sbin/\n- macro: bin_dir_rename\n  condition: evt.arg[1] startswith /bin/ or evt.arg[1] startswith /sbin/ or evt.arg[1] startswith /usr/bin/ or evt.arg[1] startswith /usr/sbin/\n\n- macro: etc_dir\n  condition: fd.name startswith /etc\n\n- macro: ubuntu_so_dirs\n  condition: fd.name startswith /lib/x86_64-linux-gnu or fd.name startswith /usr/lib/x86_64-linux-gnu or fd.name startswith /usr/lib/sudo\n- macro: centos_so_dirs\n  condition: fd.name startswith /lib64 or fd.name startswith /usr/lib64 or fd.name startswith /usr/libexec\n- macro: linux_so_dirs\n  condition: ubuntu_so_dirs or centos_so_dirs or fd.name=/etc/ld.so.cache\n\n- list: shell_binaries\n  items: [bash, csh, ksh, sh, tcsh, zsh, dash]\n\n- macro: shell_procs\n  condition: proc.name in (shell_binaries)\n\n- list: coreutils_binaries\n  items: [\n    truncate, sha1sum, numfmt, fmt, fold, uniq, cut, who,\n    groups, csplit, sort, expand, printf, printenv, unlink, tee, chcon, stat,\n    basename, split, nice, \"yes\", whoami, sha224sum, hostid, users, stdbuf,\n    base64, unexpand, cksum, od, paste, nproc, pathchk, sha256sum, wc, test,\n    comm, arch, du, factor, sha512sum, md5sum, tr, runcon, env, dirname,\n    tsort, join, shuf, install, logname, pinky, nohup, expr, pr, tty, timeout,\n    tail, \"[\", seq, sha384sum, nl, head, id, mkfifo, sum, dircolors, ptx, shred,\n    tac, link, chroot, vdir, chown, touch, ls, dd, uname, \"true\", pwd, date,\n    chgrp, chmod, mktemp, cat, mknod, sync, ln, \"false\", rm, mv, cp, echo,\n    readlink, sleep, stty, mkdir, df, dir, rmdir, touch\n    ]\n\n# dpkg -L login | grep bin | xargs ls -ld | grep -v '^d' | awk '{print $9}' | xargs -L 1 basename | tr \"\\n\" \",\"\n- list: login_binaries\n  items: [login, systemd, '\"(systemd)\"', systemd-logind, su, nologin, faillog, lastlog, newgrp, sg]\n\n# dpkg -L passwd | grep bin | xargs ls -ld | grep -v '^d' | awk '{print $9}' | xargs -L 1 basename | tr \"\\n\" \",\"\n- list: passwd_binaries\n  items: [\n    shadowconfig, grpck, pwunconv, grpconv, pwck,\n    groupmod, vipw, pwconv, useradd, newusers, cppw, chpasswd, usermod,\n    groupadd, groupdel, grpunconv, chgpasswd, userdel, chage, chsh,\n    gpasswd, chfn, expiry, passwd, vigr, cpgr\n    ]\n\n# repoquery -l shadow-utils | grep bin | xargs ls -ld | grep -v '^d' | awk '{print $9}' | xargs -L 1 basename | tr \"\\n\" \",\"\n- list: shadowutils_binaries\n  items: [\n    chage, gpasswd, lastlog, newgrp, sg, adduser, deluser, chpasswd,\n    groupadd, groupdel, addgroup, delgroup, groupmems, groupmod, grpck, grpconv, grpunconv,\n    newusers, pwck, pwconv, pwunconv, useradd, userdel, usermod, vigr, vipw, unix_chkpwd\n    ]\n\n- list: sysdigcloud_binaries\n  items: [setup-backend, dragent, sdchecks]\n\n- list: docker_binaries\n  items: [docker, dockerd, exe, docker-compose]\n\n- list: k8s_binaries\n  items: [hyperkube, skydns, kube2sky, exechealthz]\n\n- list: lxd_binaries\n  items: [lxd, lxcfs]\n\n- list: http_server_binaries\n  items: [nginx, httpd, httpd-foregroun, lighttpd]\n\n- list: db_server_binaries\n  items: [mysqld]\n\n- list: gitlab_binaries\n  items: [gitlab-shell, git]\n\n- macro: server_procs\n  condition: proc.name in (http_server_binaries, db_server_binaries, docker_binaries, sshd)\n\n# The truncated dpkg-preconfigu is intentional, process names are\n# truncated at the sysdig level.\n- list: package_mgmt_binaries\n  items: [\n    dpkg, dpkg-preconfigu, dnf, rpm, rpmkey, yum, frontend,\n    apt, apt-get, aptitude, add-apt-reposit, apt-auto-remova, apt-key,\n    preinst, update-alternat, unattended-upgr\n    ]\n\n- macro: package_mgmt_procs\n  condition: proc.name in (package_mgmt_binaries)\n\n- list: ssl_mgmt_binaries\n  items: [ca-certificates]\n\n- list: dhcp_binaries\n  items: [dhclient, dhclient-script]\n\n# A canonical set of processes that run other programs with different\n# privileges or as a different user.\n- list: userexec_binaries\n  items: [sudo, su]\n\n- list: user_mgmt_binaries\n  items: [login_binaries, passwd_binaries, shadowutils_binaries]\n\n- list: dev_creation_binaries\n  items: [blkid]\n\n- list: aide_wrapper_binaries\n  items: [aide.wrapper, update-aide.con]\n\n- list: hids_binaries\n  items: [aide]\n\n- list: nids_binaries\n  items: [bro, broctl]\n\n- list: monitoring_binaries\n  items: [icinga2, nrpe, npcd, check_sar_perf.]\n\n- macro: system_procs\n  condition: proc.name in (coreutils_binaries, user_mgmt_binaries)\n\n- list: mail_binaries\n  items: [sendmail, sendmail-msp, postfix, procmail, exim4, pickup, showq]\n\n- macro: sensitive_files\n  condition: fd.name startswith /etc and (fd.name in (/etc/shadow, /etc/sudoers, /etc/pam.conf) or fd.directory in (/etc/sudoers.d, /etc/pam.d))\n\n# Indicates that the process is new. Currently detected using time\n# since process was started, using a threshold of 5 seconds.\n- macro: proc_is_new\n  condition: proc.duration <= 5000000000\n\n# Network\n- macro: inbound\n  condition: ((evt.type=listen and evt.dir=>) or (evt.type=accept and evt.dir=<))\n\n# Currently sendto is an ignored syscall, otherwise this could also check for (evt.type=sendto and evt.dir=>)\n- macro: outbound\n  condition: evt.type=connect and evt.dir=< and (fd.typechar=4 or fd.typechar=6)\n\n- macro: ssh_port\n  condition: fd.lport=22\n\n# Ssh\n- macro: ssh_error_message\n  condition: (evt.arg.data contains \"Invalid user\" or evt.arg.data contains \"preauth\" or evt.arg.data contains \"Failed password\")\n\n# System\n- macro: modules\n  condition: evt.type in (delete_module, init_module)\n\n# Use this to test whether the event occurred within a container.\n\n# When displaying container information in the output field, use\n# %container.info, without any leading term (file=%fd.name\n# %container.info user=%user.name, and not file=%fd.name\n# container=%container.info user=%user.name). The output will change\n# based on the context and whether or not -pk/-pm/-pc was specified on\n# the command line.\n- macro: container\n  condition: container.id != host\n- macro: interactive\n  condition: ((proc.aname=sshd and proc.name != sshd) or proc.name=systemd-logind or proc.name=login)\n- macro: syslog\n  condition: fd.name in (/dev/log, /run/systemd/journal/syslog)\n- list: cron_binaries\n  items: [cron, crond]\n\n# System users that should never log into a system. Consider adding your own\n# service users (e.g. 'apache' or 'mysqld') here.\n- macro: system_users\n  condition: user.name in (bin, daemon, games, lp, mail, nobody, sshd, sync, uucp, www-data)\n\n# SPECIAL NOTE: This macro eliminates false positives that result from\n# running python scripts as a part of ansible. However, the condition\n# that the command line contains \"ansible\" is very\n# permissive. Ideally, you should change this macro to explicitly\n# scope the python scripts to a specific directory (namely, your\n# configured remote_tmp directory).\n- macro: parent_ansible_running_python\n  condition: (proc.pname in (python, pypy) and proc.pcmdline contains ansible)\n\n- macro: ansible_running_python\n  condition: (proc.name in (python, pypy) and proc.cmdline contains ansible)\n\n- macro: python_running_denyhosts\n  condition: (proc.name=python and (proc.cmdline contains /usr/sbin/denyhosts or proc.cmdline contains /usr/local/bin/denyhosts.py))\n\n- macro: parent_python_running_denyhosts\n  condition: (proc.pname=python and (proc.pcmdline contains /usr/sbin/denyhosts or proc.pcmdline contains /usr/local/bin/denyhosts.py))\n\n- macro: parent_bro_running_python\n  condition: (proc.pname=python and proc.cmdline contains /usr/share/broctl)\n\n# As a part of kernel upgrades, dpkg will spawn a perl script with the\n# name linux-image-N.N. This macro matches that.\n- macro: parent_linux_image_upgrade_script\n  condition: proc.pname startswith linux-image-\n\n###############\n# General Rules\n###############\n\n- rule: Write below binary dir\n  desc: an attempt to write to any file below a set of binary directories\n  condition: bin_dir and evt.dir = < and open_write and not package_mgmt_procs\n  output: \"File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)\"\n  priority: WARNING\n  tags: [filesystem]\n\n- macro: write_etc_common\n  condition: >\n    etc_dir and evt.dir = < and open_write\n    and not proc.name in (passwd_binaries, shadowutils_binaries, sysdigcloud_binaries,\n                          package_mgmt_binaries, ssl_mgmt_binaries, dhcp_binaries,\n                          ldconfig.real, ldconfig, confd, gpg, insserv,\n                          apparmor_parser, update-mime, tzdata.config, tzdata.postinst,\n                          systemd-machine, debconf-show, rollerd, bind9.postinst, sv)\n    and not proc.pname in (sysdigcloud_binaries)\n    and not fd.directory in (/etc/cassandra, /etc/ssl/certs/java)\n    and not ansible_running_python\n    and not python_running_denyhosts\n\n- rule: Write below etc\n  desc: an attempt to write to any file below /etc, not in a pipe installer session\n  condition: write_etc_common and not proc.sname=fbash\n  output: \"File below /etc opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)\"\n  priority: WARNING\n  tags: [filesystem]\n\n# Within a fbash session, the severity is lowered to INFO\n- rule: Write below etc in installer\n  desc: an attempt to write to any file below /etc, in a pipe installer session\n  condition: write_etc_common and proc.sname=fbash\n  output: \"File below /etc opened for writing (user=%user.name command=%proc.cmdline file=%fd.name) within pipe installer session\"\n  priority: INFO\n  tags: [filesystem]\n\n- macro: cmp_cp_by_passwd\n  condition: proc.name in (cmp, cp) and proc.pname=passwd\n\n- rule: Read sensitive file trusted after startup\n  desc: an attempt to read any sensitive file (e.g. files containing user/password/authentication information) by a trusted program after startup. Trusted programs might read these files at startup to load initial state, but not afterwards.\n  condition: sensitive_files and open_read and server_procs and not proc_is_new and proc.name!=\"sshd\"\n  output: \"Sensitive file opened for reading by trusted program after startup (user=%user.name command=%proc.cmdline file=%fd.name)\"\n  priority: WARNING\n  tags: [filesystem]\n\n- list: read_sensitive_file_binaries\n  items: [iptables, ps, lsb_release, check-new-relea, dumpe2fs, accounts-daemon, sshd, vsftpd, systemd]\n\n- rule: Read sensitive file untrusted\n  desc: an attempt to read any sensitive file (e.g. files containing user/password/authentication information). Exceptions are made for known trusted programs.\n  condition: >\n    sensitive_files and open_read\n    and not proc.name in (user_mgmt_binaries, userexec_binaries, package_mgmt_binaries, cron_binaries, read_sensitive_file_binaries, shell_binaries, hids_binaries)\n    and not cmp_cp_by_passwd\n    and not ansible_running_python\n    and not proc.cmdline contains /usr/bin/mandb\n  output: \"Sensitive file opened for reading by non-trusted program (user=%user.name name=%proc.name command=%proc.cmdline file=%fd.name)\"\n  priority: WARNING\n  tags: [filesystem]\n\n# Only let rpm-related programs write to the rpm database\n- rule: Write below rpm database\n  desc: an attempt to write to the rpm database by any non-rpm related program\n  condition: fd.name startswith /var/lib/rpm and open_write and not proc.name in (dnf,rpm,rpmkey,yum) and not ansible_running_python\n  output: \"Rpm database opened for writing by a non-rpm program (command=%proc.cmdline file=%fd.name)\"\n  priority: WARNING\n  tags: [filesystem, software_mgmt]\n\n- rule: DB program spawned process\n  desc: a database-server related program spawned a new process other than itself. This shouldn\'t occur and is a follow on from some SQL injection attacks.\n  condition: proc.pname in (db_server_binaries) and spawned_process and not proc.name in (db_server_binaries)\n  output: \"Database-related program spawned process other than itself (user=%user.name program=%proc.cmdline parent=%proc.pname)\"\n  priority: WARNING\n  tags: [process, database]\n\n- rule: Modify binary dirs\n  desc: an attempt to modify any file below a set of binary directories.\n  condition: bin_dir_rename and modify and not package_mgmt_procs\n  output: \"File below known binary directory renamed/removed (user=%user.name command=%proc.cmdline operation=%evt.type file=%fd.name %evt.args)\"\n  priority: WARNING\n  tags: [filesystem]\n\n- rule: Mkdir binary dirs\n  desc: an attempt to create a directory below a set of binary directories.\n  condition: mkdir and bin_dir_mkdir and not package_mgmt_procs\n  output: \"Directory below known binary directory created (user=%user.name command=%proc.cmdline directory=%evt.arg.path)\"\n  priority: WARNING\n  tags: [filesystem]\n\n# Don't load shared objects coming from unexpected places\n# Commenting this out for now--there are lots of shared library\n# locations below /usr/lib for things like python, perl, etc. We may\n# want to just add /usr/lib to the list, but that is really\n# permissive.\n# - condition: open_read and fd.name contains .so and not (linux_so_dirs)\n#   output: \"Loaded .so from unexpected dir (%user.name %proc.name %evt.dir %evt.type %evt.args %fd.name)\"\n#   priority: WARNING\n\n# Temporarily disabling this rule as it's tripping over https://github.com/draios/sysdig/issues/598\n# - rule: Syscall returns eaccess\n#   desc: any system call that returns EACCESS. This is not always a strong indication of a problem, hence the INFO priority.\n#   condition: evt.res = EACCESS\n#   output: \"System call returned EACCESS (user=%user.name command=%proc.cmdline syscall=%evt.type args=%evt.args)\"\n#   priority: INFO\n\n- rule: Change thread namespace\n  desc: an attempt to change a program/thread\'s namespace (commonly done as a part of creating a container) by calling setns.\n  condition: >\n    evt.type = setns\n    and not proc.name in (docker_binaries, k8s_binaries, lxd_binaries, sysdigcloud_binaries, sysdig, nsenter)\n    and not proc.pname in (sysdigcloud_binaries)\n  output: \"Namespace change (setns) by unexpected program (user=%user.name command=%proc.cmdline parent=%proc.pname %container.info)\"\n  priority: WARNING\n  tags: [process]\n\n- list: known_shell_spawn_binaries\n  items: [\n    sshd, sudo, su, tmux, screen, emacs, systemd, login, flock, fbash,\n    nginx, monit, supervisord, dragent, aws, initdb, docker-compose,\n    make, configure, awk, falco, fail2ban-server, fleetctl,\n    logrotate, ansible, less, adduser, pycompile, py3compile,\n    pyclean, py3clean, pip, pip2, ansible-playboo, man-db,\n    init, pluto, mkinitramfs, unattended-upgr, watch, sysdig,\n    landscape-sysin, nessusd, PM2, syslog-summary, erl_child_setup\n    ]\n\n- rule: Run shell untrusted\n  desc: an attempt to spawn a shell by a non-shell program. Exceptions are made for trusted binaries.\n  condition: >\n    spawned_process and not container\n    and shell_procs\n    and proc.pname exists\n    and not proc.pname in (cron_binaries, shell_binaries, known_shell_spawn_binaries, docker_binaries,\n                           k8s_binaries, package_mgmt_binaries, aide_wrapper_binaries, nids_binaries,\n                           monitoring_binaries)\n    and not parent_ansible_running_python\n    and not parent_bro_running_python\n    and not parent_python_running_denyhosts\n    and not parent_linux_image_upgrade_script\n  output: \"Shell spawned by untrusted binary (user=%user.name shell=%proc.name parent=%proc.pname cmdline=%proc.cmdline pcmdline=%proc.pcmdline)\"\n  priority: WARNING\n  tags: [host, shell]\n\n- macro: trusted_containers\n  condition: (container.image startswith sysdig/agent or\n              (container.image startswith sysdig/falco and\n               not container.image startswith sysdig/falco-event-generator) or\n              container.image startswith sysdig/sysdig or\n              container.image startswith gcr.io/google_containers/hyperkube or\n              container.image startswith quay.io/coreos/flannel or\n              container.image startswith gcr.io/google_containers/kube-proxy)\n\n- rule: File Open by Privileged Container\n  desc: Any open by a privileged container. Exceptions are made for known trusted images.\n  condition: (open_read or open_write) and container and container.privileged=true and not trusted_containers\n  output: File opened for read/write by privileged container (user=%user.name command=%proc.cmdline %container.info file=%fd.name)\n  priority: WARNING\n  tags: [container, cis]\n\n- macro: sensitive_mount\n  condition: (container.mount.dest[/proc*] != \"N/A\")\n\n- rule: Sensitive Mount by Container\n  desc: Any open by a container that has a mount from a sensitive host directory (i.e. /proc). Exceptions are made for known trusted images.\n  condition: (open_read or open_write) and container and sensitive_mount and not trusted_containers\n  output: File opened for read/write by container mounting sensitive directory (user=%user.name command=%proc.cmdline %container.info file=%fd.name)\n  priority: WARNING\n  tags: [container, cis]\n\n# Anything run interactively by root\n# - condition: evt.type != switch and user.name = root and proc.name != sshd and interactive\n#  output: \"Interactive root (%user.name %proc.name %evt.dir %evt.type %evt.args %fd.name)\"\n#  priority: WARNING\n\n- rule: System user interactive\n  desc: an attempt to run interactive commands by a system (i.e. non-login) user\n  condition: spawned_process and system_users and interactive\n  output: \"System user ran an interactive command (user=%user.name command=%proc.cmdline)\"\n  priority: WARNING\n  tags: [users]\n\n- rule: Run shell in container\n  desc: a shell was spawned by a non-shell program in a container. Container entrypoints are excluded.\n  condition: >\n    spawned_process and container\n    and shell_procs\n    and proc.pname exists\n    and not proc.pname in (shell_binaries, docker_binaries, k8s_binaries, lxd_binaries, aide_wrapper_binaries, nids_binaries,\n                           monitoring_binaries, gitlab_binaries, initdb, pg_ctl, awk, falco, cron, erl_child_setup)\n    and not trusted_containers\n  output: \"Shell spawned in a container other than entrypoint (user=%user.name %container.info shell=%proc.name parent=%proc.pname cmdline=%proc.cmdline)\"\n  priority: WARNING\n  tags: [container, shell]\n\n# sockfamily ip is to exclude certain processes (like 'groups') that communicate on unix-domain sockets\n- rule: System procs network activity\n  desc: any network activity performed by system binaries that are not expected to send or receive any network traffic\n  condition: (fd.sockfamily = ip and system_procs) and (inbound or outbound)\n  output: \"Known system binary sent/received network traffic (user=%user.name command=%proc.cmdline connection=%fd.name)\"\n  priority: WARNING\n  tags: [network]\n\n# With the current restriction on system calls handled by falco\n# (e.g. excluding read/write/sendto/recvfrom/etc, this rule won't\n# trigger).\n# - rule: Ssh error in syslog\n#   desc: any ssh errors (failed logins, disconnects, ...) sent to syslog\n#   condition: syslog and ssh_error_message and evt.dir = <\n#   output: \"sshd sent error message to syslog (error=%evt.buffer)\"\n#   priority: WARNING\n\n# sshd, mail programs attempt to setuid to root even when running as non-root. Excluding here to avoid meaningless FPs\n- rule: Non sudo setuid\n  desc: an attempt to change users by calling setuid. sudo/su are excluded. user \"root\" is also excluded, as setuid calls typically involve dropping privileges.\n  condition: evt.type=setuid and evt.dir=> and not user.name=root and not proc.name in (userexec_binaries, mail_binaries, sshd, dbus-daemon-lau, ping, ping6, critical-stack-)\n  output: \"Unexpected setuid call by non-sudo, non-root program (user=%user.name parent=%proc.pname command=%proc.cmdline uid=%evt.arg.uid)\"\n  priority: WARNING\n  tags: [users]\n\n- rule: User mgmt binaries\n  desc: activity by any programs that can manage users, passwords, or permissions. sudo and su are excluded. Activity in containers is also excluded--some containers create custom users on top of a base linux distribution at startup.\n  condition: spawned_process and proc.name in (user_mgmt_binaries) and not proc.name in (su, sudo) and not container and not proc.pname in (cron_binaries, systemd, run-parts)\n  output: \"User management binary command run outside of container (user=%user.name command=%proc.cmdline parent=%proc.pname)\"\n  priority: WARNING\n  tags: [host, users]\n\n- list: allowed_dev_files\n  items: [/dev/null, /dev/stdin, /dev/stdout, /dev/stderr, /dev/random, /dev/urandom, /dev/console]\n\n# (we may need to add additional checks against false positives, see: https://bugs.launchpad.net/ubuntu/+source/rkhunter/+bug/86153)\n- rule: Create files below dev\n  desc: creating any files below /dev other than known programs that manage devices. Some rootkits hide files in /dev.\n  condition: >\n    fd.directory = /dev and\n    (evt.type = creat or (evt.type = open and evt.arg.flags contains O_CREAT))\n    and not proc.name in (dev_creation_binaries)\n    and not fd.name in (allowed_dev_files)\n    and not fd.name startswith /dev/tty\n  output: \"File created below /dev by untrusted program (user=%user.name command=%proc.cmdline file=%fd.name)\"\n  priority: WARNING\n  tags: [filesystem]\n\n# fbash is a small shell script that runs bash, and is suitable for use in curl <curl> | fbash installers.\n- rule: Installer bash starts network server\n  desc: an attempt by a program in a pipe installer session to start listening for network connections\n  condition: evt.type=listen and proc.sname=fbash\n  output: \"Unexpected listen call by a process in a fbash session (command=%proc.cmdline)\"\n  priority: WARNING\n  tags: [network]\n\n- rule: Installer bash starts session\n  desc: an attempt by a program in a pipe installer session to start a new session\n  condition: evt.type=setsid and proc.sname=fbash\n  output: \"Unexpected setsid call by a process in fbash session (command=%proc.cmdline)\"\n  priority: WARNING\n  tags: [process]\n\n- rule: Installer bash non https connection\n  desc: an attempt by a program in a pipe installer session to make an outgoing connection on a non-http(s) port\n  condition: proc.sname=fbash and outbound and not fd.sport in (80, 443, 53)\n  output: \"Outbound connection on non-http(s) port by a process in a fbash session (command=%proc.cmdline connection=%fd.name)\"\n  priority: WARNING\n  tags: [network]\n\n# It'd be nice if we could warn when processes in a fbash session try\n# to download from any nonstandard location? This is probably blocked\n# on https://github.com/draios/falco/issues/88 though.\n\n# Notice when processes try to run chkconfig/systemctl.... to install a service.\n# Note: this is not a WARNING, as you'd expect some service management\n# as a part of doing the installation.\n- rule: Installer bash manages service\n  desc: an attempt by a program in a pipe installer session to manage a system service (systemd/chkconfig)\n  condition: evt.type=execve and proc.name in (chkconfig, systemctl) and proc.sname=fbash\n  output: \"Service management program run by process in a fbash session (command=%proc.cmdline)\"\n  priority: INFO\n  tags: [software_mgmt]\n\n# Notice when processes try to run any package management binary within a fbash session.\n# Note: this is not a WARNING, as you'd expect some package management\n# as a part of doing the installation\n- rule: Installer bash runs pkgmgmt program\n  desc: an attempt by a program in a pipe installer session to run a package management binary\n  condition: evt.type=execve and package_mgmt_procs and proc.sname=fbash\n  output: \"Package management program run by process in a fbash session (command=%proc.cmdline)\"\n  priority: INFO\n  tags: [software_mgmt]\n\n###########################\n# Application-Related Rules\n###########################\n\n################################################################\n# By default all application-related rules are disabled for\n# performance reasons. Depending on the application(s) you use,\n# uncomment the corresponding rule definitions for\n# application-specific activity monitoring.\n################################################################\n\n# Elasticsearch ports\n- macro: elasticsearch_cluster_port\n  condition: fd.sport=9300\n- macro: elasticsearch_api_port\n  condition: fd.sport=9200\n- macro: elasticsearch_port\n  condition: elasticsearch_cluster_port or elasticsearch_api_port\n\n# - rule: Elasticsearch unexpected network inbound traffic\n#   desc: inbound network traffic to elasticsearch on a port other than the standard ports\n#   condition: user.name = elasticsearch and inbound and not elasticsearch_port\n#   output: \"Inbound network traffic to Elasticsearch on unexpected port (connection=%fd.name)\"\n#   priority: WARNING\n\n# - rule: Elasticsearch unexpected network outbound traffic\n#   desc: outbound network traffic from elasticsearch on a port other than the standard ports\n#   condition: user.name = elasticsearch and outbound and not elasticsearch_cluster_port\n#   output: \"Outbound network traffic from Elasticsearch on unexpected port (connection=%fd.name)\"\n#   priority: WARNING\n\n\n# ActiveMQ ports\n- macro: activemq_cluster_port\n  condition: fd.sport=61616\n- macro: activemq_web_port\n  condition: fd.sport=8161\n- macro: activemq_port\n  condition: activemq_web_port or activemq_cluster_port\n\n# - rule: Activemq unexpected network inbound traffic\n#   desc: inbound network traffic to activemq on a port other than the standard ports\n#   condition: user.name = activemq and inbound and not activemq_port\n#   output: \"Inbound network traffic to ActiveMQ on unexpected port (connection=%fd.name)\"\n#   priority: WARNING\n\n# - rule: Activemq unexpected network outbound traffic\n#   desc: outbound network traffic from activemq on a port other than the standard ports\n#   condition: user.name = activemq and outbound and not activemq_cluster_port\n#   output: \"Outbound network traffic from ActiveMQ on unexpected port (connection=%fd.name)\"\n#   priority: WARNING\n\n\n# Cassandra ports\n# https://docs.datastax.com/en/cassandra/2.0/cassandra/security/secureFireWall_r.html\n- macro: cassandra_thrift_client_port\n  condition: fd.sport=9160\n- macro: cassandra_cql_port\n  condition: fd.sport=9042\n- macro: cassandra_cluster_port\n  condition: fd.sport=7000\n- macro: cassandra_ssl_cluster_port\n  condition: fd.sport=7001\n- macro: cassandra_jmx_port\n  condition: fd.sport=7199\n- macro: cassandra_port\n  condition: cassandra_thrift_client_port or cassandra_cql_port or cassandra_cluster_port or cassandra_ssl_cluster_port or cassandra_jmx_port\n\n# - rule: Cassandra unexpected network inbound traffic\n#   desc: inbound network traffic to cassandra on a port other than the standard ports\n#   condition: user.name = cassandra and inbound and not cassandra_port\n#   output: \"Inbound network traffic to Cassandra on unexpected port (connection=%fd.name)\"\n#   priority: WARNING\n\n# - rule: Cassandra unexpected network outbound traffic\n#   desc: outbound network traffic from cassandra on a port other than the standard ports\n#   condition: user.name = cassandra and outbound and not (cassandra_ssl_cluster_port or cassandra_cluster_port)\n#   output: \"Outbound network traffic from Cassandra on unexpected port (connection=%fd.name)\"\n#   priority: WARNING\n\n# Couchdb ports\n# https://github.com/davisp/couchdb/blob/master/etc/couchdb/local.ini\n- macro: couchdb_httpd_port\n  condition: fd.sport=5984\n- macro: couchdb_httpd_ssl_port\n  condition: fd.sport=6984\n# xxx can't tell what clustering ports are used. not writing rules for this\n# yet.\n\n# Fluentd ports\n- macro: fluentd_http_port\n  condition: fd.sport=9880\n- macro: fluentd_forward_port\n  condition: fd.sport=24224\n\n# - rule: Fluentd unexpected network inbound traffic\n#   desc: inbound network traffic to fluentd on a port other than the standard ports\n#   condition: user.name = td-agent and inbound and not (fluentd_forward_port or fluentd_http_port)\n#   output: \"Inbound network traffic to Fluentd on unexpected port (connection=%fd.name)\"\n#   priority: WARNING\n\n# - rule: Tdagent unexpected network outbound traffic\n#   desc: outbound network traffic from fluentd on a port other than the standard ports\n#   condition: user.name = td-agent and outbound and not fluentd_forward_port\n#   output: \"Outbound network traffic from Fluentd on unexpected port (connection=%fd.name)\"\n#   priority: WARNING\n\n# Gearman ports\n# http://gearman.org/protocol/\n# - rule: Gearman unexpected network outbound traffic\n#   desc: outbound network traffic from gearman on a port other than the standard ports\n#   condition: user.name = gearman and outbound and outbound and not fd.sport = 4730\n#   output: \"Outbound network traffic from Gearman on unexpected port (connection=%fd.name)\"\n#   priority: WARNING\n\n# Zookeeper\n- macro: zookeeper_port\n  condition: fd.sport = 2181\n\n# Kafka ports\n# - rule: Kafka unexpected network inbound traffic\n#   desc: inbound network traffic to kafka on a port other than the standard ports\n#   condition: user.name = kafka and inbound and fd.sport != 9092\n#   output: \"Inbound network traffic to Kafka on unexpected port (connection=%fd.name)\"\n#   priority: WARNING\n\n# Memcached ports\n# - rule: Memcached unexpected network inbound traffic\n#   desc: inbound network traffic to memcached on a port other than the standard ports\n#   condition: user.name = memcached and inbound and fd.sport != 11211\n#   output: \"Inbound network traffic to Memcached on unexpected port (connection=%fd.name)\"\n#   priority: WARNING\n\n# - rule: Memcached unexpected network outbound traffic\n#   desc: any outbound network traffic from memcached. memcached never initiates outbound connections.\n#   condition: user.name = memcached and outbound\n#   output: \"Unexpected Memcached outbound connection (connection=%fd.name)\"\n#   priority: WARNING\n\n\n# MongoDB ports\n- macro: mongodb_server_port\n  condition: fd.sport = 27017\n- macro: mongodb_shardserver_port\n  condition: fd.sport = 27018\n- macro: mongodb_configserver_port\n  condition: fd.sport = 27019\n- macro: mongodb_webserver_port\n  condition: fd.sport = 28017\n\n# - rule: Mongodb unexpected network inbound traffic\n#   desc: inbound network traffic to mongodb on a port other than the standard ports\n#   condition: user.name = mongodb and inbound and not (mongodb_server_port or mongodb_shardserver_port or mongodb_configserver_port or mongodb_webserver_port)\n#   output: \"Inbound network traffic to MongoDB on unexpected port (connection=%fd.name)\"\n#   priority: WARNING\n\n# MySQL ports\n# - rule: Mysql unexpected network inbound traffic\n#   desc: inbound network traffic to mysql on a port other than the standard ports\n#   condition: user.name = mysql and inbound and fd.sport != 3306\n#   output: \"Inbound network traffic to MySQL on unexpected port (connection=%fd.name)\"\n#   priority: WARNING\n\n# - rule: HTTP server unexpected network inbound traffic\n#   desc: inbound network traffic to a http server program on a port other than the standard ports\n#   condition: proc.name in (http_server_binaries) and inbound and fd.sport != 80 and fd.sport != 443\n#   output: \"Inbound network traffic to HTTP Server on unexpected port (connection=%fd.name)\"\n#   priority: WARNING"
}
