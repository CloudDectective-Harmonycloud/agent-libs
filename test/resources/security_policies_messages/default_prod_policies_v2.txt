policy_list {
  id: 31821
  name: "Disallowed Network Activity"
  severity: 4
  rule_names: "Disallowed SSH Connection"
  rule_names: "Unexpected outbound connection destination"
  rule_names: "Unexpected inbound connection source"
  enabled: true
}
policy_list {
  id: 31822
  name: "Suspicious Filesystem Changes"
  severity: 3
  rule_names: "Set Setuid or Setgid bit"
  rule_names: "Create Symlink Over Sensitive Files"
  rule_names: "Write below monitored dir"
  rule_names: "Create files below dev"
  rule_names: "Create Hidden Files or Directories"
  rule_names: "Modify binary dirs"
  rule_names: "Delete Bash History"
  rule_names: "Write below binary dir"
  rule_names: "Modify Shell Configuration File"
  rule_names: "Write below root"
  rule_names: "Schedule Cron Jobs"
  rule_names: "Clear Log Activities"
  rule_names: "Remove Bulk Data from Disk"
  rule_names: "Mkdir binary dirs"
  rule_names: "Delete or rename shell history"
  enabled: true
}
policy_list {
  id: 31823
  name: "Notable Filesystem Changes"
  severity: 0
  rule_names: "Write below etc"
  enabled: true
}
policy_list {
  id: 31824
  name: "Suspicious Package Management Changes"
  severity: 3
  rule_names: "Write below rpm database"
  rule_names: "Update Package Repository"
  enabled: true
}
policy_list {
  id: 31825
  name: "Suspicious Filesystem Reads"
  severity: 5
  rule_names: "Search Private Keys or Passwords"
  rule_names: "Read sensitive file untrusted"
  rule_names: "Read Shell Configuration File"
  rule_names: "Read ssh information"
  rule_names: "Read sensitive file trusted after startup"
  enabled: true
}
policy_list {
  id: 31826
  name: "Unexpected Spawned Processes"
  severity: 5
  rule_names: "Run shell untrusted"
  rule_names: "System user interactive"
  rule_names: "DB program spawned process"
  enabled: true
}
policy_list {
  id: 31827
  name: "Unexpected Process Activity"
  severity: 5
  rule_names: "Non sudo setuid"
  rule_names: "Change thread namespace"
  enabled: true
}
policy_list {
  id: 31828
  name: "Inadvised Container Activity"
  severity: 4
  rule_names: "Launch Sensitive Mount Container"
  rule_names: "Launch Privileged Container"
  enabled: true
}
policy_list {
  id: 31829
  name: "Suspicious Container Activity"
  severity: 3
  rule_names: "Contact cloud metadata service from container"
  rule_names: "Packet socket created in container"
  rule_names: "Redirect STDOUT/STDIN to Network Connection in Container"
  rule_names: "Contact K8S API Server From Container"
  rule_names: "Netcat Remote Code Execution in Container"
  rule_names: "Launch Remote File Copy Tools in Container"
  rule_names: "Unexpected K8s NodePort Connection"
  rule_names: "Detect crypto miners using the Stratum protocol"
  rule_names: "Contact EC2 Instance Metadata Service From Container"
  rule_names: "The docker client is executed in a container"
  rule_names: "Launch Suspicious Network Tool in Container"
  rule_names: "Launch Package Management Process in Container"
  rule_names: "Terminal shell in container"
  enabled: true
}
policy_list {
  id: 31830
  name: "Disallowed Container Activity"
  severity: 3
  rule_names: "Launch Disallowed Container"
  enabled: true
}
policy_list {
  id: 31831
  name: "User Management Changes"
  severity: 5
  rule_names: "User mgmt binaries"
  enabled: true
}
policy_list {
  id: 31832
  name: "Suspicious Network Activity"
  severity: 4
  rule_names: "Interpreted procs outbound network activity"
  rule_names: "System procs network activity"
  rule_names: "Unexpected UDP Traffic"
  rule_names: "Network Connection outside Local Subnet"
  rule_names: "Interpreted procs inbound network activity"
  rule_names: "Outbound or Inbound Traffic not to Authorized Server Process and Port"
  rule_names: "Launch Suspicious Network Tool on Host"
  rule_names: "Program run with disallowed http proxy env"
  enabled: true
}
policy_list {
  id: 31833
  name: "Access Cryptomining Network"
  severity: 7
  rule_names: "Detect crypto miners using the Stratum protocol"
  rule_names: "Detect outbound connections to common miner pool ports"
  enabled: false
}
policy_list {
  id: 31834
  name: "All K8s Activity"
  severity: 7
  rule_names: "All K8s Audit Events"
  enabled: false
}
policy_list {
  id: 31835
  name: "All K8s User Modifications"
  severity: 6
  rule_names: "K8s Role/Clusterrole Deleted"
  rule_names: "K8s Role/Clusterrolebinding Deleted"
  rule_names: "K8s Role/Clusterrole Created"
  rule_names: "K8s Serviceaccount Deleted"
  rule_names: "K8s Serviceaccount Created"
  rule_names: "K8s Role/Clusterrolebinding Created"
  enabled: true
}
policy_list {
  id: 31836
  name: "All K8s Object Modifications"
  severity: 6
  rule_names: "K8s Deployment Deleted"
  rule_names: "K8s ConfigMap Created"
  rule_names: "K8s Namespace Deleted"
  rule_names: "K8s Secret Deleted"
  rule_names: "K8s Secret Created"
  rule_names: "K8s Namespace Created"
  rule_names: "K8s Deployment Created"
  rule_names: "K8s ConfigMap Deleted"
  rule_names: "K8s Service Created"
  rule_names: "K8s Service Deleted"
  enabled: false
}
policy_list {
  id: 31837
  name: "Suspicious K8s Activity"
  severity: 4
  rule_names: "Untrusted Node Successfully Joined the Cluster"
  rule_names: "Attach/Exec Pod"
  rule_names: "Untrusted Node Unsuccessfully Tried to Join the Cluster"
  enabled: true
}
policy_list {
  id: 31838
  name: "Inadvised K8s User Activity"
  severity: 4
  rule_names: "Anonymous Request Allowed"
  rule_names: "Attach to cluster-admin Role"
  rule_names: "Service Account Created in Kube Namespace"
  rule_names: "ClusterRole With Pod Exec Created"
  rule_names: "ClusterRole With Wildcard Created"
  rule_names: "ClusterRole With Write Privileges Created"
  enabled: true
}
policy_list {
  id: 31839
  name: "Suspicious K8s User Activity"
  severity: 3
  rule_names: "System ClusterRole Modified/Deleted"
  rule_names: "Full K8s Administrative Access"
  enabled: true
}
policy_list {
  id: 31840
  name: "Inadvised K8s Activity"
  severity: 4
  rule_names: "Ingress Object without TLS Certificate Created"
  rule_names: "Create/Modify Configmap With Private Credentials"
  rule_names: "Create Sensitive Mount Pod"
  rule_names: "Create HostNetwork Pod"
  rule_names: "Pod Created in Kube Namespace"
  rule_names: "Create NodePort Service"
  enabled: true
}
policy_list {
  id: 31841
  name: "Create Privileged Pod"
  severity: 4
  rule_names: "Create Privileged Pod"
  enabled: true
}
policy_list {
  id: 31842
  name: "Disallowed K8s Activity"
  severity: 3
  rule_names: "Create Disallowed Namespace"
  rule_names: "Create Disallowed Pod"
  rule_names: "Disallowed K8s User"
  enabled: true
}
policy_list {
  id: 31843
  name: "Payment Card Industry Data Security Standard (PCI DSS)"
  severity: 4
  rule_names: "Clear Log Activities"
  rule_names: "Modify binary dirs"
  rule_names: "Mkdir binary dirs"
  rule_names: "DB program spawned process"
  rule_names: "Change thread namespace"
  rule_names: "Launch Privileged Container"
  rule_names: "Terminal shell in container"
  enabled: false
}
policy_list {
  id: 31844
  name: "NIST 800-190 Application Container Security Guide"
  severity: 4
  rule_names: "Launch Disallowed Container"
  rule_names: "Disallowed SSH Connection"
  rule_names: "Create Symlink Over Sensitive Files"
  rule_names: "Write below monitored dir"
  rule_names: "Create files below dev"
  rule_names: "Modify binary dirs"
  rule_names: "Unexpected inbound connection source"
  rule_names: "Contact K8S API Server From Container"
  rule_names: "Launch Privileged Container"
  rule_names: "Write below binary dir"
  rule_names: "Write below etc"
  rule_names: "Write below root"
  rule_names: "Launch Sensitive Mount Container"
  rule_names: "Clear Log Activities"
  rule_names: "Unexpected UDP Traffic"
  rule_names: "Unexpected K8s NodePort Connection"
  rule_names: "Unexpected outbound connection destination"
  rule_names: "Mkdir binary dirs"
  rule_names: "Search Private Keys or Passwords"
  rule_names: "Read sensitive file untrusted"
  enabled: false
}
falco_group {
  default_files {
    tag: "0.7.3"
    files {
      filename: "falco_rules.yaml"
      variants {
        required_engine_version: 0
        content: "---\n- macro: \"open_write\"\n  condition: \"(evt.type=open or evt.type=openat) and evt.is_open_write=true and fd.typechar=\'f\'\\\n    \\ and fd.num>=0\"\n  append: false\n\n- macro: \"open_read\"\n  condition: \"(evt.type=open or evt.type=openat) and evt.is_open_read=true and fd.typechar=\'f\'\\\n    \\ and fd.num>=0\"\n  append: false\n\n- macro: \"open_directory\"\n  condition: \"(evt.type=open or evt.type=openat) and evt.is_open_read=true and fd.typechar=\'d\'\\\n    \\ and fd.num>=0\"\n  append: false\n\n- macro: \"never_true\"\n  condition: \"(evt.num=0)\"\n  append: false\n\n- macro: \"always_true\"\n  condition: \"(evt.num>=0)\"\n  append: false\n\n- macro: \"proc_name_exists\"\n  condition: \"(proc.name!=\\\"<NA>\\\")\"\n  append: false\n\n- macro: \"rename\"\n  condition: \"evt.type in (rename, renameat)\"\n  append: false\n\n- macro: \"mkdir\"\n  condition: \"evt.type in (mkdir, mkdirat)\"\n  append: false\n\n- macro: \"remove\"\n  condition: \"evt.type in (rmdir, unlink, unlinkat)\"\n  append: false\n\n- macro: \"modify\"\n  condition: \"rename or remove\"\n  append: false\n\n- macro: \"spawned_process\"\n  condition: \"evt.type = execve and evt.dir=<\"\n  append: false\n\n- macro: \"create_symlink\"\n  condition: \"evt.type in (symlink, symlinkat) and evt.dir=<\"\n  append: false\n\n- macro: \"chmod\"\n  condition: \"(evt.type in (chmod, fchmod, fchmodat) and evt.dir=<)\"\n  append: false\n\n- macro: \"bin_dir\"\n  condition: \"fd.directory in (/bin, /sbin, /usr/bin, /usr/sbin)\"\n  append: false\n\n- macro: \"bin_dir_mkdir\"\n  condition: \"(evt.arg[1] startswith /bin/ or\\n evt.arg[1] startswith /sbin/ or\\n\\\n    \\ evt.arg[1] startswith /usr/bin/ or\\n evt.arg[1] startswith /usr/sbin/)\\n\"\n  append: false\n\n- macro: \"bin_dir_rename\"\n  condition: \"evt.arg[1] startswith /bin/ or evt.arg[1] startswith /sbin/ or evt.arg[1]\\\n    \\ startswith /usr/bin/ or evt.arg[1] startswith /usr/sbin/\\n\"\n  append: false\n\n- macro: \"etc_dir\"\n  condition: \"fd.name startswith /etc/\"\n  append: false\n\n- macro: \"root_dir\"\n  condition: \"((fd.directory=/ or fd.name startswith /root) and fd.name contains \\\"\\\n    /\\\")\"\n  append: false\n\n- list: \"shell_binaries\"\n  items:\n  - \"ash\"\n  - \"bash\"\n  - \"csh\"\n  - \"ksh\"\n  - \"sh\"\n  - \"tcsh\"\n  - \"zsh\"\n  - \"dash\"\n  append: false\n\n- list: \"ssh_binaries\"\n  items:\n  - \"sshd\"\n  - \"sftp-server\"\n  - \"ssh-agent\"\n  - \"ssh\"\n  - \"scp\"\n  - \"sftp\"\n  - \"ssh-keygen\"\n  - \"ssh-keysign\"\n  - \"ssh-keyscan\"\n  - \"ssh-add\"\n  append: false\n\n- list: \"shell_mgmt_binaries\"\n  items:\n  - \"add-shell\"\n  - \"remove-shell\"\n  append: false\n\n- macro: \"shell_procs\"\n  condition: \"proc.name in (shell_binaries)\"\n  append: false\n\n- list: \"coreutils_binaries\"\n  items:\n  - \"truncate\"\n  - \"sha1sum\"\n  - \"numfmt\"\n  - \"fmt\"\n  - \"fold\"\n  - \"uniq\"\n  - \"cut\"\n  - \"who\"\n  - \"groups\"\n  - \"csplit\"\n  - \"sort\"\n  - \"expand\"\n  - \"printf\"\n  - \"printenv\"\n  - \"unlink\"\n  - \"tee\"\n  - \"chcon\"\n  - \"stat\"\n  - \"basename\"\n  - \"split\"\n  - \"nice\"\n  - \"yes\"\n  - \"whoami\"\n  - \"sha224sum\"\n  - \"hostid\"\n  - \"users\"\n  - \"stdbuf\"\n  - \"base64\"\n  - \"unexpand\"\n  - \"cksum\"\n  - \"od\"\n  - \"paste\"\n  - \"nproc\"\n  - \"pathchk\"\n  - \"sha256sum\"\n  - \"wc\"\n  - \"test\"\n  - \"comm\"\n  - \"arch\"\n  - \"du\"\n  - \"factor\"\n  - \"sha512sum\"\n  - \"md5sum\"\n  - \"tr\"\n  - \"runcon\"\n  - \"env\"\n  - \"dirname\"\n  - \"tsort\"\n  - \"join\"\n  - \"shuf\"\n  - \"install\"\n  - \"logname\"\n  - \"pinky\"\n  - \"nohup\"\n  - \"expr\"\n  - \"pr\"\n  - \"tty\"\n  - \"timeout\"\n  - \"tail\"\n  - \"[\"\n  - \"seq\"\n  - \"sha384sum\"\n  - \"nl\"\n  - \"head\"\n  - \"id\"\n  - \"mkfifo\"\n  - \"sum\"\n  - \"dircolors\"\n  - \"ptx\"\n  - \"shred\"\n  - \"tac\"\n  - \"link\"\n  - \"chroot\"\n  - \"vdir\"\n  - \"chown\"\n  - \"touch\"\n  - \"ls\"\n  - \"dd\"\n  - \"uname\"\n  - \"true\"\n  - \"pwd\"\n  - \"date\"\n  - \"chgrp\"\n  - \"chmod\"\n  - \"mktemp\"\n  - \"cat\"\n  - \"mknod\"\n  - \"sync\"\n  - \"ln\"\n  - \"false\"\n  - \"rm\"\n  - \"mv\"\n  - \"cp\"\n  - \"echo\"\n  - \"readlink\"\n  - \"sleep\"\n  - \"stty\"\n  - \"mkdir\"\n  - \"df\"\n  - \"dir\"\n  - \"rmdir\"\n  - \"touch\"\n  append: false\n\n- list: \"login_binaries\"\n  items:\n  - \"login\"\n  - \"systemd\"\n  - \"\\\"(systemd)\\\"\"\n  - \"systemd-logind\"\n  - \"su\"\n  - \"nologin\"\n  - \"faillog\"\n  - \"lastlog\"\n  - \"newgrp\"\n  - \"sg\"\n  append: false\n\n- list: \"passwd_binaries\"\n  items:\n  - \"shadowconfig\"\n  - \"grpck\"\n  - \"pwunconv\"\n  - \"grpconv\"\n  - \"pwck\"\n  - \"groupmod\"\n  - \"vipw\"\n  - \"pwconv\"\n  - \"useradd\"\n  - \"newusers\"\n  - \"cppw\"\n  - \"chpasswd\"\n  - \"usermod\"\n  - \"groupadd\"\n  - \"groupdel\"\n  - \"grpunconv\"\n  - \"chgpasswd\"\n  - \"userdel\"\n  - \"chage\"\n  - \"chsh\"\n  - \"gpasswd\"\n  - \"chfn\"\n  - \"expiry\"\n  - \"passwd\"\n  - \"vigr\"\n  - \"cpgr\"\n  - \"adduser\"\n  - \"addgroup\"\n  - \"deluser\"\n  - \"delgroup\"\n  append: false\n\n- list: \"shadowutils_binaries\"\n  items:\n  - \"chage\"\n  - \"gpasswd\"\n  - \"lastlog\"\n  - \"newgrp\"\n  - \"sg\"\n  - \"adduser\"\n  - \"deluser\"\n  - \"chpasswd\"\n  - \"groupadd\"\n  - \"groupdel\"\n  - \"addgroup\"\n  - \"delgroup\"\n  - \"groupmems\"\n  - \"groupmod\"\n  - \"grpck\"\n  - \"grpconv\"\n  - \"grpunconv\"\n  - \"newusers\"\n  - \"pwck\"\n  - \"pwconv\"\n  - \"pwunconv\"\n  - \"useradd\"\n  - \"userdel\"\n  - \"usermod\"\n  - \"vigr\"\n  - \"vipw\"\n  - \"unix_chkpwd\"\n  append: false\n\n- list: \"sysdigcloud_binaries\"\n  items:\n  - \"setup-backend\"\n  - \"dragent\"\n  - \"sdchecks\"\n  append: false\n\n- list: \"docker_binaries\"\n  items:\n  - \"docker\"\n  - \"dockerd\"\n  - \"exe\"\n  - \"docker-compose\"\n  - \"docker-entrypoi\"\n  - \"docker-runc-cur\"\n  - \"docker-current\"\n  - \"dockerd-current\"\n  append: false\n\n- list: \"k8s_binaries\"\n  items:\n  - \"hyperkube\"\n  - \"skydns\"\n  - \"kube2sky\"\n  - \"exechealthz\"\n  - \"weave-net\"\n  - \"loopback\"\n  - \"bridge\"\n  - \"openshift-sdn\"\n  - \"openshift\"\n  append: false\n\n- list: \"lxd_binaries\"\n  items:\n  - \"lxd\"\n  - \"lxcfs\"\n  append: false\n\n- list: \"http_server_binaries\"\n  items:\n  - \"nginx\"\n  - \"httpd\"\n  - \"httpd-foregroun\"\n  - \"lighttpd\"\n  - \"apache\"\n  - \"apache2\"\n  append: false\n\n- list: \"db_server_binaries\"\n  items:\n  - \"mysqld\"\n  - \"postgres\"\n  - \"sqlplus\"\n  append: false\n\n- list: \"mysql_mgmt_binaries\"\n  items:\n  - \"mysql_install_d\"\n  - \"mysql_ssl_rsa_s\"\n  append: false\n\n- list: \"postgres_mgmt_binaries\"\n  items:\n  - \"pg_dumpall\"\n  - \"pg_ctl\"\n  - \"pg_lsclusters\"\n  - \"pg_ctlcluster\"\n  append: false\n\n- list: \"db_mgmt_binaries\"\n  items:\n  - \"mysql_mgmt_binaries\"\n  - \"postgres_mgmt_binaries\"\n  append: false\n\n- list: \"nosql_server_binaries\"\n  items:\n  - \"couchdb\"\n  - \"memcached\"\n  - \"redis-server\"\n  - \"rabbitmq-server\"\n  - \"mongod\"\n  append: false\n\n- list: \"gitlab_binaries\"\n  items:\n  - \"gitlab-shell\"\n  - \"gitlab-mon\"\n  - \"gitlab-runner-b\"\n  - \"git\"\n  append: false\n\n- list: \"interpreted_binaries\"\n  items:\n  - \"lua\"\n  - \"node\"\n  - \"perl\"\n  - \"perl5\"\n  - \"perl6\"\n  - \"php\"\n  - \"python\"\n  - \"python2\"\n  - \"python3\"\n  - \"ruby\"\n  - \"tcl\"\n  append: false\n\n- macro: \"interpreted_procs\"\n  condition: \"(proc.name in (interpreted_binaries))\\n\"\n  append: false\n\n- macro: \"server_procs\"\n  condition: \"proc.name in (http_server_binaries, db_server_binaries, docker_binaries,\\\n    \\ sshd)\"\n  append: false\n\n- list: \"rpm_binaries\"\n  items:\n  - \"dnf\"\n  - \"rpm\"\n  - \"rpmkey\"\n  - \"yum\"\n  - \"\\\"75-system-updat\\\"\"\n  - \"rhsmcertd-worke\"\n  - \"subscription-ma\"\n  - \"repoquery\"\n  - \"rpmkeys\"\n  - \"rpmq\"\n  - \"yum-cron\"\n  - \"yum-config-mana\"\n  - \"yum-debug-dump\"\n  - \"abrt-action-sav\"\n  - \"rpmdb_stat\"\n  - \"microdnf\"\n  - \"rhn_check\"\n  - \"yumdb\"\n  append: false\n\n- list: \"openscap_rpm_binaries\"\n  items:\n  - \"probe_rpminfo\"\n  - \"probe_rpmverify\"\n  - \"probe_rpmverifyfile\"\n  - \"probe_rpmverifypackage\"\n  append: false\n\n- macro: \"rpm_procs\"\n  condition: \"(proc.name in (rpm_binaries, openscap_rpm_binaries) or proc.name in\\\n    \\ (salt-minion))\"\n  append: false\n\n- list: \"deb_binaries\"\n  items:\n  - \"dpkg\"\n  - \"dpkg-preconfigu\"\n  - \"dpkg-reconfigur\"\n  - \"dpkg-divert\"\n  - \"apt\"\n  - \"apt-get\"\n  - \"aptitude\"\n  - \"frontend\"\n  - \"preinst\"\n  - \"add-apt-reposit\"\n  - \"apt-auto-remova\"\n  - \"apt-key\"\n  - \"apt-listchanges\"\n  - \"unattended-upgr\"\n  - \"apt-add-reposit\"\n  - \"apt-config\"\n  - \"apt-cache\"\n  append: false\n\n- list: \"package_mgmt_binaries\"\n  items:\n  - \"rpm_binaries\"\n  - \"deb_binaries\"\n  - \"update-alternat\"\n  - \"gem\"\n  - \"pip\"\n  - \"pip3\"\n  - \"sane-utils.post\"\n  - \"alternatives\"\n  - \"chef-client\"\n  - \"apk\"\n  append: false\n\n- macro: \"package_mgmt_procs\"\n  condition: \"proc.name in (package_mgmt_binaries)\"\n  append: false\n\n- macro: \"package_mgmt_ancestor_procs\"\n  condition: \"proc.pname in (package_mgmt_binaries) or proc.aname[2] in (package_mgmt_binaries)\\\n    \\ or proc.aname[3] in (package_mgmt_binaries) or proc.aname[4] in (package_mgmt_binaries)\"\n  append: false\n\n- macro: \"coreos_write_ssh_dir\"\n  condition: \"(proc.name=update-ssh-keys and fd.name startswith /home/core/.ssh)\"\n  append: false\n\n- macro: \"run_by_package_mgmt_binaries\"\n  condition: \"proc.aname in (package_mgmt_binaries, needrestart)\"\n  append: false\n\n- list: \"ssl_mgmt_binaries\"\n  items:\n  - \"ca-certificates\"\n  append: false\n\n- list: \"dhcp_binaries\"\n  items:\n  - \"dhclient\"\n  - \"dhclient-script\"\n  - \"11-dhclient\"\n  append: false\n\n- list: \"userexec_binaries\"\n  items:\n  - \"sudo\"\n  - \"su\"\n  - \"suexec\"\n  - \"critical-stack\"\n  - \"dzdo\"\n  append: false\n\n- list: \"known_setuid_binaries\"\n  items:\n  - \"sshd\"\n  - \"dbus-daemon-lau\"\n  - \"ping\"\n  - \"ping6\"\n  - \"critical-stack-\"\n  - \"pmmcli\"\n  - \"filemng\"\n  - \"PassengerAgent\"\n  - \"bwrap\"\n  - \"osdetect\"\n  - \"nginxmng\"\n  - \"sw-engine-fpm\"\n  - \"start-stop-daem\"\n  append: false\n\n- list: \"user_mgmt_binaries\"\n  items:\n  - \"login_binaries\"\n  - \"passwd_binaries\"\n  - \"shadowutils_binaries\"\n  append: false\n\n- list: \"dev_creation_binaries\"\n  items:\n  - \"blkid\"\n  - \"rename_device\"\n  - \"update_engine\"\n  - \"sgdisk\"\n  append: false\n\n- list: \"hids_binaries\"\n  items:\n  - \"aide\"\n  - \"aide.wrapper\"\n  - \"update-aide.con\"\n  - \"logcheck\"\n  - \"syslog-summary\"\n  - \"osqueryd\"\n  - \"ossec-syscheckd\"\n  append: false\n\n- list: \"vpn_binaries\"\n  items:\n  - \"openvpn\"\n  append: false\n\n- list: \"nomachine_binaries\"\n  items:\n  - \"nxexec\"\n  - \"nxnode.bin\"\n  - \"nxserver.bin\"\n  - \"nxclient.bin\"\n  append: false\n\n- macro: \"system_procs\"\n  condition: \"proc.name in (coreutils_binaries, user_mgmt_binaries)\"\n  append: false\n\n- list: \"mail_binaries\"\n  items:\n  - \"sendmail\"\n  - \"sendmail-msp\"\n  - \"postfix\"\n  - \"procmail\"\n  - \"exim4\"\n  - \"pickup\"\n  - \"showq\"\n  - \"mailq\"\n  - \"dovecot\"\n  - \"imap-login\"\n  - \"imap\"\n  - \"mailmng-core\"\n  - \"pop3-login\"\n  - \"dovecot-lda\"\n  - \"pop3\"\n  append: false\n\n- list: \"mail_config_binaries\"\n  items:\n  - \"update_conf\"\n  - \"parse_mc\"\n  - \"makemap_hash\"\n  - \"newaliases\"\n  - \"update_mk\"\n  - \"update_tlsm4\"\n  - \"update_db\"\n  - \"update_mc\"\n  - \"ssmtp.postinst\"\n  - \"mailq\"\n  - \"postalias\"\n  - \"postfix.config.\"\n  - \"postfix.config\"\n  - \"postfix-script\"\n  - \"postconf\"\n  append: false\n\n- list: \"sensitive_file_names\"\n  items:\n  - \"/etc/shadow\"\n  - \"/etc/sudoers\"\n  - \"/etc/pam.conf\"\n  - \"/etc/security/pwquality.conf\"\n  append: false\n\n- list: \"sensitive_directory_names\"\n  items:\n  - \"/\"\n  - \"/etc\"\n  - \"/etc/\"\n  - \"/root\"\n  - \"/root/\"\n  append: false\n\n- macro: \"sensitive_files\"\n  condition: \"fd.name startswith /etc and (fd.name in (sensitive_file_names)\\n or\\\n    \\ fd.directory in (/etc/sudoers.d, /etc/pam.d))\\n\"\n  append: false\n\n- macro: \"proc_is_new\"\n  condition: \"proc.duration <= 5000000000\"\n  append: false\n\n- macro: \"inbound\"\n  condition: \"(((evt.type in (accept,listen) and evt.dir=<) or\\n  (evt.type in (recvfrom,recvmsg)\\\n    \\ and evt.dir=< and\\n   fd.l4proto != tcp and fd.connected=false and fd.name_changed=true))\\\n    \\ and\\n (fd.typechar = 4 or fd.typechar = 6) and\\n (fd.ip != \\\"0.0.0.0\\\" and fd.net\\\n    \\ != \\\"127.0.0.0/8\\\") and\\n (evt.rawres >= 0 or evt.res = EINPROGRESS))\\n\"\n  append: false\n\n- list: \"rfc_1918_addresses\"\n  items:\n  - \"\\\"10.0.0.0/8\\\"\"\n  - \"\\\"172.16.0.0/12\\\"\"\n  - \"\\\"192.168.0.0/16\\\"\"\n  append: false\n\n- macro: \"outbound\"\n  condition: \"(((evt.type = connect and evt.dir=<) or\\n  (evt.type in (sendto,sendmsg)\\\n    \\ and evt.dir=< and\\n   fd.l4proto != tcp and fd.connected=false and fd.name_changed=true))\\\n    \\ and\\n (fd.typechar = 4 or fd.typechar = 6) and\\n (fd.ip != \\\"0.0.0.0\\\" and fd.net\\\n    \\ != \\\"127.0.0.0/8\\\" and not fd.snet in (rfc_1918_addresses)) and\\n (evt.rawres\\\n    \\ >= 0 or evt.res = EINPROGRESS))\\n\"\n  append: false\n\n- macro: \"inbound_outbound\"\n  condition: \"(((evt.type in (accept,listen,connect) and evt.dir=<)) or\\n (fd.typechar\\\n    \\ = 4 or fd.typechar = 6) and\\n (fd.ip != \\\"0.0.0.0\\\" and fd.net != \\\"127.0.0.0/8\\\"\\\n    ) and\\n (evt.rawres >= 0 or evt.res = EINPROGRESS))\\n\"\n  append: false\n\n- macro: \"ssh_port\"\n  condition: \"fd.sport=22\"\n  append: false\n\n- macro: \"allowed_ssh_hosts\"\n  condition: \"ssh_port\"\n  append: false\n\n- rule: \"Disallowed SSH Connection\"\n  desc: \"Detect any new ssh connection to a host other than those in an allowed group\\\n    \\ of hosts\"\n  condition: \"(inbound_outbound) and ssh_port and not allowed_ssh_hosts\"\n  output: \"Disallowed SSH Connection (command=%proc.cmdline connection=%fd.name user=%user.name\\\n    \\ container_id=%container.id image=%container.image.repository)\"\n  priority: \"NOTICE\"\n  tags:\n  - \"NIST\"\n  - \"NIST_3.4.2\"\n  - \"NIST_3.4.4\"\n  - \"network\"\n  - \"mitre_remote_service\"\n  append: false\n\n- macro: \"consider_all_outbound_conns\"\n  condition: \"(never_true)\"\n  append: false\n\n- list: \"allowed_outbound_destination_ipaddrs\"\n  items:\n  - \"\\\"127.0.0.1\\\"\"\n  - \"\\\"8.8.8.8\\\"\"\n  append: false\n\n- list: \"allowed_outbound_destination_networks\"\n  items:\n  - \"\\\"127.0.0.1/8\\\"\"\n  append: false\n\n- list: \"allowed_outbound_destination_domains\"\n  items:\n  - \"google.com\"\n  - \"www.yahoo.com\"\n  append: false\n\n- rule: \"Unexpected outbound connection destination\"\n  desc: \"Detect any outbound connection to a destination outside of an allowed set\\\n    \\ of ips, networks, or domain names\"\n  condition: \"consider_all_outbound_conns and outbound and not ((fd.sip in (allowed_outbound_destination_ipaddrs))\\\n    \\ or\\n (fd.snet in (allowed_outbound_destination_networks)) or\\n (fd.sip.name\\\n    \\ in (allowed_outbound_destination_domains)))\\n\"\n  output: \"Disallowed outbound connection destination (command=%proc.cmdline connection=%fd.name\\\n    \\ user=%user.name container_id=%container.id image=%container.image.repository)\"\n  priority: \"NOTICE\"\n  tags:\n  - \"NIST\"\n  - \"NIST_3.4.1\"\n  - \"NIST_3.4.4\"\n  - \"network\"\n  append: false\n\n- macro: \"consider_all_inbound_conns\"\n  condition: \"(never_true)\"\n  append: false\n\n- list: \"allowed_inbound_source_ipaddrs\"\n  items:\n  - \"\\\"127.0.0.1\\\"\"\n  append: false\n\n- list: \"allowed_inbound_source_networks\"\n  items:\n  - \"\\\"127.0.0.1/8\\\"\"\n  - \"\\\"10.0.0.0/8\\\"\"\n  append: false\n\n- list: \"allowed_inbound_source_domains\"\n  items:\n  - \"google.com\"\n  append: false\n\n- rule: \"Unexpected inbound connection source\"\n  desc: \"Detect any inbound connection from a source outside of an allowed set of\\\n    \\ ips, networks, or domain names\"\n  condition: \"consider_all_inbound_conns and inbound and not ((fd.cip in (allowed_inbound_source_ipaddrs))\\\n    \\ or\\n (fd.cnet in (allowed_inbound_source_networks)) or\\n (fd.cip.name in (allowed_inbound_source_domains)))\\n\"\n  output: \"Disallowed inbound connection source (command=%proc.cmdline connection=%fd.name\\\n    \\ user=%user.name container_id=%container.id image=%container.image.repository)\"\n  priority: \"NOTICE\"\n  tags:\n  - \"NIST\"\n  - \"NIST_3.4.1\"\n  - \"NIST_3.4.2\"\n  - \"NIST_3.4.4\"\n  - \"network\"\n  append: false\n\n- list: \"bash_config_filenames\"\n  items:\n  - \".bashrc\"\n  - \".bash_profile\"\n  - \".bash_history\"\n  - \".bash_login\"\n  - \".bash_logout\"\n  - \".inputrc\"\n  - \".profile\"\n  append: false\n\n- list: \"bash_config_files\"\n  items:\n  - \"/etc/profile\"\n  - \"/etc/bashrc\"\n  append: false\n\n- list: \"csh_config_filenames\"\n  items:\n  - \".cshrc\"\n  - \".login\"\n  - \".logout\"\n  - \".history\"\n  - \".tcshrc\"\n  - \".cshdirs\"\n  append: false\n\n- list: \"csh_config_files\"\n  items:\n  - \"/etc/csh.cshrc\"\n  - \"/etc/csh.login\"\n  append: false\n\n- list: \"zsh_config_filenames\"\n  items:\n  - \".zshenv\"\n  - \".zprofile\"\n  - \".zshrc\"\n  - \".zlogin\"\n  - \".zlogout\"\n  append: false\n\n- list: \"shell_config_filenames\"\n  items:\n  - \"bash_config_filenames\"\n  - \"csh_config_filenames\"\n  - \"zsh_config_filenames\"\n  append: false\n\n- list: \"shell_config_files\"\n  items:\n  - \"bash_config_files\"\n  - \"csh_config_files\"\n  append: false\n\n- list: \"shell_config_directories\"\n  items:\n  - \"/etc/zsh\"\n  append: false\n\n- rule: \"Modify Shell Configuration File\"\n  desc: \"Detect attempt to modify shell configuration files\"\n  condition: \"open_write and (fd.filename in (shell_config_filenames) or\\n fd.name\\\n    \\ in (shell_config_files) or\\n fd.directory in (shell_config_directories))\\nand\\\n    \\ not proc.name in (shell_binaries) and not exe_running_docker_save\\n\"\n  output: \"a shell configuration file has been modified (user=%user.name command=%proc.cmdline\\\n    \\ pcmdline=%proc.pcmdline file=%fd.name container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"WARNING\"\n  tags:\n  - \"mitre_persistence\"\n  - \"file\"\n  append: false\n\n- macro: \"consider_shell_config_reads\"\n  condition: \"(never_true)\"\n  append: false\n\n- rule: \"Read Shell Configuration File\"\n  desc: \"Detect attempts to read shell configuration files by non-shell programs\"\n  condition: \"open_read and consider_shell_config_reads and (fd.filename in (shell_config_filenames)\\\n    \\ or\\n fd.name in (shell_config_files) or\\n fd.directory in (shell_config_directories))\\\n    \\ and\\n(not proc.name in (shell_binaries))\\n\"\n  output: \"a shell configuration file was read by a non-shell program (user=%user.name\\\n    \\ command=%proc.cmdline file=%fd.name container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"WARNING\"\n  tags:\n  - \"file\"\n  - \"mitre_discovery\"\n  append: false\n\n- macro: \"consider_all_cron_jobs\"\n  condition: \"(never_true)\"\n  append: false\n\n- rule: \"Schedule Cron Jobs\"\n  desc: \"Detect cron jobs scheduled\"\n  condition: \"consider_all_cron_jobs and ((open_write and fd.name startswith /etc/cron)\\\n    \\ or\\n (spawned_process and proc.name = \\\"crontab\\\"))\\n\"\n  output: \"Cron jobs were scheduled to run (user=%user.name command=%proc.cmdline\\\n    \\ file=%fd.name container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"mitre_persistence\"\n  - \"file\"\n  append: false\n\n- macro: \"container\"\n  condition: \"(container.id != host)\"\n  append: false\n\n- macro: \"container_started\"\n  condition: \"((evt.type = container or\\n (evt.type=execve and evt.dir=< and proc.vpid=1))\\\n    \\ and\\n container.image.repository != incomplete)\\n\"\n  append: false\n\n- macro: \"interactive\"\n  condition: \"((proc.aname=sshd and proc.name != sshd) or proc.name=systemd-logind\\\n    \\ or proc.name=login)\\n\"\n  append: false\n\n- list: \"cron_binaries\"\n  items:\n  - \"anacron\"\n  - \"cron\"\n  - \"crond\"\n  - \"crontab\"\n  append: false\n\n- list: \"needrestart_binaries\"\n  items:\n  - \"needrestart\"\n  - \"10-dpkg\"\n  - \"20-rpm\"\n  - \"30-pacman\"\n  append: false\n\n- list: \"sshkit_script_binaries\"\n  items:\n  - \"10_etc_sudoers.\"\n  - \"10_passwd_group\"\n  append: false\n\n- list: \"plesk_binaries\"\n  items:\n  - \"sw-engine\"\n  - \"sw-engine-fpm\"\n  - \"sw-engine-kv\"\n  - \"filemng\"\n  - \"f2bmng\"\n  append: false\n\n- macro: \"system_users\"\n  condition: \"user.name in (bin, daemon, games, lp, mail, nobody, sshd, sync, uucp,\\\n    \\ www-data)\"\n  append: false\n\n- macro: \"parent_ansible_running_python\"\n  condition: \"(proc.pname in (python, pypy, python3) and proc.pcmdline contains ansible)\"\n  append: false\n\n- macro: \"parent_bro_running_python\"\n  condition: \"(proc.pname=python and proc.cmdline contains /usr/share/broctl)\"\n  append: false\n\n- macro: \"parent_python_running_denyhosts\"\n  condition: \"(proc.cmdline startswith \\\"denyhosts.py /usr/bin/denyhosts.py\\\" or\\n\\\n    \\ (proc.pname=python and\\n (proc.pcmdline contains /usr/sbin/denyhosts or\\n  proc.pcmdline\\\n    \\ contains /usr/local/bin/denyhosts.py)))\\n\"\n  append: false\n\n- macro: \"parent_python_running_sdchecks\"\n  condition: \"(proc.pname in (python, python2.7) and (proc.pcmdline contains /opt/draios/bin/sdchecks))\\n\"\n  append: false\n\n- macro: \"python_running_sdchecks\"\n  condition: \"(proc.name in (python, python2.7) and (proc.cmdline contains /opt/draios/bin/sdchecks))\\n\"\n  append: false\n\n- macro: \"parent_linux_image_upgrade_script\"\n  condition: \"proc.pname startswith linux-image-\"\n  append: false\n\n- macro: \"parent_java_running_echo\"\n  condition: \"(proc.pname=java and proc.cmdline startswith \\\"sh -c echo\\\")\"\n  append: false\n\n- macro: \"parent_scripting_running_builds\"\n  condition: \"(proc.pname in (php,php5-fpm,php-fpm7.1,python,ruby,ruby2.3,ruby2.1,node,conda)\\\n    \\ and (\\n   proc.cmdline startswith \\\"sh -c git\\\" or\\n   proc.cmdline startswith\\\n    \\ \\\"sh -c date\\\" or\\n   proc.cmdline startswith \\\"sh -c /usr/bin/g++\\\" or\\n  \\\n    \\ proc.cmdline startswith \\\"sh -c /usr/bin/gcc\\\" or\\n   proc.cmdline startswith\\\n    \\ \\\"sh -c gcc\\\" or\\n   proc.cmdline startswith \\\"sh -c if type gcc\\\" or\\n   proc.cmdline\\\n    \\ startswith \\\"sh -c cd \'/var/www/edi/\';LC_ALL=en_US.UTF-8 git\\\" or\\n   proc.cmdline\\\n    \\ startswith \\\"sh -c /var/www/edi/bin/sftp.sh\\\" or\\n   proc.cmdline startswith\\\n    \\ \\\"sh -c /usr/src/app/crxlsx/bin/linux/crxlsx\\\" or\\n   proc.cmdline startswith\\\n    \\ \\\"sh -c make parent\\\" or\\n   proc.cmdline startswith \\\"node /jenkins/tools\\\"\\\n    \\ or\\n   proc.cmdline startswith \\\"sh -c \'/usr/bin/node\'\\\" or\\n   proc.cmdline\\\n    \\ startswith \\\"sh -c stty -a |\\\" or\\n   proc.pcmdline startswith \\\"node /opt/nodejs/bin/yarn\\\"\\\n    \\ or\\n   proc.pcmdline startswith \\\"node /usr/local/bin/yarn\\\" or\\n   proc.pcmdline\\\n    \\ startswith \\\"node /root/.config/yarn\\\" or\\n   proc.pcmdline startswith \\\"node\\\n    \\ /opt/yarn/bin/yarn.js\\\"))\\n\"\n  append: false\n\n- macro: \"httpd_writing_ssl_conf\"\n  condition: \"(proc.pname=run-httpd and\\n (proc.cmdline startswith \\\"sed -ri\\\" or\\\n    \\ proc.cmdline startswith \\\"sed -i\\\") and\\n (fd.name startswith /etc/httpd/conf.d/\\\n    \\ or fd.name startswith /etc/httpd/conf))\\n\"\n  append: false\n\n- macro: \"userhelper_writing_etc_security\"\n  condition: \"(proc.name=userhelper and fd.name startswith /etc/security)\"\n  append: false\n\n- macro: \"parent_Xvfb_running_xkbcomp\"\n  condition: \"(proc.pname=Xvfb and proc.cmdline startswith \'sh -c \\\"/usr/bin/xkbcomp\\\"\\\n    \')\"\n  append: false\n\n- macro: \"parent_nginx_running_serf\"\n  condition: \"(proc.pname=nginx and proc.cmdline startswith \\\"sh -c serf\\\")\"\n  append: false\n\n- macro: \"parent_node_running_npm\"\n  condition: \"(proc.pcmdline startswith \\\"node /usr/local/bin/npm\\\" or proc.pcmdline\\\n    \\ startswith \\\"node /usr/local/nodejs/bin/npm\\\" or proc.pcmdline startswith \\\"\\\n    node /opt/rh/rh-nodejs6/root/usr/bin/npm\\\")\"\n  append: false\n\n- macro: \"parent_java_running_sbt\"\n  condition: \"(proc.pname=java and proc.pcmdline contains sbt-launch.jar)\"\n  append: false\n\n- list: \"known_container_shell_spawn_cmdlines\"\n  items: []\n  append: false\n\n- list: \"known_shell_spawn_binaries\"\n  items: []\n  append: false\n\n- macro: \"ansible_running_python\"\n  condition: \"(proc.name in (python, pypy, python3) and proc.cmdline contains ansible)\"\n  append: false\n\n- macro: \"python_running_chef\"\n  condition: \"(proc.name=python and (proc.cmdline contains yum-dump.py or proc.cmdline=\\\"\\\n    python /usr/bin/chef-monitor.py\\\"))\"\n  append: false\n\n- macro: \"python_running_denyhosts\"\n  condition: \"(proc.name=python and (proc.cmdline contains /usr/sbin/denyhosts or\\n\\\n    \\ proc.cmdline contains /usr/local/bin/denyhosts.py))\\n\"\n  append: false\n\n- macro: \"run_by_qualys\"\n  condition: \"(proc.pname=qualys-cloud-ag or\\n proc.aname[2]=qualys-cloud-ag or\\n\\\n    \\ proc.aname[3]=qualys-cloud-ag or\\n proc.aname[4]=qualys-cloud-ag)\\n\"\n  append: false\n\n- macro: \"run_by_sumologic_securefiles\"\n  condition: \"((proc.cmdline=\\\"usermod -a -G sumologic_collector\\\" or\\n  proc.cmdline=\\\"\\\n    groupadd sumologic_collector\\\") and\\n (proc.pname=secureFiles.sh and proc.aname[2]=java))\\n\"\n  append: false\n\n- macro: \"run_by_yum\"\n  condition: \"((proc.pname=sh and proc.aname[2]=yum) or (proc.aname[2]=sh and proc.aname[3]=yum))\"\n  append: false\n\n- macro: \"run_by_ms_oms\"\n  condition: \"(proc.aname[3] startswith omsagent- or\\n proc.aname[3] startswith scx-)\\n\"\n  append: false\n\n- macro: \"run_by_google_accounts_daemon\"\n  condition: \"(proc.aname[1] startswith google_accounts or\\n proc.aname[2] startswith\\\n    \\ google_accounts or\\n proc.aname[3] startswith google_accounts)\\n\"\n  append: false\n\n- macro: \"run_by_chef\"\n  condition: \"(proc.aname[2]=chef_command_wr or proc.aname[3]=chef_command_wr or proc.aname[2]=chef-client\\\n    \\ or proc.aname[3]=chef-client or proc.name=chef-client)\"\n  append: false\n\n- macro: \"run_by_adclient\"\n  condition: \"(proc.aname[2]=adclient or proc.aname[3]=adclient or proc.aname[4]=adclient)\"\n  append: false\n\n- macro: \"run_by_centrify\"\n  condition: \"(proc.aname[2]=centrify or proc.aname[3]=centrify or proc.aname[4]=centrify)\"\n  append: false\n\n- macro: \"run_by_puppet\"\n  condition: \"(proc.aname[2]=puppet or proc.aname[3]=puppet)\"\n  append: false\n\n- macro: \"run_by_foreman\"\n  condition: \"(user.name=foreman and\\n (proc.pname in (rake, ruby, scl) and proc.aname[5]\\\n    \\ in (tfm-rake,tfm-ruby)) or\\n (proc.pname=scl and proc.aname[2] in (tfm-rake,tfm-ruby)))\\n\"\n  append: false\n\n- macro: \"java_running_sdjagent\"\n  condition: \"proc.name=java and proc.cmdline contains sdjagent.jar\"\n  append: false\n\n- macro: \"kubelet_running_loopback\"\n  condition: \"(proc.pname=kubelet and proc.name=loopback)\"\n  append: false\n\n- macro: \"python_mesos_marathon_scripting\"\n  condition: \"(proc.pcmdline startswith \\\"python3 /marathon-lb/marathon_lb.py\\\")\"\n  append: false\n\n- macro: \"splunk_running_forwarder\"\n  condition: \"(proc.pname=splunkd and proc.cmdline startswith \\\"sh -c /opt/splunkforwarder\\\"\\\n    )\"\n  append: false\n\n- macro: \"parent_supervise_running_multilog\"\n  condition: \"(proc.name=multilog and proc.pname=supervise)\"\n  append: false\n\n- macro: \"supervise_writing_status\"\n  condition: \"(proc.name in (supervise,svc) and fd.name startswith \\\"/etc/sb/\\\")\"\n  append: false\n\n- macro: \"pki_realm_writing_realms\"\n  condition: \"(proc.cmdline startswith \\\"bash /usr/local/lib/pki/pki-realm\\\" and fd.name\\\n    \\ startswith /etc/pki/realms)\"\n  append: false\n\n- macro: \"htpasswd_writing_passwd\"\n  condition: \"(proc.name=htpasswd and fd.name=/etc/nginx/.htpasswd)\"\n  append: false\n\n- macro: \"lvprogs_writing_conf\"\n  condition: \"(proc.name in (dmeventd,lvcreate,pvscan,lvs) and\\n (fd.name startswith\\\n    \\ /etc/lvm/archive or\\n  fd.name startswith /etc/lvm/backup or\\n  fd.name startswith\\\n    \\ /etc/lvm/cache))\\n\"\n  append: false\n\n- macro: \"ovsdb_writing_openvswitch\"\n  condition: \"(proc.name=ovsdb-server and fd.directory=/etc/openvswitch)\"\n  append: false\n\n- macro: \"perl_running_plesk\"\n  condition: \"(proc.cmdline startswith \\\"perl /opt/psa/admin/bin/plesk_agent_manager\\\"\\\n    \\ or proc.pcmdline startswith \\\"perl /opt/psa/admin/bin/plesk_agent_manager\\\")\"\n  append: false\n\n- macro: \"perl_running_updmap\"\n  condition: \"(proc.cmdline startswith \\\"perl /usr/bin/updmap\\\")\"\n  append: false\n\n- macro: \"perl_running_centrifydc\"\n  condition: \"(proc.cmdline startswith \\\"perl /usr/share/centrifydc\\\")\"\n  append: false\n\n- macro: \"runuser_reading_pam\"\n  condition: \"(proc.name=runuser and fd.directory=/etc/pam.d)\"\n  append: false\n\n- macro: \"parent_ucf_writing_conf\"\n  condition: \"(proc.pname=ucf and proc.aname[2]=frontend)\"\n  append: false\n\n- macro: \"consul_template_writing_conf\"\n  condition: \"((proc.name=consul-template and fd.name startswith /etc/haproxy) or\\n\\\n    \\ (proc.name=reload.sh and proc.aname[2]=consul-template and fd.name startswith\\\n    \\ /etc/ssl))\\n\"\n  append: false\n\n- macro: \"countly_writing_nginx_conf\"\n  condition: \"(proc.cmdline startswith \\\"nodejs /opt/countly/bin\\\" and fd.name startswith\\\n    \\ /etc/nginx)\"\n  append: false\n\n- list: \"ms_oms_binaries\"\n  items:\n  - \"omi.postinst\"\n  - \"omsconfig.posti\"\n  - \"scx.postinst\"\n  - \"omsadmin.sh\"\n  - \"omiagent\"\n  append: false\n\n- macro: \"ms_oms_writing_conf\"\n  condition: \"((proc.name in (omiagent,omsagent,in_heartbeat_r*,omsadmin.sh,PerformInventor,dsc_host)\\n\\\n    \\   or proc.pname in (ms_oms_binaries)\\n   or proc.aname[2] in (ms_oms_binaries))\\n\\\n    \\ and (fd.name startswith /etc/opt/omi or fd.name startswith /etc/opt/microsoft/omsagent))\\n\"\n  append: false\n\n- macro: \"ms_scx_writing_conf\"\n  condition: \"(proc.name in (GetLinuxOS.sh) and fd.name startswith /etc/opt/microsoft/scx)\"\n  append: false\n\n- macro: \"azure_scripts_writing_conf\"\n  condition: \"(proc.pname startswith \\\"bash /var/lib/waagent/\\\" and fd.name startswith\\\n    \\ /etc/azure)\"\n  append: false\n\n- macro: \"azure_networkwatcher_writing_conf\"\n  condition: \"(proc.name in (NetworkWatcherA) and fd.name=/etc/init.d/AzureNetworkWatcherAgent)\"\n  append: false\n\n- macro: \"couchdb_writing_conf\"\n  condition: \"(proc.name=beam.smp and proc.cmdline contains couchdb and fd.name startswith\\\n    \\ /etc/couchdb)\"\n  append: false\n\n- macro: \"update_texmf_writing_conf\"\n  condition: \"(proc.name=update-texmf and fd.name startswith /etc/texmf)\"\n  append: false\n\n- macro: \"slapadd_writing_conf\"\n  condition: \"(proc.name=slapadd and fd.name startswith /etc/ldap)\"\n  append: false\n\n- macro: \"openldap_writing_conf\"\n  condition: \"(proc.pname=run-openldap.sh and fd.name startswith /etc/openldap)\"\n  append: false\n\n- macro: \"ucpagent_writing_conf\"\n  condition: \"(proc.name=apiserver and container.image.repository=docker/ucp-agent\\\n    \\ and fd.name=/etc/authorization_config.cfg)\"\n  append: false\n\n- macro: \"iscsi_writing_conf\"\n  condition: \"(proc.name=iscsiadm and fd.name startswith /etc/iscsi)\"\n  append: false\n\n- macro: \"istio_writing_conf\"\n  condition: \"(proc.name=pilot-agent and fd.name startswith /etc/istio)\"\n  append: false\n\n- macro: \"symantec_writing_conf\"\n  condition: \"((proc.name=symcfgd and fd.name startswith /etc/symantec) or\\n (proc.name=navdefutil\\\n    \\ and fd.name=/etc/symc-defutils.conf))\\n\"\n  append: false\n\n- macro: \"liveupdate_writing_conf\"\n  condition: \"(proc.cmdline startswith \\\"java LiveUpdate\\\" and fd.name in (/etc/liveupdate.conf,\\\n    \\ /etc/Product.Catalog.JavaLiveUpdate))\"\n  append: false\n\n- macro: \"rancher_agent\"\n  condition: \"(proc.name=agent and container.image.repository contains \\\"rancher/agent\\\"\\\n    )\"\n  append: false\n\n- macro: \"rancher_network_manager\"\n  condition: \"(proc.name=rancher-bridge and container.image.repository contains \\\"\\\n    rancher/network-manager\\\")\"\n  append: false\n\n- macro: \"sosreport_writing_files\"\n  condition: \"(proc.name=urlgrabber-ext- and proc.aname[3]=sosreport and\\n (fd.name\\\n    \\ startswith /etc/pkt/nssdb or fd.name startswith /etc/pki/nssdb))\\n\"\n  append: false\n\n- macro: \"pkgmgmt_progs_writing_pki\"\n  condition: \"(proc.name=urlgrabber-ext- and proc.pname in (yum, yum-cron, repoquery)\\\n    \\ and\\n (fd.name startswith /etc/pkt/nssdb or fd.name startswith /etc/pki/nssdb))\\n\"\n  append: false\n\n- macro: \"update_ca_trust_writing_pki\"\n  condition: \"(proc.pname=update-ca-trust and proc.name=trust and fd.name startswith\\\n    \\ /etc/pki)\"\n  append: false\n\n- macro: \"brandbot_writing_os_release\"\n  condition: \"proc.name=brandbot and fd.name=/etc/os-release\"\n  append: false\n\n- macro: \"selinux_writing_conf\"\n  condition: \"(proc.name in (semodule,genhomedircon,sefcontext_comp) and fd.name startswith\\\n    \\ /etc/selinux)\"\n  append: false\n\n- list: \"veritas_binaries\"\n  items:\n  - \"vxconfigd\"\n  - \"sfcache\"\n  - \"vxclustadm\"\n  - \"vxdctl\"\n  - \"vxprint\"\n  - \"vxdmpadm\"\n  - \"vxdisk\"\n  - \"vxdg\"\n  - \"vxassist\"\n  - \"vxtune\"\n  append: false\n\n- macro: \"veritas_driver_script\"\n  condition: \"(proc.cmdline startswith \\\"perl /opt/VRTSsfmh/bin/mh_driver.pl\\\")\"\n  append: false\n\n- macro: \"veritas_progs\"\n  condition: \"(proc.name in (veritas_binaries) or veritas_driver_script)\"\n  append: false\n\n- macro: \"veritas_writing_config\"\n  condition: \"(veritas_progs and (fd.name startswith /etc/vx or fd.name startswith\\\n    \\ /etc/opt/VRTS or fd.name startswith /etc/vom))\"\n  append: false\n\n- macro: \"nginx_writing_conf\"\n  condition: \"(proc.name in (nginx,nginx-ingress-c,nginx-ingress) and (fd.name startswith\\\n    \\ /etc/nginx or fd.name startswith /etc/ingress-controller))\"\n  append: false\n\n- macro: \"nginx_writing_certs\"\n  condition: \"(((proc.name=openssl and proc.pname=nginx-launch.sh) or proc.name=nginx-launch.sh)\\\n    \\ and fd.name startswith /etc/nginx/certs)\\n\"\n  append: false\n\n- macro: \"chef_client_writing_conf\"\n  condition: \"(proc.pcmdline startswith \\\"chef-client /opt/gitlab\\\" and fd.name startswith\\\n    \\ /etc/gitlab)\"\n  append: false\n\n- macro: \"centrify_writing_krb\"\n  condition: \"(proc.name in (adjoin,addns) and fd.name startswith /etc/krb5)\"\n  append: false\n\n- macro: \"cockpit_writing_conf\"\n  condition: \"((proc.pname=cockpit-kube-la or proc.aname[2]=cockpit-kube-la)\\n and\\\n    \\ fd.name startswith /etc/cockpit)\\n\"\n  append: false\n\n- macro: \"ipsec_writing_conf\"\n  condition: \"(proc.name=start-ipsec.sh and fd.directory=/etc/ipsec)\"\n  append: false\n\n- macro: \"exe_running_docker_save\"\n  condition: \"proc.name = \\\"exe\\\" and proc.cmdline contains \\\"/var/lib/docker\\\" and\\\n    \\ proc.pname in (dockerd, docker)\\n\"\n  append: false\n\n- macro: \"sed_temporary_file\"\n  condition: \"(proc.name=sed and fd.name startswith \\\"/etc/sed\\\")\"\n  append: false\n\n- macro: \"python_running_get_pip\"\n  condition: \"(proc.cmdline startswith \\\"python get-pip.py\\\")\"\n  append: false\n\n- macro: \"python_running_ms_oms\"\n  condition: \"(proc.cmdline startswith \\\"python /var/lib/waagent/\\\")\"\n  append: false\n\n- macro: \"gugent_writing_guestagent_log\"\n  condition: \"(proc.name=gugent and fd.name=GuestAgent.log)\"\n  append: false\n\n- macro: \"dse_writing_tmp\"\n  condition: \"(proc.name=dse-entrypoint and fd.name=/root/tmp__)\"\n  append: false\n\n- macro: \"zap_writing_state\"\n  condition: \"(proc.name=java and proc.cmdline contains \\\"jar /zap\\\" and fd.name startswith\\\n    \\ /root/.ZAP)\"\n  append: false\n\n- macro: \"airflow_writing_state\"\n  condition: \"(proc.name=airflow and fd.name startswith /root/airflow)\"\n  append: false\n\n- macro: \"rpm_writing_root_rpmdb\"\n  condition: \"(proc.name=rpm and fd.directory=/root/.rpmdb)\"\n  append: false\n\n- macro: \"maven_writing_groovy\"\n  condition: \"(proc.name=java and proc.cmdline contains \\\"classpath /usr/local/apache-maven\\\"\\\n    \\ and fd.name startswith /root/.groovy)\"\n  append: false\n\n- macro: \"chef_writing_conf\"\n  condition: \"(proc.name=chef-client and fd.name startswith /root/.chef)\"\n  append: false\n\n- macro: \"kubectl_writing_state\"\n  condition: \"(proc.name in (kubectl,oc) and fd.name startswith /root/.kube)\"\n  append: false\n\n- macro: \"java_running_cassandra\"\n  condition: \"(proc.name=java and proc.cmdline contains \\\"cassandra.jar\\\")\"\n  append: false\n\n- macro: \"cassandra_writing_state\"\n  condition: \"(java_running_cassandra and fd.directory=/root/.cassandra)\"\n  append: false\n\n- macro: \"galley_writing_state\"\n  condition: \"(proc.name=galley and fd.name in (known_istio_files))\"\n  append: false\n\n- list: \"known_istio_files\"\n  items:\n  - \"/healthready\"\n  - \"/healthliveness\"\n  append: false\n\n- macro: \"calico_writing_state\"\n  condition: \"(proc.name=kube-controller and fd.name startswith /status.json)\"\n  append: false\n\n- macro: \"calico_writing_envvars\"\n  condition: \"(proc.name=start_runit and fd.name startswith \\\"/etc/envvars\\\" and container.image.repository\\\n    \\ endswith \\\"calico/node\\\")\"\n  append: false\n\n- list: \"repository_files\"\n  items:\n  - \"sources.list\"\n  append: false\n\n- list: \"repository_directories\"\n  items:\n  - \"/etc/apt/sources.list.d\"\n  - \"/etc/yum.repos.d\"\n  append: false\n\n- macro: \"access_repositories\"\n  condition: \"(fd.filename in (repository_files) or fd.directory in (repository_directories))\"\n  append: false\n\n- macro: \"modify_repositories\"\n  condition: \"(evt.arg.newpath pmatch (repository_directories))\"\n  append: false\n\n- rule: \"Update Package Repository\"\n  desc: \"Detect package repositories get updated\"\n  condition: \"((open_write and access_repositories) or (modify and modify_repositories))\\\n    \\ and not package_mgmt_procs and not exe_running_docker_save\\n\"\n  output: \"Repository files get updated (user=%user.name command=%proc.cmdline pcmdline=%proc.pcmdline\\\n    \\ file=%fd.name newpath=%evt.arg.newpath container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"mitre_persistence\"\n  - \"filesystem\"\n  append: false\n\n- rule: \"Write below binary dir\"\n  desc: \"an attempt to write to any file below a set of binary directories\"\n  condition: \"bin_dir and evt.dir = < and open_write and not package_mgmt_procs and\\\n    \\ not exe_running_docker_save and not python_running_get_pip and not python_running_ms_oms\\n\"\n  output: \"File below a known binary directory opened for writing (user=%user.name\\\n    \\ command=%proc.cmdline file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline\\\n    \\ gparent=%proc.aname[2] container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"ERROR\"\n  tags:\n  - \"mitre_persistence\"\n  - \"NIST\"\n  - \"NIST_3.4.4\"\n  - \"filesystem\"\n  append: false\n\n- list: \"monitored_directories\"\n  items:\n  - \"/boot\"\n  - \"/lib\"\n  - \"/lib64\"\n  - \"/usr/lib\"\n  - \"/usr/local/lib\"\n  - \"/usr/local/sbin\"\n  - \"/usr/local/bin\"\n  - \"/root/.ssh\"\n  - \"/etc/cardserver\"\n  append: false\n\n- macro: \"user_ssh_directory\"\n  condition: \"(fd.name startswith \'/home\' and fd.name contains \'.ssh\')\"\n  append: false\n\n- macro: \"google_accounts_daemon_writing_ssh\"\n  condition: \"(proc.name=google_accounts and user_ssh_directory)\"\n  append: false\n\n- macro: \"cloud_init_writing_ssh\"\n  condition: \"(proc.name=cloud-init and user_ssh_directory)\"\n  append: false\n\n- macro: \"mkinitramfs_writing_boot\"\n  condition: \"(proc.pname in (mkinitramfs, update-initramf) and fd.directory=/boot)\"\n  append: false\n\n- macro: \"monitored_dir\"\n  condition: \"(fd.directory in (monitored_directories)\\n or user_ssh_directory)\\n\\\n    and not mkinitramfs_writing_boot\\n\"\n  append: false\n\n- macro: \"user_known_write_monitored_dir_conditions\"\n  condition: \"(never_true)\"\n  append: false\n\n- rule: \"Write below monitored dir\"\n  desc: \"an attempt to write to any file below a set of binary directories\"\n  condition: \"evt.dir = < and open_write and monitored_dir and not package_mgmt_procs\\\n    \\ and not coreos_write_ssh_dir and not exe_running_docker_save and not python_running_get_pip\\\n    \\ and not python_running_ms_oms and not google_accounts_daemon_writing_ssh and\\\n    \\ not cloud_init_writing_ssh and not user_known_write_monitored_dir_conditions\\n\"\n  output: \"File below a monitored directory opened for writing (user=%user.name command=%proc.cmdline\\\n    \\ file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2]\\\n    \\ container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"ERROR\"\n  tags:\n  - \"mitre_persistence\"\n  - \"NIST\"\n  - \"NIST_3.4.4\"\n  - \"filesystem\"\n  append: false\n\n- macro: \"consider_ssh_reads\"\n  condition: \"(never_true)\"\n  append: false\n\n- rule: \"Read ssh information\"\n  desc: \"Any attempt to read files below ssh directories by non-ssh programs\"\n  condition: \"(consider_ssh_reads and\\n (open_read or open_directory) and\\n (user_ssh_directory\\\n    \\ or fd.name startswith /root/.ssh) and\\n (not proc.name in (ssh_binaries)))\\n\"\n  output: \"ssh-related file/directory read by non-ssh program (user=%user.name command=%proc.cmdline\\\n    \\ file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline container_id=%container.id\\\n    \\ image=%container.image.repository)\\n\"\n  priority: \"ERROR\"\n  tags:\n  - \"mitre_discovery\"\n  - \"filesystem\"\n  append: false\n\n- list: \"safe_etc_dirs\"\n  items:\n  - \"/etc/cassandra\"\n  - \"/etc/ssl/certs/java\"\n  - \"/etc/logstash\"\n  - \"/etc/nginx/conf.d\"\n  - \"/etc/container_environment\"\n  - \"/etc/hrmconfig\"\n  - \"/etc/fluent/configs.d\"\n  append: false\n\n- macro: \"fluentd_writing_conf_files\"\n  condition: \"(proc.name=start-fluentd and fd.name in (/etc/fluent/fluent.conf, /etc/td-agent/td-agent.conf))\"\n  append: false\n\n- macro: \"qualys_writing_conf_files\"\n  condition: \"(proc.name=qualys-cloud-ag and fd.name=/etc/qualys/cloud-agent/qagent-log.conf)\"\n  append: false\n\n- macro: \"git_writing_nssdb\"\n  condition: \"(proc.name=git-remote-http and fd.directory=/etc/pki/nssdb)\"\n  append: false\n\n- macro: \"plesk_writing_keys\"\n  condition: \"(proc.name in (plesk_binaries) and fd.name startswith /etc/sw/keys)\"\n  append: false\n\n- macro: \"plesk_install_writing_apache_conf\"\n  condition: \"(proc.cmdline startswith \\\"bash -hB /usr/lib/plesk-9.0/services/webserver.apache\\\n    \\ configure\\\" and fd.name=\\\"/etc/apache2/apache2.conf.tmp\\\")\"\n  append: false\n\n- macro: \"plesk_running_mktemp\"\n  condition: \"(proc.name=mktemp and proc.aname[3] in (plesk_binaries))\"\n  append: false\n\n- macro: \"networkmanager_writing_resolv_conf\"\n  condition: \"proc.aname[2]=nm-dispatcher and fd.name=/etc/resolv.conf\"\n  append: false\n\n- macro: \"add_shell_writing_shells_tmp\"\n  condition: \"(proc.name=add-shell and fd.name=/etc/shells.tmp)\"\n  append: false\n\n- macro: \"duply_writing_exclude_files\"\n  condition: \"(proc.name=touch and proc.pcmdline startswith \\\"bash /usr/bin/duply\\\"\\\n    \\ and fd.name startswith \\\"/etc/duply\\\")\"\n  append: false\n\n- macro: \"xmlcatalog_writing_files\"\n  condition: \"(proc.name=update-xmlcatal and fd.directory=/etc/xml)\"\n  append: false\n\n- macro: \"datadog_writing_conf\"\n  condition: \"((proc.cmdline startswith \\\"python /opt/datadog-agent\\\" or proc.cmdline\\\n    \\ startswith \\\"entrypoint.sh /entrypoint.sh datadog start\\\" or proc.cmdline startswith\\\n    \\ \\\"agent.py /opt/datadog-agent\\\") and fd.name startswith \\\"/etc/dd-agent\\\")\"\n  append: false\n\n- macro: \"rancher_writing_conf\"\n  condition: \"((proc.name in (healthcheck, lb-controller, rancher-dns)) and (container.image.repository\\\n    \\ contains \\\"rancher/healthcheck\\\" or container.image.repository contains \\\"rancher/lb-service-haproxy\\\"\\\n    \\ or container.image.repository contains \\\"rancher/dns\\\") and (fd.name startswith\\\n    \\ \\\"/etc/haproxy\\\" or fd.name startswith \\\"/etc/rancher-dns\\\"))\"\n  append: false\n\n- macro: \"rancher_writing_root\"\n  condition: \"(proc.name=rancher-metadat and (container.image.repository contains\\\n    \\ \\\"rancher/metadata\\\" or container.image.repository contains \\\"rancher/lb-service-haproxy\\\"\\\n    ) and fd.name startswith \\\"/answers.json\\\")\"\n  append: false\n\n- macro: \"checkpoint_writing_state\"\n  condition: \"(proc.name=checkpoint and container.image.repository contains \\\"coreos/pod-checkpointer\\\"\\\n    \\ and fd.name startswith \\\"/etc/kubernetes\\\")\"\n  append: false\n\n- macro: \"jboss_in_container_writing_passwd\"\n  condition: \"((proc.cmdline=\\\"run-java.sh /opt/jboss/container/java/run/run-java.sh\\\"\\\n    \\n  or proc.cmdline=\\\"run-java.sh /opt/run-java/run-java.sh\\\")\\n and container\\n\\\n    \\ and fd.name=/etc/passwd)\\n\"\n  append: false\n\n- macro: \"curl_writing_pki_db\"\n  condition: \"(proc.name=curl and fd.directory=/etc/pki/nssdb)\"\n  append: false\n\n- macro: \"haproxy_writing_conf\"\n  condition: \"((proc.name in (update-haproxy-,haproxy_reload.) or proc.pname in (update-haproxy-,haproxy_reload,haproxy_reload.))\\\n    \\ and (fd.name=/etc/openvpn/client.map or fd.name startswith /etc/haproxy))\"\n  append: false\n\n- macro: \"java_writing_conf\"\n  condition: \"(proc.name=java and fd.name=/etc/.java/.systemPrefs/.system.lock)\"\n  append: false\n\n- macro: \"rabbitmq_writing_conf\"\n  condition: \"(proc.name=rabbitmq-server and fd.directory=/etc/rabbitmq)\"\n  append: false\n\n- macro: \"rook_writing_conf\"\n  condition: \"(proc.name=toolbox.sh and container.image.repository=rook/toolbox and\\\n    \\ fd.directory=/etc/ceph)\"\n  append: false\n\n- macro: \"httpd_writing_conf_logs\"\n  condition: \"(proc.name=httpd and fd.name startswith /etc/httpd/)\"\n  append: false\n\n- macro: \"mysql_writing_conf\"\n  condition: \"((proc.name in (start-mysql.sh, run-mysqld) or proc.pname=start-mysql.sh)\\\n    \\ and\\n (fd.name startswith /etc/mysql or fd.directory=/etc/my.cnf.d))\\n\"\n  append: false\n\n- macro: \"redis_writing_conf\"\n  condition: \"(proc.name in (run-redis, redis-launcher.) and fd.name=/etc/redis.conf\\\n    \\ or fd.name startswith /etc/redis)\\n\"\n  append: false\n\n- macro: \"openvpn_writing_conf\"\n  condition: \"(proc.name in (openvpn,openvpn-entrypo) and fd.name startswith /etc/openvpn)\"\n  append: false\n\n- macro: \"php_handlers_writing_conf\"\n  condition: \"(proc.name=php_handlers_co and fd.name=/etc/psa/php_versions.json)\"\n  append: false\n\n- macro: \"sed_writing_temp_file\"\n  condition: \"((proc.aname[3]=cron_start.sh and fd.name startswith /etc/security/sed)\\\n    \\ or\\n (proc.name=sed and (fd.name startswith /etc/apt/sources.list.d/sed or\\n\\\n    \\                     fd.name startswith /etc/apt/sed or\\n                   \\\n    \\  fd.name startswith /etc/apt/apt.conf.d/sed)))\\n\"\n  append: false\n\n- macro: \"cron_start_writing_pam_env\"\n  condition: \"(proc.cmdline=\\\"bash /usr/sbin/start-cron\\\" and fd.name=/etc/security/pam_env.conf)\"\n  append: false\n\n- macro: \"dpkg_scripting\"\n  condition: \"(proc.aname[2] in (dpkg-reconfigur, dpkg-preconfigu))\"\n  append: false\n\n- macro: \"ufw_writing_conf\"\n  condition: \"(proc.name=ufw and fd.directory=/etc/ufw)\"\n  append: false\n\n- macro: \"calico_writing_conf\"\n  condition: \"(proc.name = calico-node and fd.name startswith /etc/calico)\\n\"\n  append: false\n\n- macro: \"prometheus_conf_writing_conf\"\n  condition: \"(proc.name=prometheus-conf and fd.name startswith /etc/prometheus/config_out)\"\n  append: false\n\n- macro: \"openshift_writing_conf\"\n  condition: \"(proc.name=oc and fd.name startswith /etc/origin/node)\"\n  append: false\n\n- macro: \"keepalived_writing_conf\"\n  condition: \"(proc.name=keepalived and fd.name=/etc/keepalived/keepalived.conf)\"\n  append: false\n\n- macro: \"etcd_manager_updating_dns\"\n  condition: \"(container and proc.name=etcd-manager and fd.name=/etc/hosts)\"\n  append: false\n\n- macro: \"automount_using_mtab\"\n  condition: \"(proc.pname = automount and fd.name startswith /etc/mtab)\"\n  append: false\n\n- macro: \"mcafee_writing_cma_d\"\n  condition: \"(proc.name=macompatsvc and fd.directory=/etc/cma.d)\"\n  append: false\n\n- macro: \"avinetworks_supervisor_writing_ssh\"\n  condition: \"(proc.cmdline=\\\"se_supervisor.p /opt/avi/scripts/se_supervisor.py -d\\\"\\\n    \\ and\\n  (fd.name startswith /etc/ssh/known_host_ or\\n   fd.name startswith /etc/ssh/ssh_monitor_config_\\\n    \\ or\\n   fd.name startswith /etc/ssh/ssh_config_))\\n\"\n  append: false\n\n- macro: \"user_known_write_etc_conditions\"\n  condition: \"proc.name=confd\"\n  append: false\n\n- macro: \"user_known_write_below_etc_activities\"\n  condition: \"(never_true)\"\n  append: false\n\n- macro: \"write_etc_common\"\n  condition: \"etc_dir and evt.dir = < and open_write and proc_name_exists and not\\\n    \\ proc.name in (passwd_binaries, shadowutils_binaries, sysdigcloud_binaries,\\n\\\n    \\                      package_mgmt_binaries, ssl_mgmt_binaries, dhcp_binaries,\\n\\\n    \\                      dev_creation_binaries, shell_mgmt_binaries,\\n         \\\n    \\             mail_config_binaries,\\n                      sshkit_script_binaries,\\n\\\n    \\                      ldconfig.real, ldconfig, confd, gpg, insserv,\\n       \\\n    \\               apparmor_parser, update-mime, tzdata.config, tzdata.postinst,\\n\\\n    \\                      systemd, systemd-machine, systemd-sysuser,\\n          \\\n    \\            debconf-show, rollerd, bind9.postinst, sv,\\n                    \\\n    \\  gen_resolvconf., update-ca-certi, certbot, runsv,\\n                      qualys-cloud-ag,\\\n    \\ locales.postins, nomachine_binaries,\\n                      adclient, certutil,\\\n    \\ crlutil, pam-auth-update, parallels_insta,\\n                      openshift-launc,\\\n    \\ update-rc.d, puppet)\\nand not (container and proc.cmdline in (\\\"cp /run/secrets/kubernetes.io/serviceaccount/ca.crt\\\n    \\ /etc/pki/ca-trust/source/anchors/openshift-ca.crt\\\")) and not proc.pname in\\\n    \\ (sysdigcloud_binaries, mail_config_binaries, hddtemp.postins, sshkit_script_binaries,\\\n    \\ locales.postins, deb_binaries, dhcp_binaries) and not fd.name pmatch (safe_etc_dirs)\\\n    \\ and not fd.name in (/etc/container_environment.sh, /etc/container_environment.json,\\\n    \\ /etc/motd, /etc/motd.svc) and not sed_temporary_file and not exe_running_docker_save\\\n    \\ and not ansible_running_python and not python_running_denyhosts and not fluentd_writing_conf_files\\\n    \\ and not user_known_write_etc_conditions and not run_by_centrify and not run_by_adclient\\\n    \\ and not qualys_writing_conf_files and not git_writing_nssdb and not plesk_writing_keys\\\n    \\ and not plesk_install_writing_apache_conf and not plesk_running_mktemp and not\\\n    \\ networkmanager_writing_resolv_conf and not run_by_chef and not add_shell_writing_shells_tmp\\\n    \\ and not duply_writing_exclude_files and not xmlcatalog_writing_files and not\\\n    \\ parent_supervise_running_multilog and not supervise_writing_status and not pki_realm_writing_realms\\\n    \\ and not htpasswd_writing_passwd and not lvprogs_writing_conf and not ovsdb_writing_openvswitch\\\n    \\ and not datadog_writing_conf and not curl_writing_pki_db and not haproxy_writing_conf\\\n    \\ and not java_writing_conf and not dpkg_scripting and not parent_ucf_writing_conf\\\n    \\ and not rabbitmq_writing_conf and not rook_writing_conf and not php_handlers_writing_conf\\\n    \\ and not sed_writing_temp_file and not cron_start_writing_pam_env and not httpd_writing_conf_logs\\\n    \\ and not mysql_writing_conf and not openvpn_writing_conf and not consul_template_writing_conf\\\n    \\ and not countly_writing_nginx_conf and not ms_oms_writing_conf and not ms_scx_writing_conf\\\n    \\ and not azure_scripts_writing_conf and not azure_networkwatcher_writing_conf\\\n    \\ and not couchdb_writing_conf and not update_texmf_writing_conf and not slapadd_writing_conf\\\n    \\ and not symantec_writing_conf and not liveupdate_writing_conf and not sosreport_writing_files\\\n    \\ and not selinux_writing_conf and not veritas_writing_config and not nginx_writing_conf\\\n    \\ and not nginx_writing_certs and not chef_client_writing_conf and not centrify_writing_krb\\\n    \\ and not cockpit_writing_conf and not ipsec_writing_conf and not httpd_writing_ssl_conf\\\n    \\ and not userhelper_writing_etc_security and not pkgmgmt_progs_writing_pki and\\\n    \\ not update_ca_trust_writing_pki and not brandbot_writing_os_release and not\\\n    \\ redis_writing_conf and not openldap_writing_conf and not ucpagent_writing_conf\\\n    \\ and not iscsi_writing_conf and not istio_writing_conf and not ufw_writing_conf\\\n    \\ and not calico_writing_conf and not calico_writing_envvars and not prometheus_conf_writing_conf\\\n    \\ and not openshift_writing_conf and not keepalived_writing_conf and not rancher_writing_conf\\\n    \\ and not checkpoint_writing_state and not jboss_in_container_writing_passwd and\\\n    \\ not etcd_manager_updating_dns and not user_known_write_below_etc_activities\\\n    \\ and not automount_using_mtab and not mcafee_writing_cma_d and not avinetworks_supervisor_writing_ssh\\n\"\n  append: false\n\n- rule: \"Write below etc\"\n  desc: \"an attempt to write to any file below /etc\"\n  condition: \"write_etc_common\"\n  output: \"File below /etc opened for writing (user=%user.name command=%proc.cmdline\\\n    \\ parent=%proc.pname pcmdline=%proc.pcmdline file=%fd.name program=%proc.name\\\n    \\ gparent=%proc.aname[2] ggparent=%proc.aname[3] gggparent=%proc.aname[4] container_id=%container.id\\\n    \\ image=%container.image.repository)\"\n  priority: \"ERROR\"\n  tags:\n  - \"mitre_persistence\"\n  - \"NIST\"\n  - \"NIST_3.4.4\"\n  - \"filesystem\"\n  append: false\n\n- list: \"known_root_files\"\n  items:\n  - \"/root/.monit.state\"\n  - \"/root/.auth_tokens\"\n  - \"/root/.bash_history\"\n  - \"/root/.ash_history\"\n  - \"/root/.aws/credentials\"\n  - \"/root/.viminfo.tmp\"\n  - \"/root/.lesshst\"\n  - \"/root/.bzr.log\"\n  - \"/root/.gitconfig.lock\"\n  - \"/root/.babel.json\"\n  - \"/root/.localstack\"\n  - \"/root/.node_repl_history\"\n  - \"/root/.mongorc.js\"\n  - \"/root/.dbshell\"\n  - \"/root/.augeas/history\"\n  - \"/root/.rnd\"\n  - \"/root/.wget-hsts\"\n  - \"/health\"\n  - \"/exec.fifo\"\n  append: false\n\n- list: \"known_root_directories\"\n  items:\n  - \"/root/.oracle_jre_usage\"\n  - \"/root/.ssh\"\n  - \"/root/.subversion\"\n  - \"/root/.nami\"\n  append: false\n\n- macro: \"known_root_conditions\"\n  condition: \"(fd.name startswith /root/orcexec. or fd.name startswith /root/.m2 or\\\n    \\ fd.name startswith /root/.npm or fd.name startswith /root/.pki or fd.name startswith\\\n    \\ /root/.ivy2 or fd.name startswith /root/.config/Cypress or fd.name startswith\\\n    \\ /root/.config/pulse or fd.name startswith /root/.config/configstore or fd.name\\\n    \\ startswith /root/jenkins/workspace or fd.name startswith /root/.jenkins or fd.name\\\n    \\ startswith /root/.cache or fd.name startswith /root/.sbt or fd.name startswith\\\n    \\ /root/.java or fd.name startswith /root/.glide or fd.name startswith /root/.sonar\\\n    \\ or fd.name startswith /root/.v8flag or fd.name startswith /root/infaagent or\\\n    \\ fd.name startswith /root/.local/lib/python or fd.name startswith /root/.pm2\\\n    \\ or fd.name startswith /root/.gnupg or fd.name startswith /root/.pgpass or fd.name\\\n    \\ startswith /root/.theano or fd.name startswith /root/.gradle or fd.name startswith\\\n    \\ /root/.android or fd.name startswith /root/.ansible or fd.name startswith /root/.crashlytics\\\n    \\ or fd.name startswith /root/.dbus or fd.name startswith /root/.composer or fd.name\\\n    \\ startswith /root/.gconf or fd.name startswith /root/.nv or fd.name startswith\\\n    \\ /root/.local/share/jupyter or fd.name startswith /root/oradiag_root or fd.name\\\n    \\ startswith /root/workspace or fd.name startswith /root/jvm or fd.name startswith\\\n    \\ /root/.node-gyp)\"\n  append: false\n\n- macro: \"user_known_write_root_conditions\"\n  condition: \"fd.name=/root/.bash_history\"\n  append: false\n\n- macro: \"user_known_write_below_root_activities\"\n  condition: \"(never_true)\"\n  append: false\n\n- macro: \"runc_writing_exec_fifo\"\n  condition: \"(proc.cmdline=\\\"runc:[1:CHILD] init\\\" and fd.name=/exec.fifo)\"\n  append: false\n\n- rule: \"Write below root\"\n  desc: \"an attempt to write to any file directly below / or /root\"\n  condition: \"root_dir and evt.dir = < and open_write and not fd.name in (known_root_files)\\\n    \\ and not fd.directory pmatch (known_root_directories) and not exe_running_docker_save\\\n    \\ and not gugent_writing_guestagent_log and not dse_writing_tmp and not zap_writing_state\\\n    \\ and not airflow_writing_state and not rpm_writing_root_rpmdb and not maven_writing_groovy\\\n    \\ and not chef_writing_conf and not kubectl_writing_state and not cassandra_writing_state\\\n    \\ and not galley_writing_state and not calico_writing_state and not rancher_writing_root\\\n    \\ and not runc_writing_exec_fifo and not known_root_conditions and not user_known_write_root_conditions\\\n    \\ and not user_known_write_below_root_activities\\n\"\n  output: \"File below / or /root opened for writing (user=%user.name command=%proc.cmdline\\\n    \\ parent=%proc.pname file=%fd.name program=%proc.name container_id=%container.id\\\n    \\ image=%container.image.repository)\"\n  priority: \"ERROR\"\n  tags:\n  - \"mitre_persistence\"\n  - \"NIST\"\n  - \"NIST_3.4.4\"\n  - \"filesystem\"\n  append: false\n\n- macro: \"cmp_cp_by_passwd\"\n  condition: \"proc.name in (cmp, cp) and proc.pname in (passwd, run-parts)\"\n  append: false\n\n- rule: \"Read sensitive file trusted after startup\"\n  desc: \"an attempt to read any sensitive file (e.g. files containing user/password/authentication\\\n    \\ information) by a trusted program after startup. Trusted programs might read\\\n    \\ these files at startup to load initial state, but not afterwards.\\n\"\n  condition: \"sensitive_files and open_read and server_procs and not proc_is_new and\\\n    \\ proc.name!=\\\"sshd\\\"\"\n  output: \"Sensitive file opened for reading by trusted program after startup (user=%user.name\\\n    \\ command=%proc.cmdline parent=%proc.pname file=%fd.name parent=%proc.pname gparent=%proc.aname[2]\\\n    \\ container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"WARNING\"\n  tags:\n  - \"mitre_credential_access\"\n  - \"filesystem\"\n  append: false\n\n- list: \"read_sensitive_file_binaries\"\n  items:\n  - \"iptables\"\n  - \"ps\"\n  - \"lsb_release\"\n  - \"check-new-relea\"\n  - \"dumpe2fs\"\n  - \"accounts-daemon\"\n  - \"sshd\"\n  - \"vsftpd\"\n  - \"systemd\"\n  - \"mysql_install_d\"\n  - \"psql\"\n  - \"screen\"\n  - \"debconf-show\"\n  - \"sa-update\"\n  - \"pam-auth-update\"\n  - \"pam-config\"\n  - \"/usr/sbin/spamd\"\n  - \"polkit-agent-he\"\n  - \"lsattr\"\n  - \"file\"\n  - \"sosreport\"\n  - \"scxcimservera\"\n  - \"adclient\"\n  - \"rtvscand\"\n  - \"cockpit-session\"\n  - \"userhelper\"\n  - \"ossec-syscheckd\"\n  append: false\n\n- macro: \"user_read_sensitive_file_conditions\"\n  condition: \"cmp_cp_by_passwd\"\n  append: false\n\n- rule: \"Read sensitive file untrusted\"\n  desc: \"an attempt to read any sensitive file (e.g. files containing user/password/authentication\\\n    \\ information). Exceptions are made for known trusted programs.\\n\"\n  condition: \"sensitive_files and open_read and proc_name_exists and not proc.name\\\n    \\ in (user_mgmt_binaries, userexec_binaries, package_mgmt_binaries,\\n cron_binaries,\\\n    \\ read_sensitive_file_binaries, shell_binaries, hids_binaries,\\n vpn_binaries,\\\n    \\ mail_config_binaries, nomachine_binaries, sshkit_script_binaries,\\n in.proftpd,\\\n    \\ mandb, salt-minion, postgres_mgmt_binaries)\\nand not cmp_cp_by_passwd and not\\\n    \\ ansible_running_python and not proc.cmdline contains /usr/bin/mandb and not\\\n    \\ run_by_qualys and not run_by_chef and not run_by_google_accounts_daemon and\\\n    \\ not user_read_sensitive_file_conditions and not perl_running_plesk and not perl_running_updmap\\\n    \\ and not veritas_driver_script and not perl_running_centrifydc and not runuser_reading_pam\\n\"\n  output: \"Sensitive file opened for reading by non-trusted program (user=%user.name\\\n    \\ program=%proc.name command=%proc.cmdline file=%fd.name parent=%proc.pname gparent=%proc.aname[2]\\\n    \\ ggparent=%proc.aname[3] gggparent=%proc.aname[4] container_id=%container.id\\\n    \\ image=%container.image.repository)\\n\"\n  priority: \"WARNING\"\n  tags:\n  - \"mitre_credential_access\"\n  - \"NIST\"\n  - \"mitre_discovery\"\n  - \"NIST_3.4.4\"\n  - \"filesystem\"\n  append: false\n\n- macro: \"amazon_linux_running_python_yum\"\n  condition: \"(proc.name = python and\\n proc.pcmdline = \\\"python -m amazon_linux_extras\\\n    \\ system_motd\\\" and\\n proc.cmdline startswith \\\"python -c import yum;\\\")\\n\"\n  append: false\n\n- rule: \"Write below rpm database\"\n  desc: \"an attempt to write to the rpm database by any non-rpm related program\"\n  condition: \"fd.name startswith /var/lib/rpm and open_write and not rpm_procs and\\\n    \\ not ansible_running_python and not python_running_chef and not exe_running_docker_save\\\n    \\ and not amazon_linux_running_python_yum\\n\"\n  output: \"Rpm database opened for writing by a non-rpm program (command=%proc.cmdline\\\n    \\ file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline container_id=%container.id\\\n    \\ image=%container.image.repository)\"\n  priority: \"ERROR\"\n  tags:\n  - \"mitre_persistence\"\n  - \"software_mgmt\"\n  - \"filesystem\"\n  append: false\n\n- macro: \"postgres_running_wal_e\"\n  condition: \"(proc.pname=postgres and proc.cmdline startswith \\\"sh -c envdir /etc/wal-e.d/env\\\n    \\ /usr/local/bin/wal-e\\\")\"\n  append: false\n\n- macro: \"redis_running_prepost_scripts\"\n  condition: \"(proc.aname[2]=redis-server and (proc.cmdline contains \\\"redis-server.post-up.d\\\"\\\n    \\ or proc.cmdline contains \\\"redis-server.pre-up.d\\\"))\"\n  append: false\n\n- macro: \"rabbitmq_running_scripts\"\n  condition: \"(proc.pname=beam.smp and (proc.cmdline startswith \\\"sh -c exec ps\\\"\\\n    \\ or\\n proc.cmdline startswith \\\"sh -c exec inet_gethost\\\" or\\n proc.cmdline=\\\n    \\ \\\"sh -s unix:cmd\\\" or\\n proc.cmdline= \\\"sh -c exec /bin/sh -s unix:cmd 2>&1\\\"\\\n    ))\\n\"\n  append: false\n\n- macro: \"rabbitmqctl_running_scripts\"\n  condition: \"(proc.aname[2]=rabbitmqctl and proc.cmdline startswith \\\"sh -c \\\")\"\n  append: false\n\n- macro: \"run_by_appdynamics\"\n  condition: \"(proc.pname=java and proc.pcmdline startswith \\\"java -jar -Dappdynamics\\\"\\\n    )\"\n  append: false\n\n- rule: \"DB program spawned process\"\n  desc: \"a database-server related program spawned a new process other than itself.\\\n    \\ This shouldn\\\\\'t occur and is a follow on from some SQL injection attacks.\\n\"\n  condition: \"proc.pname in (db_server_binaries) and spawned_process and not proc.name\\\n    \\ in (db_server_binaries) and not postgres_running_wal_e\\n\"\n  output: \"Database-related program spawned process other than itself (user=%user.name\\\n    \\ program=%proc.cmdline parent=%proc.pname container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"process\"\n  - \"database\"\n  - \"mitre_execution\"\n  - \"PCI\"\n  - \"PCI_DSS_6.5.1\"\n  append: false\n\n- rule: \"Modify binary dirs\"\n  desc: \"an attempt to modify any file below a set of binary directories.\"\n  condition: \"(bin_dir_rename) and modify and not package_mgmt_procs and not exe_running_docker_save\"\n  output: \"File below known binary directory renamed/removed (user=%user.name command=%proc.cmdline\\\n    \\ pcmdline=%proc.pcmdline operation=%evt.type file=%fd.name %evt.args container_id=%container.id\\\n    \\ image=%container.image.repository)\\n\"\n  priority: \"ERROR\"\n  tags:\n  - \"mitre_persistence\"\n  - \"PCI\"\n  - \"NIST\"\n  - \"PCI_DSS_10.2.7\"\n  - \"NIST_3.4.4\"\n  - \"filesystem\"\n  append: false\n\n- rule: \"Mkdir binary dirs\"\n  desc: \"an attempt to create a directory below a set of binary directories.\"\n  condition: \"mkdir and bin_dir_mkdir and not package_mgmt_procs\"\n  output: \"Directory below known binary directory created (user=%user.name command=%proc.cmdline\\\n    \\ directory=%evt.arg.path container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"ERROR\"\n  tags:\n  - \"mitre_persistence\"\n  - \"PCI\"\n  - \"NIST\"\n  - \"PCI_DSS_10.2.7\"\n  - \"NIST_3.4.4\"\n  - \"filesystem\"\n  append: false\n\n- list: \"user_known_change_thread_namespace_binaries\"\n  items: []\n  append: false\n\n- macro: \"user_known_change_thread_namespace_activities\"\n  condition: \"(never_true)\"\n  append: false\n\n- list: \"network_plugin_binaries\"\n  items:\n  - \"aws-cni\"\n  - \"azure-vnet\"\n  append: false\n\n- macro: \"calico_node\"\n  condition: \"(container.image.repository endswith calico/node and proc.name=calico-node)\"\n  append: false\n\n- macro: \"weaveworks_scope\"\n  condition: \"(container.image.repository endswith weaveworks/scope and proc.name=scope)\"\n  append: false\n\n- rule: \"Change thread namespace\"\n  desc: \"an attempt to change a program/thread\\\\\'s namespace (commonly done as a part\\\n    \\ of creating a container) by calling setns.\\n\"\n  condition: \"evt.type=setns and evt.dir=< and not (container.id=host and proc.name\\\n    \\ in (docker_binaries, k8s_binaries, lxd_binaries, nsenter)) and not proc.name\\\n    \\ in (sysdigcloud_binaries, sysdig, calico, oci-umount, cilium-cni, network_plugin_binaries)\\\n    \\ and not proc.name in (user_known_change_thread_namespace_binaries) and not proc.name\\\n    \\ startswith \\\"runc\\\" and not proc.cmdline startswith \\\"containerd\\\" and not proc.pname\\\n    \\ in (sysdigcloud_binaries, hyperkube, kubelet) and not python_running_sdchecks\\\n    \\ and not java_running_sdjagent and not kubelet_running_loopback and not rancher_agent\\\n    \\ and not rancher_network_manager and not calico_node and not weaveworks_scope\\\n    \\ and not user_known_change_thread_namespace_activities\\n\"\n  output: \"Namespace change (setns) by unexpected program (user=%user.name command=%proc.cmdline\\\n    \\ parent=%proc.pname %container.info container_id=%container.id image=%container.image.repository:%container.image.tag)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"process\"\n  - \"mitre_lateral_movement\"\n  - \"PCI\"\n  - \"mitre_privilege_escalation\"\n  - \"PCI_DSS_2.6\"\n  append: false\n\n- list: \"protected_shell_spawning_binaries\"\n  items:\n  - \"http_server_binaries\"\n  - \"db_server_binaries\"\n  - \"nosql_server_binaries\"\n  - \"mail_binaries\"\n  - \"fluentd\"\n  - \"flanneld\"\n  - \"splunkd\"\n  - \"consul\"\n  - \"smbd\"\n  - \"runsv\"\n  - \"PM2\"\n  append: false\n\n- macro: \"parent_java_running_zookeeper\"\n  condition: \"(proc.pname=java and proc.pcmdline contains org.apache.zookeeper.server)\"\n  append: false\n\n- macro: \"parent_java_running_kafka\"\n  condition: \"(proc.pname=java and proc.pcmdline contains kafka.Kafka)\"\n  append: false\n\n- macro: \"parent_java_running_elasticsearch\"\n  condition: \"(proc.pname=java and proc.pcmdline contains org.elasticsearch.bootstrap.Elasticsearch)\"\n  append: false\n\n- macro: \"parent_java_running_activemq\"\n  condition: \"(proc.pname=java and proc.pcmdline contains activemq.jar)\"\n  append: false\n\n- macro: \"parent_java_running_cassandra\"\n  condition: \"(proc.pname=java and (proc.pcmdline contains \\\"-Dcassandra.config.loader\\\"\\\n    \\ or proc.pcmdline contains org.apache.cassandra.service.CassandraDaemon))\"\n  append: false\n\n- macro: \"parent_java_running_jboss_wildfly\"\n  condition: \"(proc.pname=java and proc.pcmdline contains org.jboss)\"\n  append: false\n\n- macro: \"parent_java_running_glassfish\"\n  condition: \"(proc.pname=java and proc.pcmdline contains com.sun.enterprise.glassfish)\"\n  append: false\n\n- macro: \"parent_java_running_hadoop\"\n  condition: \"(proc.pname=java and proc.pcmdline contains org.apache.hadoop)\"\n  append: false\n\n- macro: \"parent_java_running_datastax\"\n  condition: \"(proc.pname=java and proc.pcmdline contains com.datastax)\"\n  append: false\n\n- macro: \"nginx_starting_nginx\"\n  condition: \"(proc.pname=nginx and proc.cmdline contains \\\"/usr/sbin/nginx -c /etc/nginx/nginx.conf\\\"\\\n    )\"\n  append: false\n\n- macro: \"nginx_running_aws_s3_cp\"\n  condition: \"(proc.pname=nginx and proc.cmdline startswith \\\"sh -c /usr/local/bin/aws\\\n    \\ s3 cp\\\")\"\n  append: false\n\n- macro: \"consul_running_net_scripts\"\n  condition: \"(proc.pname=consul and (proc.cmdline startswith \\\"sh -c curl\\\" or proc.cmdline\\\n    \\ startswith \\\"sh -c nc\\\"))\"\n  append: false\n\n- macro: \"consul_running_alert_checks\"\n  condition: \"(proc.pname=consul and proc.cmdline startswith \\\"sh -c /bin/consul-alerts\\\"\\\n    )\"\n  append: false\n\n- macro: \"serf_script\"\n  condition: \"(proc.cmdline startswith \\\"sh -c serf\\\")\"\n  append: false\n\n- macro: \"check_process_status\"\n  condition: \"(proc.cmdline startswith \\\"sh -c kill -0 \\\")\"\n  append: false\n\n- macro: \"possibly_node_in_container\"\n  condition: \"(never_true and (proc.pname=node and proc.aname[3]=docker-containe))\"\n  append: false\n\n- macro: \"possibly_parent_java_running_tomcat\"\n  condition: \"(never_true and proc.pname=java and proc.pcmdline contains org.apache.catalina.startup.Bootstrap)\"\n  append: false\n\n- macro: \"protected_shell_spawner\"\n  condition: \"(proc.aname in (protected_shell_spawning_binaries) or parent_java_running_zookeeper\\\n    \\ or parent_java_running_kafka or parent_java_running_elasticsearch or parent_java_running_activemq\\\n    \\ or parent_java_running_cassandra or parent_java_running_jboss_wildfly or parent_java_running_glassfish\\\n    \\ or parent_java_running_hadoop or parent_java_running_datastax or possibly_parent_java_running_tomcat\\\n    \\ or possibly_node_in_container)\\n\"\n  append: false\n\n- list: \"mesos_shell_binaries\"\n  items:\n  - \"mesos-docker-ex\"\n  - \"mesos-slave\"\n  - \"mesos-health-ch\"\n  append: false\n\n- rule: \"Run shell untrusted\"\n  desc: \"an attempt to spawn a shell below a non-shell application. Specific applications\\\n    \\ are monitored.\"\n  condition: \"spawned_process and shell_procs and proc.pname exists and protected_shell_spawner\\\n    \\ and not proc.pname in (shell_binaries, gitlab_binaries, cron_binaries, user_known_shell_spawn_binaries,\\n\\\n    \\                       needrestart_binaries,\\n                       mesos_shell_binaries,\\n\\\n    \\                       erl_child_setup, exechealthz,\\n                      \\\n    \\ PM2, PassengerWatchd, c_rehash, svlogd, logrotate, hhvm, serf,\\n           \\\n    \\            lb-controller, nvidia-installe, runsv, statsite, erlexec, calico-node,\\n\\\n    \\                       \\\"puma reactor\\\")\\nand not proc.cmdline in (known_shell_spawn_cmdlines)\\\n    \\ and not proc.aname in (unicorn_launche) and not consul_running_net_scripts and\\\n    \\ not consul_running_alert_checks and not nginx_starting_nginx and not nginx_running_aws_s3_cp\\\n    \\ and not run_by_package_mgmt_binaries and not serf_script and not check_process_status\\\n    \\ and not run_by_foreman and not python_mesos_marathon_scripting and not splunk_running_forwarder\\\n    \\ and not postgres_running_wal_e and not redis_running_prepost_scripts and not\\\n    \\ rabbitmq_running_scripts and not rabbitmqctl_running_scripts and not run_by_appdynamics\\\n    \\ and not user_shell_container_exclusions\\n\"\n  output: \"Shell spawned by untrusted binary (user=%user.name shell=%proc.name parent=%proc.pname\\\n    \\ cmdline=%proc.cmdline pcmdline=%proc.pcmdline gparent=%proc.aname[2] ggparent=%proc.aname[3]\\\n    \\ aname[4]=%proc.aname[4] aname[5]=%proc.aname[5] aname[6]=%proc.aname[6] aname[7]=%proc.aname[7]\\\n    \\ container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"DEBUG\"\n  tags:\n  - \"shell\"\n  - \"mitre_execution\"\n  append: false\n\n- macro: \"allowed_openshift_registry_root\"\n  condition: \"(container.image.repository startswith openshift3/ or\\n container.image.repository\\\n    \\ startswith registry.redhat.io/openshift3/ or\\n container.image.repository startswith\\\n    \\ registry.access.redhat.com/openshift3/)\\n\"\n  append: false\n\n- macro: \"openshift_image\"\n  condition: \"(allowed_openshift_registry_root and\\n  (container.image.repository\\\n    \\ endswith /logging-deployment or\\n   container.image.repository endswith /logging-elasticsearch\\\n    \\ or\\n   container.image.repository endswith /logging-kibana or\\n   container.image.repository\\\n    \\ endswith /logging-fluentd or\\n   container.image.repository endswith /logging-auth-proxy\\\n    \\ or\\n   container.image.repository endswith /metrics-deployer or\\n   container.image.repository\\\n    \\ endswith /metrics-hawkular-metrics or\\n   container.image.repository endswith\\\n    \\ /metrics-cassandra or\\n   container.image.repository endswith /metrics-heapster\\\n    \\ or\\n   container.image.repository endswith /ose-haproxy-router or\\n   container.image.repository\\\n    \\ endswith /ose-deployer or\\n   container.image.repository endswith /ose-sti-builder\\\n    \\ or\\n   container.image.repository endswith /ose-docker-builder or\\n   container.image.repository\\\n    \\ endswith /ose-pod or\\n   container.image.repository endswith /ose-node or\\n\\\n    \\   container.image.repository endswith /ose-docker-registry or\\n   container.image.repository\\\n    \\ endswith /prometheus-node-exporter or\\n   container.image.repository endswith\\\n    \\ /image-inspector))\\n\"\n  append: false\n\n- list: \"trusted_images\"\n  items: []\n  append: false\n\n- macro: \"trusted_containers\"\n  condition: \"(container.image.repository in (trusted_images))\"\n  append: false\n\n- macro: \"user_trusted_containers\"\n  condition: \"(container.image.repository endswith sysdig/agent)\"\n  append: false\n\n- list: \"sematext_images\"\n  items:\n  - \"docker.io/sematext/sematext-agent-docker\"\n  - \"docker.io/sematext/agent\"\n  - \"docker.io/sematext/logagent\"\n  - \"registry.access.redhat.com/sematext/sematext-agent-docker\"\n  - \"registry.access.redhat.com/sematext/agent\"\n  - \"registry.access.redhat.com/sematext/logagent\"\n  append: false\n\n- list: \"falco_privileged_images\"\n  items:\n  - \"docker.io/sysdig/agent\"\n  - \"docker.io/sysdig/falco\"\n  - \"docker.io/sysdig/sysdig\"\n  - \"gcr.io/google_containers/kube-proxy\"\n  - \"docker.io/calico/node\"\n  - \"quay.io/calico/node\"\n  - \"docker.io/rook/toolbox\"\n  - \"docker.io/cloudnativelabs/kube-router\"\n  - \"docker.io/mesosphere/mesos-slave\"\n  - \"docker.io/docker/ucp-agent\"\n  - \"sematext_images\"\n  - \"k8s.gcr.io/kube-proxy\"\n  append: false\n\n- macro: \"falco_privileged_containers\"\n  condition: \"(openshift_image or user_trusted_containers or container.image.repository\\\n    \\ in (trusted_images) or container.image.repository in (falco_privileged_images)\\\n    \\ or container.image.repository startswith istio/proxy_ or container.image.repository\\\n    \\ startswith quay.io/sysdig)\"\n  append: false\n\n- macro: \"user_privileged_containers\"\n  condition: \"(container.image.repository endswith sysdig/agent)\"\n  append: false\n\n- list: \"rancher_images\"\n  items:\n  - \"rancher/network-manager\"\n  - \"rancher/dns\"\n  - \"rancher/agent\"\n  - \"rancher/lb-service-haproxy\"\n  - \"rancher/metadata\"\n  - \"rancher/healthcheck\"\n  append: false\n\n- list: \"falco_sensitive_mount_images\"\n  items:\n  - \"docker.io/sysdig/agent\"\n  - \"docker.io/sysdig/falco\"\n  - \"docker.io/sysdig/sysdig\"\n  - \"gcr.io/google_containers/hyperkube\"\n  - \"gcr.io/google_containers/kube-proxy\"\n  - \"docker.io/calico/node\"\n  - \"docker.io/rook/toolbox\"\n  - \"docker.io/cloudnativelabs/kube-router\"\n  - \"docker.io/consul\"\n  - \"docker.io/datadog/docker-dd-agent\"\n  - \"docker.io/datadog/agent\"\n  - \"docker.io/docker/ucp-agent\"\n  - \"docker.io/gliderlabs/logspout\"\n  - \"docker.io/netdata/netdata\"\n  - \"docker.io/google/cadvisor\"\n  - \"docker.io/prom/node-exporter\"\n  - \"amazon/amazon-ecs-agent\"\n  append: false\n\n- macro: \"falco_sensitive_mount_containers\"\n  condition: \"(user_trusted_containers or container.image.repository in (trusted_images)\\\n    \\ or container.image.repository in (falco_sensitive_mount_images) or container.image.repository\\\n    \\ startswith quay.io/sysdig)\"\n  append: false\n\n- list: \"falco_hostnetwork_images\"\n  items: []\n  append: false\n\n- macro: \"user_sensitive_mount_containers\"\n  condition: \"(container.image.repository = docker.io/sysdig/agent)\"\n  append: false\n\n- rule: \"Launch Privileged Container\"\n  desc: \"Detect the initial process started in a privileged container. Exceptions\\\n    \\ are made for known trusted images.\"\n  condition: \"container_started and container and container.privileged=true and not\\\n    \\ falco_privileged_containers and not user_privileged_containers\\n\"\n  output: \"Privileged container started (user=%user.name command=%proc.cmdline %container.info\\\n    \\ image=%container.image.repository:%container.image.tag)\"\n  priority: \"INFO\"\n  tags:\n  - \"container\"\n  - \"PCI_DSS_10.2.5\"\n  - \"mitre_lateral_movement\"\n  - \"PCI\"\n  - \"NIST\"\n  - \"NIST_3.4.3\"\n  - \"cis\"\n  - \"mitre_privilege_escalation\"\n  append: false\n\n- macro: \"sensitive_mount\"\n  condition: \"(container.mount.dest[/proc*] != \\\"N/A\\\" or container.mount.dest[/var/run/docker.sock]\\\n    \\ != \\\"N/A\\\" or container.mount.dest[/var/run/crio/crio.sock] != \\\"N/A\\\" or container.mount.dest[/var/lib/kubelet]\\\n    \\ != \\\"N/A\\\" or container.mount.dest[/var/lib/kubelet/pki] != \\\"N/A\\\" or container.mount.dest[/]\\\n    \\ != \\\"N/A\\\" or container.mount.dest[/home/admin] != \\\"N/A\\\" or container.mount.dest[/etc]\\\n    \\ != \\\"N/A\\\" or container.mount.dest[/etc/kubernetes] != \\\"N/A\\\" or container.mount.dest[/etc/kubernetes/manifests]\\\n    \\ != \\\"N/A\\\" or container.mount.dest[/root*] != \\\"N/A\\\")\"\n  append: false\n\n- macro: \"container_entrypoint\"\n  condition: \"(not proc.pname exists or proc.pname in (runc:[0:PARENT], runc:[1:CHILD],\\\n    \\ runc, docker-runc, exe, docker-runc-cur))\"\n  append: false\n\n- rule: \"Launch Sensitive Mount Container\"\n  desc: \"Detect the initial process started by a container that has a mount from a\\\n    \\ sensitive host directory (i.e. /proc). Exceptions are made for known trusted\\\n    \\ images.\\n\"\n  condition: \"container_started and container and sensitive_mount and not falco_sensitive_mount_containers\\\n    \\ and not user_sensitive_mount_containers\\n\"\n  output: \"Container with sensitive mount started (user=%user.name command=%proc.cmdline\\\n    \\ %container.info image=%container.image.repository:%container.image.tag mounts=%container.mounts)\"\n  priority: \"INFO\"\n  tags:\n  - \"container\"\n  - \"mitre_lateral_movement\"\n  - \"NIST\"\n  - \"NIST_3.4.3\"\n  - \"cis\"\n  - \"NIST_3.5.5\"\n  append: false\n\n- macro: \"allowed_containers\"\n  condition: \"(container.id exists)\"\n  append: false\n\n- rule: \"Launch Disallowed Container\"\n  desc: \"Detect the initial process started by a container that is not in a list of\\\n    \\ allowed containers.\\n\"\n  condition: \"container_started and container and not allowed_containers\"\n  output: \"Container started and not in allowed list (user=%user.name command=%proc.cmdline\\\n    \\ %container.info image=%container.image.repository:%container.image.tag)\"\n  priority: \"WARNING\"\n  tags:\n  - \"container\"\n  - \"mitre_lateral_movement\"\n  - \"NIST\"\n  - \"NIST_3.4.5\"\n  append: false\n\n- rule: \"System user interactive\"\n  desc: \"an attempt to run interactive commands by a system (i.e. non-login) user\"\n  condition: \"spawned_process and system_users and interactive\"\n  output: \"System user ran an interactive command (user=%user.name command=%proc.cmdline\\\n    \\ container_id=%container.id image=%container.image.repository)\"\n  priority: \"INFO\"\n  tags:\n  - \"mitre_remote_access_tools\"\n  - \"users\"\n  append: false\n\n- rule: \"Terminal shell in container\"\n  desc: \"A shell was used as the entrypoint/exec point into a container with an attached\\\n    \\ terminal.\"\n  condition: \"spawned_process and container and shell_procs and proc.tty != 0 and\\\n    \\ container_entrypoint\\n\"\n  output: \"A shell was spawned in a container with an attached terminal (user=%user.name\\\n    \\ %container.info shell=%proc.name parent=%proc.pname cmdline=%proc.cmdline terminal=%proc.tty\\\n    \\ container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"container\"\n  - \"PCI_DSS_10.2.1\"\n  - \"shell\"\n  - \"mitre_execution\"\n  - \"PCI\"\n  - \"PCI_DSS_10.1\"\n  append: false\n\n- list: \"known_shell_spawn_cmdlines\"\n  items:\n  - \"\\\"sh -c uname -p 2> /dev/null\\\"\"\n  - \"\\\"sh -c uname -s 2>&1\\\"\"\n  - \"\\\"sh -c uname -r 2>&1\\\"\"\n  - \"\\\"sh -c uname -v 2>&1\\\"\"\n  - \"\\\"sh -c uname -a 2>&1\\\"\"\n  - \"\\\"sh -c ruby -v 2>&1\\\"\"\n  - \"\\\"sh -c getconf CLK_TCK\\\"\"\n  - \"\\\"sh -c getconf PAGESIZE\\\"\"\n  - \"\\\"sh -c LC_ALL=C LANG=C /sbin/ldconfig -p 2>/dev/null\\\"\"\n  - \"\\\"sh -c LANG=C /sbin/ldconfig -p 2>/dev/null\\\"\"\n  - \"\\\"sh -c /sbin/ldconfig -p 2>/dev/null\\\"\"\n  - \"\\\"sh -c stty -a 2>/dev/null\\\"\"\n  - \"\\\"sh -c stty -a < /dev/tty\\\"\"\n  - \"\\\"sh -c stty -g < /dev/tty\\\"\"\n  - \"\\\"sh -c node index.js\\\"\"\n  - \"\\\"sh -c node index\\\"\"\n  - \"\\\"sh -c node ./src/start.js\\\"\"\n  - \"\\\"sh -c node app.js\\\"\"\n  - \"\\\"sh -c node -e \\\\\\\"require(\'nan\')\\\\\\\"\\\"\"\n  - \"\\\"sh -c node -e \\\\\\\"require(\'nan\')\\\\\\\")\\\"\"\n  - \"\\\"sh -c node $NODE_DEBUG_OPTION index.js \\\"\"\n  - \"\\\"sh -c crontab -l 2\\\"\"\n  - \"\\\"sh -c lsb_release -a\\\"\"\n  - \"\\\"sh -c lsb_release -is 2>/dev/null\\\"\"\n  - \"\\\"sh -c whoami\\\"\"\n  - \"\\\"sh -c node_modules/.bin/bower-installer\\\"\"\n  - \"\\\"sh -c /bin/hostname -f 2> /dev/null\\\"\"\n  - \"\\\"sh -c locale -a\\\"\"\n  - \"\\\"sh -c  -t -i\\\"\"\n  - \"\\\"sh -c openssl version\\\"\"\n  - \"\\\"bash -c id -Gn kafadmin\\\"\"\n  - \"\\\"sh -c /bin/sh -c \'date +%%s\'\\\"\"\n  append: false\n\n- list: \"user_known_shell_spawn_binaries\"\n  items: []\n  append: false\n\n- macro: \"user_shell_container_exclusions\"\n  condition: \"(never_true)\"\n  append: false\n\n- macro: \"login_doing_dns_lookup\"\n  condition: \"(proc.name=login and fd.l4proto=udp and fd.sport=53)\"\n  append: false\n\n- rule: \"System procs network activity\"\n  desc: \"any network activity performed by system binaries that are not expected to\\\n    \\ send or receive any network traffic\"\n  condition: \"(fd.sockfamily = ip and (system_procs or proc.name in (shell_binaries)))\\\n    \\ and (inbound_outbound) and not proc.name in (known_system_procs_network_activity_binaries)\\\n    \\ and not login_doing_dns_lookup and not user_expected_system_procs_network_activity_conditions\\n\"\n  output: \"Known system binary sent/received network traffic (user=%user.name command=%proc.cmdline\\\n    \\ connection=%fd.name container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"mitre_exfiltration\"\n  - \"network\"\n  append: false\n\n- list: \"known_system_procs_network_activity_binaries\"\n  items:\n  - \"systemd\"\n  - \"hostid\"\n  - \"id\"\n  append: false\n\n- macro: \"user_expected_system_procs_network_activity_conditions\"\n  condition: \"(never_true)\"\n  append: false\n\n- macro: \"allowed_ssh_proxy_env\"\n  condition: \"(always_true)\"\n  append: false\n\n- list: \"http_proxy_binaries\"\n  items:\n  - \"curl\"\n  - \"wget\"\n  append: false\n\n- macro: \"http_proxy_procs\"\n  condition: \"(proc.name in (http_proxy_binaries))\"\n  append: false\n\n- rule: \"Program run with disallowed http proxy env\"\n  desc: \"An attempt to run a program with a disallowed HTTP_PROXY environment variable\"\n  condition: \"spawned_process and http_proxy_procs and not allowed_ssh_proxy_env and\\\n    \\ proc.env icontains HTTP_PROXY\\n\"\n  output: \"Program run with disallowed HTTP_PROXY environment variable (user=%user.name\\\n    \\ command=%proc.cmdline env=%proc.env parent=%proc.pname container_id=%container.id\\\n    \\ image=%container.image.repository)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"host\"\n  - \"users\"\n  append: false\n\n- macro: \"consider_interpreted_inbound\"\n  condition: \"(never_true)\"\n  append: false\n\n- macro: \"consider_interpreted_outbound\"\n  condition: \"(never_true)\"\n  append: false\n\n- rule: \"Interpreted procs inbound network activity\"\n  desc: \"Any inbound network activity performed by any interpreted program (perl,\\\n    \\ python, ruby, etc.)\"\n  condition: \"(inbound and consider_interpreted_inbound\\n and interpreted_procs)\\n\"\n  output: \"Interpreted program received/listened for network traffic (user=%user.name\\\n    \\ command=%proc.cmdline connection=%fd.name container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"mitre_exfiltration\"\n  - \"network\"\n  append: false\n\n- rule: \"Interpreted procs outbound network activity\"\n  desc: \"Any outbound network activity performed by any interpreted program (perl,\\\n    \\ python, ruby, etc.)\"\n  condition: \"(outbound and consider_interpreted_outbound\\n and interpreted_procs)\\n\"\n  output: \"Interpreted program performed outgoing network connection (user=%user.name\\\n    \\ command=%proc.cmdline connection=%fd.name container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"mitre_exfiltration\"\n  - \"network\"\n  append: false\n\n- list: \"openvpn_udp_ports\"\n  items:\n  - \"1194\"\n  - \"1197\"\n  - \"1198\"\n  - \"8080\"\n  - \"9201\"\n  append: false\n\n- list: \"l2tp_udp_ports\"\n  items:\n  - \"500\"\n  - \"1701\"\n  - \"4500\"\n  - \"10000\"\n  append: false\n\n- list: \"statsd_ports\"\n  items:\n  - \"8125\"\n  append: false\n\n- list: \"ntp_ports\"\n  items:\n  - \"123\"\n  append: false\n\n- list: \"test_connect_ports\"\n  items:\n  - \"0\"\n  - \"9\"\n  - \"80\"\n  - \"3306\"\n  append: false\n\n- macro: \"do_unexpected_udp_check\"\n  condition: \"(never_true)\"\n  append: false\n\n- list: \"expected_udp_ports\"\n  items:\n  - \"53\"\n  - \"openvpn_udp_ports\"\n  - \"l2tp_udp_ports\"\n  - \"statsd_ports\"\n  - \"ntp_ports\"\n  - \"test_connect_ports\"\n  append: false\n\n- macro: \"expected_udp_traffic\"\n  condition: \"fd.port in (expected_udp_ports)\"\n  append: false\n\n- rule: \"Unexpected UDP Traffic\"\n  desc: \"UDP traffic not on port 53 (DNS) or other commonly used ports\"\n  condition: \"(inbound_outbound) and do_unexpected_udp_check and fd.l4proto=udp and\\\n    \\ not expected_udp_traffic\"\n  output: \"Unexpected UDP Traffic Seen (user=%user.name command=%proc.cmdline connection=%fd.name\\\n    \\ proto=%fd.l4proto evt=%evt.type %evt.args container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"NIST_3.1\"\n  - \"mitre_exfiltration\"\n  - \"NIST\"\n  - \"NIST_3.4.4\"\n  - \"network\"\n  append: false\n\n- macro: \"somebody_becoming_themself\"\n  condition: \"((user.name=nobody and evt.arg.uid=nobody) or (user.name=www-data and\\\n    \\ evt.arg.uid=www-data) or (user.name=_apt and evt.arg.uid=_apt) or (user.name=postfix\\\n    \\ and evt.arg.uid=postfix) or (user.name=pki-agent and evt.arg.uid=pki-agent)\\\n    \\ or (user.name=pki-acme and evt.arg.uid=pki-acme) or (user.name=nfsnobody and\\\n    \\ evt.arg.uid=nfsnobody) or (user.name=postgres and evt.arg.uid=postgres))\"\n  append: false\n\n- macro: \"nrpe_becoming_nagios\"\n  condition: \"(proc.name=nrpe and evt.arg.uid=nagios)\"\n  append: false\n\n- macro: \"known_user_in_container\"\n  condition: \"(container and user.name != \\\"N/A\\\")\"\n  append: false\n\n- macro: \"user_known_non_sudo_setuid_conditions\"\n  condition: \"user.name=root\"\n  append: false\n\n- rule: \"Non sudo setuid\"\n  desc: \"an attempt to change users by calling setuid. sudo/su are excluded. users\\\n    \\ \\\"root\\\" and \\\"nobody\\\" suing to itself are also excluded, as setuid calls typically\\\n    \\ involve dropping privileges.\\n\"\n  condition: \"evt.type=setuid and evt.dir=> and (known_user_in_container or not container)\\\n    \\ and not user.name=root and not somebody_becoming_themself and not proc.name\\\n    \\ in (known_setuid_binaries, userexec_binaries, mail_binaries, docker_binaries,\\n\\\n    \\                      nomachine_binaries)\\nand not proc.name startswith \\\"runc:\\\"\\\n    \\ and not java_running_sdjagent and not nrpe_becoming_nagios and not user_known_non_sudo_setuid_conditions\\n\"\n  output: \"Unexpected setuid call by non-sudo, non-root program (user=%user.name cur_uid=%user.uid\\\n    \\ parent=%proc.pname command=%proc.cmdline uid=%evt.arg.uid container_id=%container.id\\\n    \\ image=%container.image.repository)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"mitre_privilege_escalation\"\n  - \"users\"\n  append: false\n\n- rule: \"User mgmt binaries\"\n  desc: \"activity by any programs that can manage users, passwords, or permissions.\\\n    \\ sudo and su are excluded. Activity in containers is also excluded--some containers\\\n    \\ create custom users on top of a base linux distribution at startup. Some innocuous\\\n    \\ commandlines that don\'t actually change anything are excluded.\\n\"\n  condition: \"spawned_process and proc.name in (user_mgmt_binaries) and not proc.name\\\n    \\ in (su, sudo, lastlog, nologin, unix_chkpwd) and not container and not proc.pname\\\n    \\ in (cron_binaries, systemd, systemd.postins, udev.postinst, run-parts) and not\\\n    \\ proc.cmdline startswith \\\"passwd -S\\\" and not proc.cmdline startswith \\\"useradd\\\n    \\ -D\\\" and not proc.cmdline startswith \\\"systemd --version\\\" and not run_by_qualys\\\n    \\ and not run_by_sumologic_securefiles and not run_by_yum and not run_by_ms_oms\\\n    \\ and not run_by_google_accounts_daemon\\n\"\n  output: \"User management binary command run outside of container (user=%user.name\\\n    \\ command=%proc.cmdline parent=%proc.pname gparent=%proc.aname[2] ggparent=%proc.aname[3]\\\n    \\ gggparent=%proc.aname[4])\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"mitre_persistence\"\n  - \"host\"\n  - \"users\"\n  append: false\n\n- list: \"allowed_dev_files\"\n  items:\n  - \"/dev/null\"\n  - \"/dev/stdin\"\n  - \"/dev/stdout\"\n  - \"/dev/stderr\"\n  - \"/dev/random\"\n  - \"/dev/urandom\"\n  - \"/dev/console\"\n  - \"/dev/kmsg\"\n  append: false\n\n- rule: \"Create files below dev\"\n  desc: \"creating any files below /dev other than known programs that manage devices.\\\n    \\ Some rootkits hide files in /dev.\"\n  condition: \"fd.directory = /dev and (evt.type = creat or (evt.type = open and evt.arg.flags\\\n    \\ contains O_CREAT)) and not proc.name in (dev_creation_binaries) and not fd.name\\\n    \\ in (allowed_dev_files) and not fd.name startswith /dev/tty\\n\"\n  output: \"File created below /dev by untrusted program (user=%user.name command=%proc.cmdline\\\n    \\ file=%fd.name container_id=%container.id image=%container.image.repository)\"\n  priority: \"ERROR\"\n  tags:\n  - \"mitre_persistence\"\n  - \"NIST\"\n  - \"NIST_3.4.4\"\n  - \"filesystem\"\n  append: false\n\n- macro: \"ec2_metadata_containers\"\n  condition: \"container\"\n  append: false\n\n- rule: \"Contact EC2 Instance Metadata Service From Container\"\n  desc: \"Detect attempts to contact the EC2 Instance Metadata Service from a container\"\n  condition: \"outbound and fd.sip=\\\"169.254.169.254\\\" and container and not ec2_metadata_containers\"\n  output: \"Outbound connection to EC2 instance metadata service (command=%proc.cmdline\\\n    \\ connection=%fd.name %container.info image=%container.image.repository:%container.image.tag)\"\n  priority: \"NOTICE\"\n  tags:\n  - \"container\"\n  - \"aws\"\n  - \"mitre_discovery\"\n  - \"network\"\n  append: false\n\n- macro: \"consider_metadata_access\"\n  condition: \"(never_true)\"\n  append: false\n\n- macro: \"user_known_metadata_access\"\n  condition: \"(never_true)\"\n  append: false\n\n- rule: \"Contact cloud metadata service from container\"\n  desc: \"Detect attempts to contact the Cloud Instance Metadata Service from a container\"\n  condition: \"outbound and fd.sip=\\\"169.254.169.254\\\" and container and consider_metadata_access\\\n    \\ and not user_known_metadata_access\"\n  output: \"Outbound connection to cloud instance metadata service (command=%proc.cmdline\\\n    \\ connection=%fd.name %container.info image=%container.image.repository:%container.image.tag)\"\n  priority: \"NOTICE\"\n  tags:\n  - \"container\"\n  - \"mitre_discovery\"\n  - \"network\"\n  append: false\n\n- macro: \"k8s_containers\"\n  condition: \"(container.image.repository in (gcr.io/google_containers/hyperkube-amd64,\\n\\\n    \\ gcr.io/google_containers/kube2sky, sysdig/agent, sysdig/falco,\\n sysdig/sysdig,\\\n    \\ falcosecurity/falco))\\n\"\n  append: false\n\n- macro: \"k8s_api_server\"\n  condition: \"(fd.sip.name=\\\"1.2.3.4\\\")\"\n  append: false\n\n- rule: \"Contact K8S API Server From Container\"\n  desc: \"Detect attempts to contact the K8S API Server from a container\"\n  condition: \"evt.type=connect and evt.dir=< and (fd.typechar=4 or fd.typechar=6)\\\n    \\ and container and not k8s_containers and k8s_api_server\"\n  output: \"Unexpected connection to K8s API Server from container (command=%proc.cmdline\\\n    \\ %container.info image=%container.image.repository:%container.image.tag connection=%fd.name)\"\n  priority: \"NOTICE\"\n  tags:\n  - \"container\"\n  - \"k8s\"\n  - \"NIST\"\n  - \"NIST_3.4.2\"\n  - \"mitre_discovery\"\n  - \"NIST_3.4.4\"\n  - \"network\"\n  append: false\n\n- macro: \"nodeport_containers\"\n  condition: \"container\"\n  append: false\n\n- rule: \"Unexpected K8s NodePort Connection\"\n  desc: \"Detect attempts to use K8s NodePorts from a container\"\n  condition: \"(inbound_outbound) and fd.sport >= 30000 and fd.sport <= 32767 and container\\\n    \\ and not nodeport_containers\"\n  output: \"Unexpected K8s NodePort Connection (command=%proc.cmdline connection=%fd.name\\\n    \\ container_id=%container.id image=%container.image.repository)\"\n  priority: \"NOTICE\"\n  tags:\n  - \"container\"\n  - \"k8s\"\n  - \"NIST\"\n  - \"NIST_3.4.1\"\n  - \"NIST_3.4.2\"\n  - \"mitre_port_knocking\"\n  - \"network\"\n  append: false\n\n- list: \"network_tool_binaries\"\n  items:\n  - \"nc\"\n  - \"ncat\"\n  - \"nmap\"\n  - \"dig\"\n  - \"tcpdump\"\n  - \"tshark\"\n  - \"ngrep\"\n  - \"telnet\"\n  - \"mitmproxy\"\n  - \"socat\"\n  append: false\n\n- macro: \"network_tool_procs\"\n  condition: \"(proc.name in (network_tool_binaries))\"\n  append: false\n\n- macro: \"user_known_package_manager_in_container\"\n  condition: \"(never_true)\"\n  append: false\n\n- rule: \"Launch Package Management Process in Container\"\n  desc: \"Package management process ran inside container\"\n  condition: \"spawned_process and container and user.name != \\\"_apt\\\" and package_mgmt_procs\\\n    \\ and not package_mgmt_ancestor_procs and not user_known_package_manager_in_container\\n\"\n  output: \"Package management process launched in container (user=%user.name command=%proc.cmdline\\\n    \\ container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)\\n\"\n  priority: \"ERROR\"\n  tags:\n  - \"mitre_persistence\"\n  - \"process\"\n  append: false\n\n- rule: \"Netcat Remote Code Execution in Container\"\n  desc: \"Netcat Program runs inside container that allows remote code execution\"\n  condition: \"spawned_process and container and ((proc.name = \\\"nc\\\" and (proc.args\\\n    \\ contains \\\"-e\\\" or proc.args contains \\\"-c\\\")) or\\n (proc.name = \\\"ncat\\\" and\\\n    \\ (proc.args contains \\\"--sh-exec\\\" or proc.args contains \\\"--exec\\\" or proc.args\\\n    \\ contains \\\"-e \\\"\\n                          or proc.args contains \\\"-c \\\" or\\\n    \\ proc.args contains \\\"--lua-exec\\\"))\\n)\\n\"\n  output: \"Netcat runs inside container that allows remote code execution (user=%user.name\\\n    \\ command=%proc.cmdline container_id=%container.id container_name=%container.name\\\n    \\ image=%container.image.repository:%container.image.tag)\\n\"\n  priority: \"WARNING\"\n  tags:\n  - \"process\"\n  - \"mitre_execution\"\n  - \"network\"\n  append: false\n\n- rule: \"Launch Suspicious Network Tool in Container\"\n  desc: \"Detect network tools launched inside container\"\n  condition: \"spawned_process and container and network_tool_procs\\n\"\n  output: \"Network tool launched in container (user=%user.name command=%proc.cmdline\\\n    \\ parent_process=%proc.pname container_id=%container.id container_name=%container.name\\\n    \\ image=%container.image.repository:%container.image.tag)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"process\"\n  - \"mitre_exfiltration\"\n  - \"mitre_discovery\"\n  - \"network\"\n  append: false\n\n- macro: \"consider_network_tools_on_host\"\n  condition: \"(never_true)\"\n  append: false\n\n- rule: \"Launch Suspicious Network Tool on Host\"\n  desc: \"Detect network tools launched on the host\"\n  condition: \"spawned_process and not container and consider_network_tools_on_host\\\n    \\ and network_tool_procs\\n\"\n  output: \"Network tool launched on host (user=%user.name command=%proc.cmdline parent_process=%proc.pname)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"process\"\n  - \"mitre_exfiltration\"\n  - \"mitre_discovery\"\n  - \"network\"\n  append: false\n\n- list: \"grep_binaries\"\n  items:\n  - \"grep\"\n  - \"egrep\"\n  - \"fgrep\"\n  append: false\n\n- macro: \"grep_commands\"\n  condition: \"(proc.name in (grep_binaries))\"\n  append: false\n\n- macro: \"grep_more\"\n  condition: \"(never_true)\"\n  append: false\n\n- macro: \"private_key_or_password\"\n  condition: \"(proc.args icontains \\\"BEGIN PRIVATE\\\" or\\n proc.args icontains \\\"BEGIN\\\n    \\ RSA PRIVATE\\\" or\\n proc.args icontains \\\"BEGIN DSA PRIVATE\\\" or\\n proc.args\\\n    \\ icontains \\\"BEGIN EC PRIVATE\\\" or\\n (grep_more and\\n  (proc.args icontains \\\"\\\n    \\ pass \\\" or\\n   proc.args icontains \\\" ssh \\\" or\\n   proc.args icontains \\\" user\\\n    \\ \\\"))\\n)\\n\"\n  append: false\n\n- rule: \"Search Private Keys or Passwords\"\n  desc: \"Detect grep private keys or passwords activity.\\n\"\n  condition: \"(spawned_process and\\n ((grep_commands and private_key_or_password)\\\n    \\ or\\n  (proc.name = \\\"find\\\" and (proc.args contains \\\"id_rsa\\\" or proc.args\\\n    \\ contains \\\"id_dsa\\\")))\\n)\\n\"\n  output: \"Grep private keys or passwords activities found (user=%user.name command=%proc.cmdline\\\n    \\ container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)\\n\"\n  priority: \"WARNING\"\n  tags:\n  - \"mitre_credential_access\"\n  - \"process\"\n  - \"NIST\"\n  - \"NIST_3.1.4\"\n  append: false\n\n- list: \"log_directories\"\n  items:\n  - \"/var/log\"\n  - \"/dev/log\"\n  append: false\n\n- list: \"log_files\"\n  items:\n  - \"syslog\"\n  - \"auth.log\"\n  - \"secure\"\n  - \"kern.log\"\n  - \"cron\"\n  - \"user.log\"\n  - \"dpkg.log\"\n  - \"last.log\"\n  - \"yum.log\"\n  - \"access_log\"\n  - \"mysql.log\"\n  - \"mysqld.log\"\n  append: false\n\n- macro: \"access_log_files\"\n  condition: \"(fd.directory in (log_directories) or fd.filename in (log_files))\"\n  append: false\n\n- macro: \"allowed_clear_log_files\"\n  condition: \"(never_true)\"\n  append: false\n\n- macro: \"trusted_logging_images\"\n  condition: \"(container.image.repository endswith \\\"splunk/fluentd-hec\\\" or container.image.repository\\\n    \\ endswith \\\"fluent/fluentd-kubernetes-daemonset\\\" or container.image.repository\\\n    \\ endswith \\\"openshift3/ose-logging-fluentd\\\" or container.image.repository endswith\\\n    \\ \\\"containernetworking/azure-npm\\\")\"\n  append: false\n\n- rule: \"Clear Log Activities\"\n  desc: \"Detect clearing of critical log files\"\n  condition: \"open_write and access_log_files and evt.arg.flags contains \\\"O_TRUNC\\\"\\\n    \\ and not trusted_logging_images and not allowed_clear_log_files\\n\"\n  output: \"Log files were tampered (user=%user.name command=%proc.cmdline file=%fd.name\\\n    \\ container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"WARNING\"\n  tags:\n  - \"mitre_defense_evasion\"\n  - \"file\"\n  - \"PCI\"\n  - \"PCI_DSS_10.5.5\"\n  append: false\n\n- list: \"data_remove_commands\"\n  items:\n  - \"shred\"\n  - \"mkfs\"\n  - \"mke2fs\"\n  append: false\n\n- macro: \"clear_data_procs\"\n  condition: \"(proc.name in (data_remove_commands))\"\n  append: false\n\n- rule: \"Remove Bulk Data from Disk\"\n  desc: \"Detect process running to clear bulk data from disk\"\n  condition: \"spawned_process and clear_data_procs\"\n  output: \"Bulk data has been removed from disk (user=%user.name command=%proc.cmdline\\\n    \\ file=%fd.name container_id=%container.id image=%container.image.repository)\\n\"\n  priority: \"WARNING\"\n  tags:\n  - \"mitre_persistence\"\n  - \"process\"\n  append: false\n\n- rule: \"Delete or rename shell history\"\n  desc: \"Detect shell history deletion\"\n  condition: \"(modify and (\\n  evt.arg.name contains \\\"bash_history\\\" or\\n  evt.arg.name\\\n    \\ contains \\\"zsh_history\\\" or\\n  evt.arg.name contains \\\"fish_read_history\\\" or\\n\\\n    \\  evt.arg.name endswith \\\"fish_history\\\" or\\n  evt.arg.oldpath contains \\\"bash_history\\\"\\\n    \\ or\\n  evt.arg.oldpath contains \\\"zsh_history\\\" or\\n  evt.arg.oldpath contains\\\n    \\ \\\"fish_read_history\\\" or\\n  evt.arg.oldpath endswith \\\"fish_history\\\" or\\n \\\n    \\ evt.arg.path contains \\\"bash_history\\\" or\\n  evt.arg.path contains \\\"zsh_history\\\"\\\n    \\ or\\n  evt.arg.path contains \\\"fish_read_history\\\" or\\n  evt.arg.path endswith\\\n    \\ \\\"fish_history\\\")) or\\n(open_write and (\\n  fd.name contains \\\"bash_history\\\"\\\n    \\ or\\n  fd.name contains \\\"zsh_history\\\" or\\n  fd.name contains \\\"fish_read_history\\\"\\\n    \\ or\\n  fd.name endswith \\\"fish_history\\\") and evt.arg.flags contains \\\"O_TRUNC\\\"\\\n    )\\n\"\n  output: \"Shell history had been deleted or renamed (user=%user.name type=%evt.type\\\n    \\ command=%proc.cmdline fd.name=%fd.name name=%evt.arg.name path=%evt.arg.path\\\n    \\ oldpath=%evt.arg.oldpath %container.info)\\n\"\n  priority: \"WARNING\"\n  tags:\n  - \"mitre_defense_evasion\"\n  - \"process\"\n  append: false\n\n- rule: \"Delete Bash History\"\n  desc: \"Detect bash history deletion\"\n  condition: \"((spawned_process and proc.name in (shred, rm, mv) and proc.args contains\\\n    \\ \\\"bash_history\\\") or \\n (open_write and fd.name contains \\\"bash_history\\\" and\\\n    \\ evt.arg.flags contains \\\"O_TRUNC\\\"))\\n\"\n  output: \"Shell history had been deleted or renamed (user=%user.name type=%evt.type\\\n    \\ command=%proc.cmdline fd.name=%fd.name name=%evt.arg.name path=%evt.arg.path\\\n    \\ oldpath=%evt.arg.oldpath %container.info)\\n\"\n  priority: \"WARNING\"\n  tags:\n  - \"mitre_defense_evasion\"\n  - \"process\"\n  append: false\n\n- macro: \"consider_all_chmods\"\n  condition: \"(always_true)\"\n  append: false\n\n- list: \"user_known_chmod_applications\"\n  items:\n  - \"hyperkube\"\n  - \"kubelet\"\n  append: false\n\n- macro: \"user_known_set_setuid_or_setgid_bit_conditions\"\n  condition: \"(never_true)\"\n  append: false\n\n- rule: \"Set Setuid or Setgid bit\"\n  desc: \"When the setuid or setgid bits are set for an application, this means that\\\n    \\ the application will run with the privileges of the owning user or group respectively.\\\n    \\ Detect setuid or setgid bits set via chmod\\n\"\n  condition: \"consider_all_chmods and chmod and (evt.arg.mode contains \\\"S_ISUID\\\"\\\n    \\ or evt.arg.mode contains \\\"S_ISGID\\\") and not proc.name in (user_known_chmod_applications)\\\n    \\ and not exe_running_docker_save and not user_known_set_setuid_or_setgid_bit_conditions\\n\"\n  output: \"Setuid or setgid bit is set via chmod (fd=%evt.arg.fd filename=%evt.arg.filename\\\n    \\ mode=%evt.arg.mode user=%user.name process=%proc.name command=%proc.cmdline\\\n    \\ container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"mitre_persistence\"\n  - \"process\"\n  append: false\n\n- list: \"exclude_hidden_directories\"\n  items:\n  - \"/root/.cassandra\"\n  append: false\n\n- macro: \"consider_hidden_file_creation\"\n  condition: \"(never_true)\"\n  append: false\n\n- rule: \"Create Hidden Files or Directories\"\n  desc: \"Detect hidden files or directories created\"\n  condition: \"(consider_hidden_file_creation and (\\n  (modify and evt.arg.newpath\\\n    \\ contains \\\"/.\\\") or\\n  (mkdir and evt.arg.path contains \\\"/.\\\") or\\n  (open_write\\\n    \\ and evt.arg.flags contains \\\"O_CREAT\\\" and fd.name contains \\\"/.\\\" and not fd.name\\\n    \\ pmatch (exclude_hidden_directories)))\\n)\\n\"\n  output: \"Hidden file or directory created (user=%user.name command=%proc.cmdline\\\n    \\ file=%fd.name newpath=%evt.arg.newpath container_id=%container.id container_name=%container.name\\\n    \\ image=%container.image.repository:%container.image.tag)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"mitre_persistence\"\n  - \"file\"\n  append: false\n\n- list: \"remote_file_copy_binaries\"\n  items:\n  - \"rsync\"\n  - \"scp\"\n  - \"sftp\"\n  - \"dcp\"\n  append: false\n\n- macro: \"remote_file_copy_procs\"\n  condition: \"(proc.name in (remote_file_copy_binaries))\"\n  append: false\n\n- rule: \"Launch Remote File Copy Tools in Container\"\n  desc: \"Detect remote file copy tools launched in container\"\n  condition: \"spawned_process and container and remote_file_copy_procs\\n\"\n  output: \"Remote file copy tool launched in container (user=%user.name command=%proc.cmdline\\\n    \\ parent_process=%proc.pname container_id=%container.id container_name=%container.name\\\n    \\ image=%container.image.repository:%container.image.tag)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"process\"\n  - \"mitre_lateral_movement\"\n  - \"mitre_exfiltration\"\n  - \"network\"\n  append: false\n\n- rule: \"Create Symlink Over Sensitive Files\"\n  desc: \"Detect symlink created over sensitive files\"\n  condition: \"create_symlink and (evt.arg.target in (sensitive_file_names) or evt.arg.target\\\n    \\ in (sensitive_directory_names))\\n\"\n  output: \"Symlinks created over senstivie files (user=%user.name command=%proc.cmdline\\\n    \\ target=%evt.arg.target linkpath=%evt.arg.linkpath parent_process=%proc.pname)\\n\"\n  priority: \"NOTICE\"\n  tags:\n  - \"file\"\n  - \"mitre_exfiltration\"\n  - \"NIST\"\n  - \"NIST_3.4.3\"\n  append: false\n\n- list: \"miner_ports\"\n  items:\n  - \"25\"\n  - \"3333\"\n  - \"3334\"\n  - \"3335\"\n  - \"3336\"\n  - \"3357\"\n  - \"4444\"\n  - \"5555\"\n  - \"5556\"\n  - \"5588\"\n  - \"5730\"\n  - \"6099\"\n  - \"6666\"\n  - \"7777\"\n  - \"7778\"\n  - \"8000\"\n  - \"8001\"\n  - \"8008\"\n  - \"8080\"\n  - \"8118\"\n  - \"8333\"\n  - \"8888\"\n  - \"8899\"\n  - \"9332\"\n  - \"9999\"\n  - \"14433\"\n  - \"14444\"\n  - \"45560\"\n  - \"45700\"\n  append: false\n\n- list: \"miner_domains\"\n  items:\n  - \"asia1.ethpool.org\"\n  - \"ca.minexmr.com\"\n  - \"cn.stratum.slushpool.com\"\n  - \"de.minexmr.com\"\n  - \"eth-ar.dwarfpool.com\"\n  - \"eth-asia.dwarfpool.com\"\n  - \"eth-asia1.nanopool.org\"\n  - \"eth-au.dwarfpool.com\"\n  - \"eth-au1.nanopool.org\"\n  - \"eth-br.dwarfpool.com\"\n  - \"eth-cn.dwarfpool.com\"\n  - \"eth-cn2.dwarfpool.com\"\n  - \"eth-eu.dwarfpool.com\"\n  - \"eth-eu1.nanopool.org\"\n  - \"eth-eu2.nanopool.org\"\n  - \"eth-hk.dwarfpool.com\"\n  - \"eth-jp1.nanopool.org\"\n  - \"eth-ru.dwarfpool.com\"\n  - \"eth-ru2.dwarfpool.com\"\n  - \"eth-sg.dwarfpool.com\"\n  - \"eth-us-east1.nanopool.org\"\n  - \"eth-us-west1.nanopool.org\"\n  - \"eth-us.dwarfpool.com\"\n  - \"eth-us2.dwarfpool.com\"\n  - \"eu.stratum.slushpool.com\"\n  - \"eu1.ethermine.org\"\n  - \"eu1.ethpool.org\"\n  - \"fr.minexmr.com\"\n  - \"mine.moneropool.com\"\n  - \"mine.xmrpool.net\"\n  - \"pool.minexmr.com\"\n  - \"pool.monero.hashvault.pro\"\n  - \"pool.supportxmr.com\"\n  - \"sg.minexmr.com\"\n  - \"sg.stratum.slushpool.com\"\n  - \"stratum-eth.antpool.com\"\n  - \"stratum-ltc.antpool.com\"\n  - \"stratum-zec.antpool.com\"\n  - \"stratum.antpool.com\"\n  - \"us-east.stratum.slushpool.com\"\n  - \"us1.ethermine.org\"\n  - \"us1.ethpool.org\"\n  - \"us2.ethermine.org\"\n  - \"us2.ethpool.org\"\n  - \"xmr-asia1.nanopool.org\"\n  - \"xmr-au1.nanopool.org\"\n  - \"xmr-eu1.nanopool.org\"\n  - \"xmr-eu2.nanopool.org\"\n  - \"xmr-jp1.nanopool.org\"\n  - \"xmr-us-east1.nanopool.org\"\n  - \"xmr-us-west1.nanopool.org\"\n  - \"xmr.crypto-pool.fr\"\n  - \"xmr.pool.minergate.com\"\n  append: false\n\n- list: \"https_miner_domains\"\n  items:\n  - \"ca.minexmr.com\"\n  - \"cn.stratum.slushpool.com\"\n  - \"de.minexmr.com\"\n  - \"fr.minexmr.com\"\n  - \"mine.moneropool.com\"\n  - \"mine.xmrpool.net\"\n  - \"pool.minexmr.com\"\n  - \"sg.minexmr.com\"\n  - \"stratum-eth.antpool.com\"\n  - \"stratum-ltc.antpool.com\"\n  - \"stratum-zec.antpool.com\"\n  - \"stratum.antpool.com\"\n  - \"xmr.crypto-pool.fr\"\n  append: false\n\n- list: \"http_miner_domains\"\n  items:\n  - \"ca.minexmr.com\"\n  - \"de.minexmr.com\"\n  - \"fr.minexmr.com\"\n  - \"mine.moneropool.com\"\n  - \"mine.xmrpool.net\"\n  - \"pool.minexmr.com\"\n  - \"sg.minexmr.com\"\n  - \"xmr.crypto-pool.fr\"\n  append: false\n\n- macro: \"minerpool_https\"\n  condition: \"(fd.sport=\\\"443\\\" and fd.sip.name in (https_miner_domains))\"\n  append: false\n\n- macro: \"minerpool_http\"\n  condition: \"(fd.sport=\\\"80\\\" and fd.sip.name in (http_miner_domains))\"\n  append: false\n\n- macro: \"minerpool_other\"\n  condition: \"(fd.sport in (miner_ports) and fd.sip.name in (miner_domains))\"\n  append: false\n\n- macro: \"net_miner_pool\"\n  condition: \"(evt.type in (sendto, sendmsg) and evt.dir=< and (fd.net != \\\"127.0.0.0/8\\\"\\\n    \\ and not fd.snet in (rfc_1918_addresses)) and ((minerpool_http) or (minerpool_https)\\\n    \\ or (minerpool_other)))\"\n  append: false\n\n- macro: \"trusted_images_query_miner_domain_dns\"\n  condition: \"(container.image.repository endswith \\\"sysdig/agent\\\" or container.image.repository\\\n    \\ endswith \\\"falcosecurity/falco\\\")\"\n  append: false\n\n- rule: \"Detect outbound connections to common miner pool ports\"\n  desc: \"Miners typically connect to miner pools on common ports.\"\n  condition: \"net_miner_pool and not trusted_images_query_miner_domain_dns\"\n  output: \"Outbound connection to IP/Port flagged by cryptoioc.ch (command=%proc.cmdline\\\n    \\ port=%fd.rport ip=%fd.rip container=%container.info image=%container.image.repository)\"\n  priority: \"CRITICAL\"\n  tags:\n  - \"mitre_execution\"\n  - \"network\"\n  append: false\n\n- rule: \"Detect crypto miners using the Stratum protocol\"\n  desc: \"Miners typically specify the mining pool to connect to with a URI that begins\\\n    \\ with \'stratum+tcp\'\"\n  condition: \"spawned_process and proc.cmdline contains \\\"stratum+tcp\\\"\"\n  output: \"Possible miner running (command=%proc.cmdline container=%container.info\\\n    \\ image=%container.image.repository)\"\n  priority: \"CRITICAL\"\n  tags:\n  - \"PCI_DSS_5.1.2\"\n  - \"process\"\n  - \"mitre_execution\"\n  - \"PCI\"\n  append: false\n\n- list: \"k8s_client_binaries\"\n  items:\n  - \"docker\"\n  - \"kubectl\"\n  - \"crictl\"\n  append: false\n\n- macro: \"user_known_k8s_client_container\"\n  condition: \"(container.image.repository=k8s.gcr.io/fluentd-gcp-scaler) or container.image.repository=mcr.microsoft.com/aks/hcp/hcp-tunnel-front\\n\"\n  append: false\n\n- macro: \"user_known_k8s_client_container_parens\"\n  condition: \"(user_known_k8s_client_container)\"\n  append: false\n\n- rule: \"The docker client is executed in a container\"\n  desc: \"Detect a k8s client tool executed inside a container\"\n  condition: \"spawned_process and container and not user_known_k8s_client_container_parens\\\n    \\ and proc.name in (k8s_client_binaries)\"\n  output: \"Docker or kubernetes client executed in container (user=%user.name %container.info\\\n    \\ parent=%proc.pname cmdline=%proc.cmdline image=%container.image.repository:%container.image.tag)\"\n  priority: \"WARNING\"\n  tags:\n  - \"container\"\n  - \"mitre_execution\"\n  append: false\n\n- macro: \"consider_packet_socket_communication\"\n  condition: \"(never_true)\"\n  append: false\n\n- list: \"user_known_packet_socket_binaries\"\n  items: []\n  append: false\n\n- rule: \"Packet socket created in container\"\n  desc: \"Detect new packet socket at the device driver (OSI Layer 2) level in a container.\\\n    \\ Packet socket could be used to do ARP Spoofing by attacker.\"\n  condition: \"evt.type=socket and evt.arg[0]=AF_PACKET and consider_packet_socket_communication\\\n    \\ and container and not proc.name in (user_known_packet_socket_binaries)\"\n  output: \"Packet socket was created in a container (user=%user.name command=%proc.cmdline\\\n    \\ socket_info=%evt.args container_id=%container.id container_name=%container.name\\\n    \\ image=%container.image.repository:%container.image.tag)\"\n  priority: \"NOTICE\"\n  tags:\n  - \"mitre_discovery\"\n  - \"network\"\n  append: false\n\n- macro: \"enabled_rule_network_only_subnet\"\n  condition: \"(never_true)\"\n  append: false\n\n- list: \"images_allow_network_outside_subnet\"\n  items: []\n  append: false\n\n- list: \"namespace_scope_network_only_subnet\"\n  items: []\n  append: false\n\n- macro: \"network_local_subnet\"\n  condition: \"fd.rnet in (rfc_1918_addresses) or fd.ip = \\\"0.0.0.0\\\" or  fd.net =\\\n    \\ \\\"127.0.0.0/8\\\"\\n\"\n  append: false\n\n- rule: \"Network Connection outside Local Subnet\"\n  desc: \"Detect traffic to image outside local subnet.\"\n  condition: \"enabled_rule_network_only_subnet and inbound_outbound and container\\\n    \\ and not network_local_subnet and k8s.ns.name in (namespace_scope_network_only_subnet)\\n\"\n  output: \"Network connection outside local subnet (command=%proc.cmdline connection=%fd.name\\\n    \\ user=%user.name container_id=%container.id\\n image=%container.image.repository\\\n    \\ namespace=%k8s.ns.name\\n fd.rip.name=%fd.rip.name fd.lip.name=%fd.lip.name fd.cip.name=%fd.cip.name\\\n    \\ fd.sip.name=%fd.sip.name)\\n\"\n  priority: \"WARNING\"\n  tags:\n  - \"PCI\"\n  - \"NIST\"\n  - \"NIST_3.3.3\"\n  - \"PCI_DSS_6.4.2\"\n  - \"network\"\n  append: false\n\n- macro: \"allowed_port\"\n  condition: \"(never_true)\"\n  append: false\n\n- list: \"allowed_image\"\n  items: []\n  append: false\n\n- list: \"authorized_server_binaries\"\n  items: []\n  append: false\n\n- list: \"authorized_server_port\"\n  items: []\n  append: false\n\n- rule: \"Outbound or Inbound Traffic not to Authorized Server Process and Port\"\n  desc: \"Detect traffic that is not to authorized server process and port.\"\n  condition: \"allowed_port and inbound_outbound and container and container.image.repository\\\n    \\ in (allowed_image) and not proc.name in (authorized_server_binary) and not fd.sport\\\n    \\ in (authorized_server_port)\\n\"\n  output: \"Network connection outside authorized port and binary (command=%proc.cmdline\\\n    \\ connection=%fd.name user=%user.name container_id=%container.id  image=%container.image.repository)\\n\"\n  priority: \"WARNING\"\n  tags:\n  - \"PCI\"\n  - \"PCI_DSS_2.2.1\"\n  - \"PCI_DSS_6.4.2\"\n  - \"network\"\n  append: false\n\n- rule: \"Redirect STDOUT/STDIN to Network Connection in Container\"\n  desc: \"Detect redirecting stdout/stdin to network connection in container (potential\\\n    \\ reverse shell).\"\n  condition: \"evt.type=dup and evt.dir=> and container and fd.num in (0, 1, 2) and\\\n    \\ fd.type in (\\\"ipv4\\\", \\\"ipv6\\\")\"\n  output: \"Redirect stdout/stdin to network connection (user=%user.name %container.info\\\n    \\ process=%proc.name parent=%proc.pname cmdline=%proc.cmdline terminal=%proc.tty\\\n    \\ container_id=%container.id image=%container.image.repository fd.name=%fd.name\\\n    \\ fd.num=%fd.num fd.type=%fd.type fd.sip=%fd.sip)\\n\"\n  priority: \"WARNING\"\n  tags: []\n  append: false\n"
      }
    }
    files {
      filename: "k8s_audit_rules.yaml"
      variants {
        required_engine_version: 2
        content: "---\n- macro: \"k8s_audit_always_true\"\n  condition: \"(jevt.rawtime exists)\"\n  append: false\n\n- macro: \"k8s_audit_never_true\"\n  condition: \"(jevt.rawtime=0)\"\n  append: false\n\n- list: \"k8s_audit_stages\"\n  items:\n  - \"ResponseComplete\"\n  append: false\n\n- macro: \"non_system_user\"\n  condition: \"(not ka.user.name startswith \\\"system:\\\")\"\n  append: false\n\n- macro: \"kevt\"\n  condition: \"(jevt.value[/stage] in (k8s_audit_stages))\"\n  append: false\n\n- macro: \"kevt_started\"\n  condition: \"(jevt.value[/stage]=ResponseStarted)\"\n  append: false\n\n- list: \"vertical_pod_autoscaler_users\"\n  items:\n  - \"vpa-recommender\"\n  - \"vpa-updater\"\n  append: false\n\n- list: \"allowed_k8s_users\"\n  items:\n  - \"minikube\"\n  - \"minikube-user\"\n  - \"kubelet\"\n  - \"kops\"\n  - \"admin\"\n  - \"kube\"\n  - \"kube-proxy\"\n  - \"vertical_pod_autoscaler_users\"\n  append: false\n\n- rule: \"Disallowed K8s User\"\n  desc: \"Detect any k8s operation by users outside of an allowed set of users.\"\n  condition: \"kevt and non_system_user and not ka.user.name in (allowed_k8s_users)\"\n  output: \"K8s Operation performed by user not in allowed list of users (user=%ka.user.name\\\n    \\ target=%ka.target.name/%ka.target.resource verb=%ka.verb uri=%ka.uri resp=%ka.response.code)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  - \"PCI\"\n  - \"NIST\"\n  - \"NIST_3.3.2\"\n  - \"PCI_DSS_6.4.2\"\n  source: \"k8s_audit\"\n  append: false\n\n- macro: \"allowed_k8s_containers\"\n  condition: \"(k8s_audit_always_true)\"\n  append: false\n\n- macro: \"response_successful\"\n  condition: \"(ka.response.code startswith 2)\"\n  append: false\n\n- macro: \"kcreate\"\n  condition: \"ka.verb=create\"\n  append: false\n\n- macro: \"kmodify\"\n  condition: \"(ka.verb in (create,update,patch))\"\n  append: false\n\n- macro: \"kdelete\"\n  condition: \"ka.verb=delete\"\n  append: false\n\n- macro: \"pod\"\n  condition: \"ka.target.resource=pods and not ka.target.subresource exists\"\n  append: false\n\n- macro: \"pod_subresource\"\n  condition: \"ka.target.resource=pods and ka.target.subresource exists\"\n  append: false\n\n- macro: \"deployment\"\n  condition: \"ka.target.resource=deployments\"\n  append: false\n\n- macro: \"service\"\n  condition: \"ka.target.resource=services\"\n  append: false\n\n- macro: \"configmap\"\n  condition: \"ka.target.resource=configmaps\"\n  append: false\n\n- macro: \"namespace\"\n  condition: \"ka.target.resource=namespaces\"\n  append: false\n\n- macro: \"serviceaccount\"\n  condition: \"ka.target.resource=serviceaccounts\"\n  append: false\n\n- macro: \"clusterrole\"\n  condition: \"ka.target.resource=clusterroles\"\n  append: false\n\n- macro: \"clusterrolebinding\"\n  condition: \"ka.target.resource=clusterrolebindings\"\n  append: false\n\n- macro: \"role\"\n  condition: \"ka.target.resource=roles\"\n  append: false\n\n- macro: \"secret\"\n  condition: \"ka.target.resource=secrets\"\n  append: false\n\n- macro: \"health_endpoint\"\n  condition: \"ka.uri=/healthz\"\n  append: false\n\n- rule: \"Create Disallowed Pod\"\n  desc: \"Detect an attempt to start a pod with a container image outside of a list\\\n    \\ of allowed images.\\n\"\n  condition: \"kevt and pod and kcreate and not allowed_k8s_containers\"\n  output: \"Pod started with container not in allowed list (user=%ka.user.name pod=%ka.resp.name\\\n    \\ ns=%ka.target.namespace images=%ka.req.pod.containers.image)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  - \"NIST\"\n  - \"NIST_3.4.5\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"Create Privileged Pod\"\n  desc: \"Detect an attempt to start a pod with a privileged container\\n\"\n  condition: \"kevt and pod and kcreate and ka.req.pod.containers.privileged intersects\\\n    \\ (true) and not ka.req.pod.containers.image.repository in (falco_privileged_images)\"\n  output: \"Pod started with privileged container (user=%ka.user.name pod=%ka.resp.name\\\n    \\ ns=%ka.target.namespace images=%ka.req.pod.containers.image)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- macro: \"sensitive_vol_mount\"\n  condition: \"(ka.req.pod.volumes.hostpath intersects (/proc, /var/run/docker.sock,\\\n    \\ /, /etc, /root, /var/run/crio/crio.sock, /home/admin, /var/lib/kubelet, /var/lib/kubelet/pki,\\\n    \\ /etc/kubernetes, /etc/kubernetes/manifests))\\n\"\n  append: false\n\n- rule: \"Create Sensitive Mount Pod\"\n  desc: \"Detect an attempt to start a pod with a volume from a sensitive host directory\\\n    \\ (i.e. /proc). Exceptions are made for known trusted images.\\n\"\n  condition: \"kevt and pod and kcreate and sensitive_vol_mount and not ka.req.pod.containers.image.repository\\\n    \\ in (falco_sensitive_mount_images)\"\n  output: \"Pod started with sensitive mount (user=%ka.user.name pod=%ka.resp.name\\\n    \\ ns=%ka.target.namespace images=%ka.req.pod.containers.image volumes=%jevt.value[/requestObject/spec/volumes])\"\n  priority: \"WARNING\"\n  tags:\n  - \"NIST_3.3\"\n  - \"k8s\"\n  - \"NIST\"\n  - \"NIST_3.5.5\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"Create HostNetwork Pod\"\n  desc: \"Detect an attempt to start a pod using the host network.\"\n  condition: \"kevt and pod and kcreate and ka.req.pod.host_network intersects (true)\\\n    \\ and not ka.req.pod.containers.image.repository in (falco_hostnetwork_images)\"\n  output: \"Pod started using host network (user=%ka.user.name pod=%ka.resp.name ns=%ka.target.namespace\\\n    \\ images=%ka.req.pod.containers.image)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"Create NodePort Service\"\n  desc: \"Detect an attempt to start a service with a NodePort service type\\n\"\n  condition: \"kevt and service and kcreate and ka.req.service.type=NodePort\"\n  output: \"NodePort Service Created (user=%ka.user.name service=%ka.target.name ns=%ka.target.namespace\\\n    \\ ports=%ka.req.service.ports)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- macro: \"contains_private_credentials\"\n  condition: \"(ka.req.configmap.obj contains \\\"aws_access_key_id\\\" or\\n ka.req.configmap.obj\\\n    \\ contains \\\"aws-access-key-id\\\" or\\n ka.req.configmap.obj contains \\\"aws_s3_access_key_id\\\"\\\n    \\ or\\n ka.req.configmap.obj contains \\\"aws-s3-access-key-id\\\" or\\n ka.req.configmap.obj\\\n    \\ contains \\\"password\\\" or\\n ka.req.configmap.obj contains \\\"passphrase\\\")\\n\"\n  append: false\n\n- rule: \"Create/Modify Configmap With Private Credentials\"\n  desc: \"Detect creating/modifying a configmap containing a private credential (aws\\\n    \\ key, password, etc.)\\n\"\n  condition: \"kevt and configmap and kmodify and contains_private_credentials\"\n  output: \"K8s configmap with private credential (user=%ka.user.name verb=%ka.verb\\\n    \\ configmap=%ka.req.configmap.name config=%ka.req.configmap.obj)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"Anonymous Request Allowed\"\n  desc: \"Detect any request made by the anonymous user that was allowed\\n\"\n  condition: \"kevt and ka.user.name=system:anonymous and ka.auth.decision!=reject\\\n    \\ and not health_endpoint\"\n  output: \"Request by anonymous user allowed (user=%ka.user.name verb=%ka.verb uri=%ka.uri\\\n    \\ reason=%ka.auth.reason))\"\n  priority: \"WARNING\"\n  tags:\n  - \"PCI_DSS_6.5.8\"\n  - \"k8s\"\n  - \"PCI\"\n  - \"NIST\"\n  - \"NIST_3.3.2\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"Attach/Exec Pod\"\n  desc: \"Detect any attempt to attach/exec to a pod\\n\"\n  condition: \"kevt_started and pod_subresource and kcreate and ka.target.subresource\\\n    \\ in (exec,attach)\"\n  output: \"Attach/Exec to pod (user=%ka.user.name pod=%ka.target.name ns=%ka.target.namespace\\\n    \\ action=%ka.target.subresource command=%ka.uri.param[command])\"\n  priority: \"NOTICE\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- list: \"allowed_namespaces\"\n  items:\n  - \"kube-system\"\n  - \"kube-public\"\n  - \"default\"\n  append: false\n\n- rule: \"Create Disallowed Namespace\"\n  desc: \"Detect any attempt to create a namespace outside of a set of known namespaces\"\n  condition: \"kevt and namespace and kcreate and not ka.target.name in (allowed_namespaces)\"\n  output: \"Disallowed namespace created (user=%ka.user.name ns=%ka.target.name)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"Pod Created in Kube Namespace\"\n  desc: \"Detect any attempt to create a pod in the kube-system or kube-public namespaces\"\n  condition: \"kevt and pod and kcreate and ka.target.namespace in (kube-system, kube-public)\"\n  output: \"Pod created in kube namespace (user=%ka.user.name pod=%ka.resp.name ns=%ka.target.namespace\\\n    \\ images=%ka.req.pod.containers.image)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"Service Account Created in Kube Namespace\"\n  desc: \"Detect any attempt to create a serviceaccount in the kube-system or kube-public\\\n    \\ namespaces\"\n  condition: \"kevt and serviceaccount and kcreate and ka.target.namespace in (kube-system,\\\n    \\ kube-public) and response_successful\"\n  output: \"Service account created in kube namespace (user=%ka.user.name serviceaccount=%ka.target.name\\\n    \\ ns=%ka.target.namespace)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"System ClusterRole Modified/Deleted\"\n  desc: \"Detect any attempt to modify/delete a ClusterRole/Role starting with system\"\n  condition: \"kevt and (role or clusterrole) and (kmodify or kdelete) and (ka.target.name\\\n    \\ startswith \\\"system:\\\") and ka.target.name!=\\\"system:coredns\\\"\"\n  output: \"System ClusterRole/Role modified or deleted (user=%ka.user.name role=%ka.target.name\\\n    \\ ns=%ka.target.namespace action=%ka.verb)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"Attach to cluster-admin Role\"\n  desc: \"Detect any attempt to create a ClusterRoleBinding to the cluster-admin user\"\n  condition: \"kevt and clusterrolebinding and kcreate and ka.req.binding.role=cluster-admin\"\n  output: \"Cluster Role Binding to cluster-admin role (user=%ka.user.name subject=%ka.req.binding.subjects)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"ClusterRole With Wildcard Created\"\n  desc: \"Detect any attempt to create a Role/ClusterRole with wildcard resources or\\\n    \\ verbs\"\n  condition: \"kevt and (role or clusterrole) and kcreate and (ka.req.role.rules.resources\\\n    \\ intersects (\\\"*\\\") or ka.req.role.rules.verbs intersects (\\\"*\\\"))\"\n  output: \"Created Role/ClusterRole with wildcard (user=%ka.user.name role=%ka.target.name\\\n    \\ rules=%ka.req.role.rules)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  - \"PCI\"\n  - \"PCI_10.2\"\n  source: \"k8s_audit\"\n  append: false\n\n- macro: \"writable_verbs\"\n  condition: \"(ka.req.role.rules.verbs intersects (create, update, patch, delete,\\\n    \\ deletecollection))\\n\"\n  append: false\n\n- rule: \"ClusterRole With Write Privileges Created\"\n  desc: \"Detect any attempt to create a Role/ClusterRole that can perform write-related\\\n    \\ actions\"\n  condition: \"kevt and (role or clusterrole) and kcreate and writable_verbs\"\n  output: \"Created Role/ClusterRole with write privileges (user=%ka.user.name role=%ka.target.name\\\n    \\ rules=%ka.req.role.rules)\"\n  priority: \"NOTICE\"\n  tags:\n  - \"k8s\"\n  - \"PCI\"\n  - \"PCI_10.2\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"ClusterRole With Pod Exec Created\"\n  desc: \"Detect any attempt to create a Role/ClusterRole that can exec to pods\"\n  condition: \"kevt and (role or clusterrole) and kcreate and ka.req.role.rules.resources\\\n    \\ intersects (\\\"pods/exec\\\")\"\n  output: \"Created Role/ClusterRole with pod exec privileges (user=%ka.user.name role=%ka.target.name\\\n    \\ rules=%ka.req.role.rules)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  - \"PCI\"\n  - \"PCI_10.2\"\n  source: \"k8s_audit\"\n  append: false\n\n- macro: \"consider_activity_events\"\n  condition: \"(k8s_audit_always_true)\"\n  append: false\n\n- macro: \"kactivity\"\n  condition: \"(kevt and consider_activity_events)\"\n  append: false\n\n- rule: \"K8s Deployment Created\"\n  desc: \"Detect any attempt to create a deployment\"\n  condition: \"(kactivity and kcreate and deployment and response_successful)\"\n  output: \"K8s Deployment Created (user=%ka.user.name deployment=%ka.target.name ns=%ka.target.namespace\\\n    \\ resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s Deployment Deleted\"\n  desc: \"Detect any attempt to delete a deployment\"\n  condition: \"(kactivity and kdelete and deployment and response_successful)\"\n  output: \"K8s Deployment Deleted (user=%ka.user.name deployment=%ka.target.name ns=%ka.target.namespace\\\n    \\ resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s Service Created\"\n  desc: \"Detect any attempt to create a service\"\n  condition: \"(kactivity and kcreate and service and response_successful)\"\n  output: \"K8s Service Created (user=%ka.user.name service=%ka.target.name ns=%ka.target.namespace\\\n    \\ resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s Service Deleted\"\n  desc: \"Detect any attempt to delete a service\"\n  condition: \"(kactivity and kdelete and service and response_successful)\"\n  output: \"K8s Service Deleted (user=%ka.user.name service=%ka.target.name ns=%ka.target.namespace\\\n    \\ resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s ConfigMap Created\"\n  desc: \"Detect any attempt to create a configmap\"\n  condition: \"(kactivity and kcreate and configmap and response_successful)\"\n  output: \"K8s ConfigMap Created (user=%ka.user.name configmap=%ka.target.name ns=%ka.target.namespace\\\n    \\ resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s ConfigMap Deleted\"\n  desc: \"Detect any attempt to delete a configmap\"\n  condition: \"(kactivity and kdelete and configmap and response_successful)\"\n  output: \"K8s ConfigMap Deleted (user=%ka.user.name configmap=%ka.target.name ns=%ka.target.namespace\\\n    \\ resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s Namespace Created\"\n  desc: \"Detect any attempt to create a namespace\"\n  condition: \"(kactivity and kcreate and namespace and response_successful)\"\n  output: \"K8s Namespace Created (user=%ka.user.name namespace=%ka.target.name resp=%ka.response.code\\\n    \\ decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s Namespace Deleted\"\n  desc: \"Detect any attempt to delete a namespace\"\n  condition: \"(kactivity and non_system_user and kdelete and namespace and response_successful)\"\n  output: \"K8s Namespace Deleted (user=%ka.user.name namespace=%ka.target.name resp=%ka.response.code\\\n    \\ decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s Serviceaccount Created\"\n  desc: \"Detect any attempt to create a service account\"\n  condition: \"(kactivity and kcreate and serviceaccount and response_successful)\"\n  output: \"K8s Serviceaccount Created (user=%ka.user.name user=%ka.target.name ns=%ka.target.namespace\\\n    \\ resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s Serviceaccount Deleted\"\n  desc: \"Detect any attempt to delete a service account\"\n  condition: \"(kactivity and kdelete and serviceaccount and response_successful)\"\n  output: \"K8s Serviceaccount Deleted (user=%ka.user.name user=%ka.target.name ns=%ka.target.namespace\\\n    \\ resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s Role/Clusterrole Created\"\n  desc: \"Detect any attempt to create a cluster role/role\"\n  condition: \"(kactivity and kcreate and (clusterrole or role) and response_successful)\"\n  output: \"K8s Cluster Role Created (user=%ka.user.name role=%ka.target.name rules=%ka.req.role.rules\\\n    \\ resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s Role/Clusterrole Deleted\"\n  desc: \"Detect any attempt to delete a cluster role/role\"\n  condition: \"(kactivity and kdelete and (clusterrole or role) and response_successful)\"\n  output: \"K8s Cluster Role Deleted (user=%ka.user.name role=%ka.target.name resp=%ka.response.code\\\n    \\ decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s Role/Clusterrolebinding Created\"\n  desc: \"Detect any attempt to create a clusterrolebinding\"\n  condition: \"(kactivity and kcreate and clusterrolebinding and response_successful)\"\n  output: \"K8s Cluster Role Binding Created (user=%ka.user.name binding=%ka.target.name\\\n    \\ subjects=%ka.req.binding.subjects role=%ka.req.binding.role resp=%ka.response.code\\\n    \\ decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s Role/Clusterrolebinding Deleted\"\n  desc: \"Detect any attempt to delete a clusterrolebinding\"\n  condition: \"(kactivity and kdelete and clusterrolebinding and response_successful)\"\n  output: \"K8s Cluster Role Binding Deleted (user=%ka.user.name binding=%ka.target.name\\\n    \\ resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s Secret Created\"\n  desc: \"Detect any attempt to create a secret. Service account tokens are excluded.\"\n  condition: \"(kactivity and kcreate and secret and ka.target.namespace!=kube-system\\\n    \\ and non_system_user and response_successful)\"\n  output: \"K8s Secret Created (user=%ka.user.name secret=%ka.target.name ns=%ka.target.namespace\\\n    \\ resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"K8s Secret Deleted\"\n  desc: \"Detect any attempt to delete a secret Service account tokens are excluded.\"\n  condition: \"(kactivity and kdelete and secret and ka.target.namespace!=kube-system\\\n    \\ and non_system_user and response_successful)\"\n  output: \"K8s Secret Deleted (user=%ka.user.name secret=%ka.target.name ns=%ka.target.namespace\\\n    \\ resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)\"\n  priority: \"INFO\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- macro: \"consider_all_events\"\n  condition: \"(k8s_audit_never_true)\"\n  append: false\n\n- macro: \"kall\"\n  condition: \"(kevt and consider_all_events)\"\n  append: false\n\n- rule: \"All K8s Audit Events\"\n  desc: \"Match all K8s Audit Events\"\n  condition: \"kall\"\n  output: \"K8s Audit Event received (user=%ka.user.name verb=%ka.verb uri=%ka.uri\\\n    \\ obj=%jevt.obj)\"\n  priority: \"DEBUG\"\n  tags:\n  - \"k8s\"\n  source: \"k8s_audit\"\n  append: false\n\n- macro: \"allowed_full_admin_users\"\n  condition: \"(k8s_audit_always_true)\"\n  append: false\n\n- list: \"full_admin_k8s_users\"\n  items:\n  - \"admin\"\n  - \"kubernetes-admin\"\n  - \"kubernetes-admin@kubernetes\"\n  - \"kubernetes-admin@cluster.local\"\n  - \"minikube-user\"\n  append: false\n\n- rule: \"Full K8s Administrative Access\"\n  desc: \"Detect any k8s operation by a user name that may be an administrator with\\\n    \\ full access.\"\n  condition: \"kevt  and non_system_user  and ka.user.name in (admin_k8s_users)  and\\\n    \\ not allowed_full_admin_users\\n\"\n  output: \"K8s Operation performed by full admin user (user=%ka.user.name target=%ka.target.name/%ka.target.resource\\\n    \\ verb=%ka.verb uri=%ka.uri resp=%ka.response.code)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  - \"PCI\"\n  - \"NIST\"\n  - \"NIST_3.3.1\"\n  - \"PCI_DSS_2.1\"\n  source: \"k8s_audit\"\n  append: false\n\n- macro: \"ingress\"\n  condition: \"ka.target.resource=ingresses\"\n  append: false\n\n- macro: \"ingress_tls\"\n  condition: \"(jevt.value[/requestObject/spec/tls] exists)\"\n  append: false\n\n- rule: \"Ingress Object without TLS Certificate Created\"\n  desc: \"Detect any attempt to create an ingress without TLS certification.\"\n  condition: \"(kactivity and kcreate and ingress and response_successful and not ingress_tls)\\n\"\n  output: \"K8s Ingress Without TLS Cert Created (user=%ka.user.name ingress=%ka.target.name\\\n    \\ namespace=%ka.target.namespace)\\n\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  - \"PCI\"\n  - \"PCI_DSS_4.0\"\n  - \"network\"\n  source: \"k8s_audit\"\n  append: false\n\n- macro: \"node\"\n  condition: \"ka.target.resource=nodes\"\n  append: false\n\n- macro: \"allow_all_k8s_nodes\"\n  condition: \"(k8s_audit_always_true)\"\n  append: false\n\n- list: \"allowed_k8s_nodes\"\n  items: []\n  append: false\n\n- rule: \"Untrusted Node Successfully Joined the Cluster\"\n  desc: \"Detect a node successfully joined the cluster outside of the list of allowed\\\n    \\ nodes.\\n\"\n  condition: \"kevt and node  and kcreate  and response_successful  and not allow_all_k8s_nodes\\\n    \\  and not ka.target.name in (allowed_k8s_nodes)\\n\"\n  output: \"Node not in allowed list successfully joined the cluster (user=%ka.user.name\\\n    \\ node=%ka.target.name)\"\n  priority: \"ERROR\"\n  tags:\n  - \"k8s\"\n  - \"NIST\"\n  - \"NIST_3.3.5\"\n  source: \"k8s_audit\"\n  append: false\n\n- rule: \"Untrusted Node Unsuccessfully Tried to Join the Cluster\"\n  desc: \"Detect an unsuccessful attempt to join the cluster for a node not in the\\\n    \\ list of allowed nodes.\\n\"\n  condition: \"kevt and node  and kcreate  and not response_successful  and not allow_all_k8s_nodes\\\n    \\  and not ka.target.name in (allowed_k8s_nodes)\\n\"\n  output: \"Node not in allowed list tried unsuccessfully to join the cluster  (user=%ka.user.name\\\n    \\ node=%ka.target.name reason=%ka.response.reason)\"\n  priority: \"WARNING\"\n  tags:\n  - \"k8s\"\n  - \"NIST\"\n  - \"NIST_3.3.5\"\n  source: \"k8s_audit\"\n  append: false\n"
      }
    }
  }
  custom_files {
    tag: "0.7.3"
    files {
      filename: "falco_psp_rules.pod-security-policy-default-20191022172000.yaml"
      variants {
        required_engine_version: 0
        content: "####################\n# Your custom rules!\n####################\n\n# Add new rules, like this one\n# - rule: A shell is run in a container\n#   desc: An event will trigger every time you run a shell in a container\n#   condition: evt.type = execve and evt.dir=< and container.id != host and proc.name = bash\n#   output: \"Suspect shell run in container (user=%user.name %container.info shell=%proc.name parent=%proc.pname cmdline=%proc.cmdline)\"\n#   priority: ERROR\n#   tags: [shell]\n\n# Or override any rule, macro, or list from the Default Rules\n---\n- macro: \"psp_open_write\"\n  condition: \"(evt.type=open or evt.type=openat) and evt.is_open_write=true and fd.typechar=\'f\'\\\n    \\ and fd.num>=0\"\n  append: false\n"
      }
    }
    files {
      filename: "falco_rules_local.yaml"
      variants {
        required_engine_version: 0
        content: "####################\n# Your custom rules!\n####################\n\n# Add new rules, like this one\n# - rule: A shell is run in a container\n#   desc: An event will trigger every time you run a shell in a container\n#   condition: evt.type = execve and evt.dir=< and container.id != host and proc.name = bash\n#   output: \"Suspect shell run in container (user=%user.name %container.info shell=%proc.name parent=%proc.pname cmdline=%proc.cmdline)\"\n#   priority: ERROR\n#   tags: [shell]\n\n# Or override any rule, macro, or list from the Default Rules\n---\n- list: \"my list\"\n  items:\n  - \"one\"\n  - \"two\"\n  - \"three\"\n  - \"four\"\n  - \"six\"\n  append: false\n\n- list: \"test list\"\n  items:\n  - \"84\"\n  - \"tac\"\n  append: false\n\n- list: \"allowed_k8s_users\"\n  items:\n  - \"boeveo5d0f9li5032mtg-admin\"\n  - \"IAM#mark.stemm@sysdig.com\"\n  - \"boeveo5d0f9li5032mtg-controller-manager\"\n  append: true\n"
      }
    }
  }
}
fastengine_files {
  tag: "0.7.3"
  files {
    filename: "fast_engine_rules.yaml"
    json_content: "[]"
  }
}
