FROM {{ p.base_docker_image }}

MAINTAINER Sysdig <support@sysdig.com>

ENV SYSDIG_BUILD_KERNEL_MODULE={{ p.build_kernel_module }} \
    SYSDIG_LAUNCH_DRAGENT={{ p.launch_dragent }} \
    SYSDIG_HOST_ROOT=/host

{% if p.include_agent_package is defined %}
ENV SYSDIG_REPOSITORY {{ p.sysdig_repository }}

{% endif %}
{% if p.build_kernel_module and not p.include_agent_package is defined %}
COPY ./sysdigcloud-probe-loader /opt/draios/bin/

{% endif %}
{% if p.agent_version is defined %}
ENV SYSDIG_VERSION {{ p.agent_version }}

{% endif %}
{% if p.build_kernel_module == 1 %}
{% if p.include_agent_package == "local" %}
ENV AGENT_VERSION 0.1.1dev

{% endif %}
ENV HOME /root

{% endif %}

{% if p.base_docker_image != "adoptopenjdk/openjdk8:alpine-slim" %}
{% if p.include_agent_package == "apt" %}
ADD http://download.draios.com/apt-draios-priority /etc/apt/preferences.d/

{% endif %}

RUN apt-get update -o Acquire::Check-Valid-Until=false \
 && apt-get dist-upgrade -y \
 && apt-get install -y --no-install-recommends \
# current bash-completion is a security hole
# SMAGENT-1222
#   bash-completion
    curl \
    bzip2 \
    {% if p.IKS == None %}
        ca-certificates \
        iproute2 \
        procps \
        python3-distutils \
        python3-lib2to3 \
    {% endif %}
    {% if p.build_kernel_module %}
        {% if p.IKS == None %}
            clang-7 \
            dkms \
            gcc-8 \
            libelf-dev \
            libelf1 \
            llvm-7 \
            xz-utils \
        {% endif %}
        bc \
        gcc \
        libc6-dev \
        libmpx2 \
    {% endif %}
    {% if p.include_agent_package is defined %}
        gnupg2 \
        software-properties-common \
        {% if p.IKS == None %}
            python \
            && apt-get install -y --no-install-recommends apt-transport-https \
            && curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \
            && apt-add-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs | sed 's/^sid$/buster/') stable" \
            && apt-get update \
            && apt-get install --no-install-recommends docker-ce-cli \
        {% endif %}
    {% endif %}
 && rm -rf /var/lib/apt/lists/*

{% if p.build_kernel_module %}
# gcc 6 is no longer included in debian unstable, but we need it to
# build kernel modules on the default debian-based ami used by
# kops. So grab copies we've saved from debian snapshots with the
# prefix https://snapshot.debian.org/archive/debian/20170517T033514Z
# or so.

RUN curl -o cpp-6_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/cpp-6_6.3.0-18_amd64.deb \
    && curl -o gcc-6-base_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/gcc-6-base_6.3.0-18_amd64.deb \
    && curl -o gcc-6_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/gcc-6_6.3.0-18_amd64.deb \
    && curl -o libasan3_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libasan3_6.3.0-18_amd64.deb \
    && curl -o libcilkrts5_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libcilkrts5_6.3.0-18_amd64.deb \
    && curl -o libgcc-6-dev_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libgcc-6-dev_6.3.0-18_amd64.deb \
    && curl -o libubsan0_6.3.0-18_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libubsan0_6.3.0-18_amd64.deb \
    && curl -o libmpfr4_3.1.3-2_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libmpfr4_3.1.3-2_amd64.deb \
    && curl -o libisl15_0.18-1_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-6-debs/libisl15_0.18-1_amd64.deb \
    && dpkg -i cpp-6_6.3.0-18_amd64.deb gcc-6-base_6.3.0-18_amd64.deb gcc-6_6.3.0-18_amd64.deb libasan3_6.3.0-18_amd64.deb libcilkrts5_6.3.0-18_amd64.deb libgcc-6-dev_6.3.0-18_amd64.deb libubsan0_6.3.0-18_amd64.deb libmpfr4_3.1.3-2_amd64.deb libisl15_0.18-1_amd64.deb \
    && rm -f cpp-6_6.3.0-18_amd64.deb gcc-6-base_6.3.0-18_amd64.deb gcc-6_6.3.0-18_amd64.deb libasan3_6.3.0-18_amd64.deb libcilkrts5_6.3.0-18_amd64.deb libgcc-6-dev_6.3.0-18_amd64.deb libubsan0_6.3.0-18_amd64.deb libmpfr4_3.1.3-2_amd64.deb libisl15_0.18-1_amd64.deb

# gcc 5 is no longer included in debian unstable, but we need it to
# build centos kernels, which are 3.x based and explicitly want a gcc
# version 3, 4, or 5 compiler. So grab copies we've saved from debian
# snapshots with the prefix https://snapshot.debian.org/archive/debian/20190122T000000Z.

RUN curl -o cpp-5_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/cpp-5_5.5.0-12_amd64.deb \
 && curl -o gcc-5-base_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-5-base_5.5.0-12_amd64.deb \
 && curl -o gcc-5_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/gcc-5_5.5.0-12_amd64.deb \
 && curl -o libasan2_5.5.0-12_amd64.deb	https://s3.amazonaws.com/download.draios.com/dependencies/libasan2_5.5.0-12_amd64.deb \
 && curl -o libgcc-5-dev_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libgcc-5-dev_5.5.0-12_amd64.deb \
 && curl -o libisl15_0.18-4_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libisl15_0.18-4_amd64.deb \
 && curl -o libmpx0_5.5.0-12_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libmpx0_5.5.0-12_amd64.deb \
 && dpkg -i cpp-5_5.5.0-12_amd64.deb gcc-5-base_5.5.0-12_amd64.deb gcc-5_5.5.0-12_amd64.deb libasan2_5.5.0-12_amd64.deb libgcc-5-dev_5.5.0-12_amd64.deb libisl15_0.18-4_amd64.deb libmpx0_5.5.0-12_amd64.deb \
 && rm -f cpp-5_5.5.0-12_amd64.deb gcc-5-base_5.5.0-12_amd64.deb gcc-5_5.5.0-12_amd64.deb libasan2_5.5.0-12_amd64.deb libgcc-5-dev_5.5.0-12_amd64.deb libisl15_0.18-4_amd64.deb libmpx0_5.5.0-12_amd64.deb
{% endif %}

{% if p.include_agent_package is defined and p.IKS == None %}
#
# Download, verify, and install a AdoptOpenJDK's JRE
#
RUN JAVA_VERSION_MAJOR=8 \
 && JAVA_VERSION_MINOR=192 \
 && JAVA_VERSION_BUILD=12 \
 && JRE_ARCHIVE_FILE="/tmp/jre.tgz" \
 && curl -jksSlL -o "${JRE_ARCHIVE_FILE}" \
        https://github.com/AdoptOpenJDK/openjdk${JAVA_VERSION_MAJOR}-binaries/releases/download/jdk${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/OpenJDK${JAVA_VERSION_MAJOR}U-jre_x64_linux_hotspot_${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}b${JAVA_VERSION_BUILD}.tar.gz \
 && JAVA_PACKAGE_SHA256=$(curl -sSlL https://github.com/AdoptOpenJDK/openjdk${JAVA_VERSION_MAJOR}-binaries/releases/download/jdk${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/OpenJDK${JAVA_VERSION_MAJOR}U-jre_x64_linux_hotspot_${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}b${JAVA_VERSION_BUILD}.tar.gz.sha256.txt | awk '{ print $1 }') \
 && echo "${JAVA_PACKAGE_SHA256}  ${JRE_ARCHIVE_FILE}" > ${JRE_ARCHIVE_FILE}.sha256 \
 && sha256sum -c ${JRE_ARCHIVE_FILE}.sha256 \
 && tar -C /opt -zxf "${JRE_ARCHIVE_FILE}" \
 && rm "${JRE_ARCHIVE_FILE}" "${JRE_ARCHIVE_FILE}.sha256" \
 && JAVA_INSTALL_DIR="/opt/jdk${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}-jre" \
 && rm -r "${JAVA_INSTALL_DIR}/man" \
 && chown -R root:root "${JAVA_INSTALL_DIR}" \
 && (cd "${JAVA_INSTALL_DIR}/bin" && for i in $(ls); do ln -sf "${JAVA_INSTALL_DIR}/bin/$i" "/etc/alternatives/$i"; ln -sf "/etc/alternatives/$i" "/usr/bin/$i"; done) \
 && true
{% endif %}

{% if p.build_kernel_module %}
# Since our base Debian image ships with GCC 7 which breaks older kernels, revert the
# default to gcc-5.
# Older distributions of Debian use hardcoded versions of gcc in the kernel Makefile. We
# pretend to have them by creating symlinks to our default gcc.
# 4.9 is required for Debian Jessie+backports and 4.8 is required for Debian Jessie.
RUN rm -rf /usr/bin/gcc && ln -s /usr/bin/gcc-5 /usr/bin/gcc \
 && ln -s /usr/bin/gcc /usr/bin/gcc-4.9 \
 && ln -s /usr/bin/gcc /usr/bin/gcc-4.8

    {% if p.IKS == None %}
        RUN rm -rf /usr/bin/clang \
         && rm -rf /usr/bin/llc \
         && ln -s /usr/bin/clang-7 /usr/bin/clang \
         && ln -s /usr/bin/llc-7 /usr/bin/llc
    {% endif %}

{% endif %}
{% if p.include_agent_package == "apt" %}
RUN curl -s https://s3.amazonaws.com/download.draios.com/DRAIOS-GPG-KEY.public | apt-key add - \
 && curl -s -o /etc/apt/sources.list.d/draios.list http://download.draios.com/$SYSDIG_REPOSITORY/deb/draios.list \
 && apt-get update -o Acquire::Check-Valid-Until=false \
{% if p.build_kernel_module %}
 && apt-get install -y --no-install-recommends draios-agent \
{% else %}
 && apt-get install -y --no-install-recommends draios-agent-slim \
{% endif %}
 && apt-get clean \
 && rm -rf /opt/draios/lib/python-deps2.6 \
 && rm -rf /var/lib/apt/lists/* \
 && apt-get remove -y --purge apt-transport-https software-properties-common \
 && apt-get autoremove -y --purge

{% endif %}
{% if p.build_kernel_module %}
RUN rm -df /lib/modules \
 && ln -s $SYSDIG_HOST_ROOT/lib/modules /lib/modules

# debian:unstable head contains binutils 2.31, which generates
# binaries that are incompatible with kernels < 4.16. So manually
# forcibly install binutils 2.30-22 instead.
    {% if p.IKS == None %}
        RUN curl -s -o binutils_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/binutils_2.30-22_amd64.deb \
         && curl -s -o libbinutils_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/libbinutils_2.30-22_amd64.deb \
         && curl -s -o binutils-x86-64-linux-gnu_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/binutils-x86-64-linux-gnu_2.30-22_amd64.deb \
         && curl -s -o binutils-common_2.30-22_amd64.deb https://s3.amazonaws.com/download.draios.com/dependencies/binutils-common_2.30-22_amd64.deb \
         && dpkg -i *binutils*.deb \
         && rm -f *binutils*.deb
    {% endif %}

{% endif %}
{% if p.include_agent_package == "local" %}
ADD draios-${AGENT_VERSION}-x86_64-agent.deb /
RUN dpkg -i /draios-${AGENT_VERSION}-x86_64-agent.deb && rm -rf /opt/draios/lib/python-deps2.6

{% endif %}
{% else %}
COPY ./opt/draios /opt/draios

RUN apk update \
&& apk add --no-cache curl \
python \
bash \
procps \
iproute2 \
openssl \
docker-cli \
&& mkdir /opt/draios/run \
&& rm -rf /tmp/*.apk /var/cache/apk/* \
&& rm -rf /opt/draios/lib/python-deps2.6 \
&& chown -R root:root "${JAVA_HOME}" \
&& (cd "${JAVA_HOME}/bin" && for i in $(ls); do ln -sf "${JAVA_HOME}/bin/$i" "/usr/bin/$i"; done) \
&& true

{% endif %}
COPY ./docker-entrypoint.sh /

# remove python binaries and java packages to prevent CVE/VULNs
{% if p.IKS != None %}
# remove python binaries/packages
RUN dpkg -r --force-depends python python-minimal python2 python2.7 python2-minimal python3 python3.7 python3-minimal \
linux-libc-dev python3.7-minimal libpython3.7-minimal libpython3.7-stdlib && \
rm $(find / -name '*python*' -type f | grep bin/) && \
rm -r $(whereis python | sed -e 's/^python: //') && \
rm -r $(whereis python2 | sed -e 's/^python2: //') && \
rm -r $(whereis python3 | sed -e 's/^python3: //') && \
# remove jackson-databind
rm /opt/draios/share/sdjagent.jar
{% endif %}

ENTRYPOINT ["/docker-entrypoint.sh"]

